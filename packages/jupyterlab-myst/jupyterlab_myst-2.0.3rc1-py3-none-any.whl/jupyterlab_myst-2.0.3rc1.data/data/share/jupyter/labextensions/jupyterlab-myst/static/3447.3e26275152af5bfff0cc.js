"use strict";(self.webpackChunkjupyterlab_myst=self.webpackChunkjupyterlab_myst||[]).push([[3447],{23447:(r,e,o)=>{o.r(e),o.d(e,{ProofKind:()=>n,proofDirective:()=>p});var i=o(25694);const p={name:"proof",alias:["prf:proof","prf:theorem","prf:axiom","prf:lemma","prf:definition","prf:criterion","prf:remark","prf:conjecture","prf:corollary","prf:algorithm","prf:example","prf:property","prf:observation","prf:proposition","prf:assumption"],arg:{type:i.ParseTypesEnum.parsed},options:{label:{type:i.ParseTypesEnum.string},class:{type:i.ParseTypesEnum.string},nonumber:{type:i.ParseTypesEnum.boolean}},body:{type:i.ParseTypesEnum.parsed,required:!0},run(r){var e,o,p,n;const a=[];r.arg&&a.push({type:"admonitionTitle",children:r.arg}),r.body&&a.push(...r.body);const t=null!==(o=null===(e=r.options)||void 0===e?void 0:e.nonumber)&&void 0!==o&&o,s=null===(p=r.options)||void 0===p?void 0:p.label,{label:l,identifier:m}=(0,i.normalizeLabel)(s)||{};return[{type:"proof",kind:"proof"!==r.name?r.name.replace("prf:",""):void 0,label:l,identifier:m,class:null===(n=r.options)||void 0===n?void 0:n.class,enumerated:!t,children:a}]}};var n;!function(r){r.proof="proof",r.axiom="axiom",r.lemma="lemma",r.definition="definition",r.criterion="criterion",r.remark="remark",r.conjecture="conjecture",r.corollary="corollary",r.algorithm="algorithm",r.example="example",r.property="property",r.observation="observation",r.proposition="proposition",r.assumption="assumption",r.theorem="theorem"}(n||(n={}))}}]);