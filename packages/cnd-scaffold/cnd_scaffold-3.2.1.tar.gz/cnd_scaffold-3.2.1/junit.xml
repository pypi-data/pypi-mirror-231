<testsuite errors="0" timestamp="2023-09-21T13:11:40.484409" host="localhost" tests="72" skipped="0" failures="0" time="0.843120"><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000085" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000040" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _pull_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000518" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _commit_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000294" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should return the scheme if scheme is ok" file="tests/cnd_scaffold_spec.py" time="0.000228" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should raise an error if scheme is not ok" file="tests/cnd_scaffold_spec.py" time="0.000319" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.000154" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should raise an error if structure is not ok" file="tests/cnd_scaffold_spec.py" time="0.000271" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.023857" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file" file="tests/cnd_scaffold_spec.py" time="0.001624" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file with repeat" file="tests/cnd_scaffold_spec.py" time="0.001503" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return good content with jinja engine" file="tests/cnd_scaffold_spec.py" time="0.007659" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should throw error if invalid yaml" file="tests/cnd_scaffold_spec.py" time="0.002548" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should raise an error if structure is not valid" file="tests/cnd_scaffold_spec.py" time="0.001783" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008594" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008618" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008481" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.009939" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.017982" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008515" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should raise an error if file cannot be load" file="tests/cnd_scaffold_spec.py" time="0.008258" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should skip and return 0 if nothing to push for this step" file="tests/cnd_scaffold_spec.py" time="0.008421" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content for jinja engine it should replace data" file="tests/cnd_scaffold_spec.py" time="0.001512" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace when data is an array of dict" file="tests/cnd_scaffold_spec.py" time="0.000118" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000092" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000088" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000045" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000103" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000101" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should push files" file="tests/cnd_scaffold_spec.py" time="0.000794" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.001361" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000579" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000625" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000289" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000250" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000235" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000264" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000246" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000253" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000173" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000155" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000141" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000125" /><testcase classname="tests.file_spec" name="File __init__ it should init the print in the class" file="tests/file_spec.py" time="0.000053" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004638" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004357" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.006105" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.005882" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008859" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008628" /><testcase classname="tests.scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/scaffold_spec.py" time="0.000070" /><testcase classname="tests.scaffold_spec" name="CndScaffold _clean_file_name it should return the right path" file="tests/scaffold_spec.py" time="0.000054" /><testcase classname="tests.scaffold_spec" name="CndScaffold _clean_file_name it should return the right path" file="tests/scaffold_spec.py" time="0.000043" /><testcase classname="tests.scaffold_spec" name="CndScaffold update_step it should update the step" file="tests/scaffold_spec.py" time="0.000042" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001213" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001003" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io" file="tests/scaffold_spec.py" time="0.000060" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io if provider is not provide" file="tests/scaffold_spec.py" time="0.000069" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate file" file="tests/scaffold_spec.py" time="0.006630" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate multiple file" file="tests/scaffold_spec.py" time="0.009788" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should  repeat file" file="tests/scaffold_spec.py" time="0.009889" /><testcase classname="tests.structure_spec" name="Structure with provider __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000079" /><testcase classname="tests.structure_spec" name="Structure __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000063" /><testcase classname="tests.structure_spec" name="Structure structure getter it should return structure value" file="tests/structure_spec.py" time="0.000512" /><testcase classname="tests.structure_spec" name="Structure structure getter it should generate an error" file="tests/structure_spec.py" time="0.000364" /><testcase classname="tests.structure_spec" name="Structure schema getter it should return schema value" file="tests/structure_spec.py" time="0.000340" /><testcase classname="tests.structure_spec" name="Structure schema getter it should generate an error" file="tests/structure_spec.py" time="0.000324" /><testcase classname="tests.structure_spec" name="Structure files getter it should return schema value" file="tests/structure_spec.py" time="0.009205" /><testcase classname="tests.structure_spec" name="Structure files getter it should return cached value" file="tests/structure_spec.py" time="0.000086" /><testcase classname="tests.structure_spec" name="Structure _validate it should return true" file="tests/structure_spec.py" time="0.002416" /><testcase classname="tests.structure_spec" name="Structure _validate it should raise an error" file="tests/structure_spec.py" time="0.001467" /><testcase classname="tests.structure_spec" name="Structure get it should return file" file="tests/structure_spec.py" time="0.004607" /></testsuite>