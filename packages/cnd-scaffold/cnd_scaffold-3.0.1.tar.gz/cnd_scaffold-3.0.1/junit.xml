<testsuite errors="0" timestamp="2023-09-18T22:02:17.925551" host="localhost" tests="70" skipped="0" failures="0" time="0.853670"><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000100" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000046" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _pull_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000592" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _commit_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000346" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should return the scheme if scheme is ok" file="tests/cnd_scaffold_spec.py" time="0.000272" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should raise an error if scheme is not ok" file="tests/cnd_scaffold_spec.py" time="0.000372" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.000192" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should raise an error if structure is not ok" file="tests/cnd_scaffold_spec.py" time="0.000342" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.023776" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file" file="tests/cnd_scaffold_spec.py" time="0.001655" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file with repeat" file="tests/cnd_scaffold_spec.py" time="0.001564" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return good content with jinja engine" file="tests/cnd_scaffold_spec.py" time="0.008064" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should throw error if invalid yaml" file="tests/cnd_scaffold_spec.py" time="0.002687" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should raise an error if structure is not valid" file="tests/cnd_scaffold_spec.py" time="0.001850" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008099" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007347" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007422" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.010172" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.018133" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008708" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should raise an error if file cannot be load" file="tests/cnd_scaffold_spec.py" time="0.009084" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should skip and return 0 if nothing to push for this step" file="tests/cnd_scaffold_spec.py" time="0.008571" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content for jinja engine it should replace data" file="tests/cnd_scaffold_spec.py" time="0.001602" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace when data is an array of dict" file="tests/cnd_scaffold_spec.py" time="0.000120" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000084" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000077" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000041" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000070" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000072" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should push files" file="tests/cnd_scaffold_spec.py" time="0.000798" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.001407" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000600" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000606" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000231" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000281" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000242" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000252" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000279" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000251" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000186" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000128" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000159" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000128" /><testcase classname="tests.file_spec" name="File __init__ it should init the print in the class" file="tests/file_spec.py" time="0.000057" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004604" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004380" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.006122" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.005819" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008967" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008588" /><testcase classname="tests.scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/scaffold_spec.py" time="0.000057" /><testcase classname="tests.scaffold_spec" name="CndScaffold update_step it should update the step" file="tests/scaffold_spec.py" time="0.000045" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001085" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001003" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io" file="tests/scaffold_spec.py" time="0.000065" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io if provider is not provide" file="tests/scaffold_spec.py" time="0.000052" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate file" file="tests/scaffold_spec.py" time="0.006348" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate multiple file" file="tests/scaffold_spec.py" time="0.009301" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should  repeat file" file="tests/scaffold_spec.py" time="0.009366" /><testcase classname="tests.structure_spec" name="Structure with provider __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000076" /><testcase classname="tests.structure_spec" name="Structure __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000059" /><testcase classname="tests.structure_spec" name="Structure structure getter it should return structure value" file="tests/structure_spec.py" time="0.000705" /><testcase classname="tests.structure_spec" name="Structure structure getter it should generate an error" file="tests/structure_spec.py" time="0.000338" /><testcase classname="tests.structure_spec" name="Structure schema getter it should return schema value" file="tests/structure_spec.py" time="0.000288" /><testcase classname="tests.structure_spec" name="Structure schema getter it should generate an error" file="tests/structure_spec.py" time="0.000301" /><testcase classname="tests.structure_spec" name="Structure files getter it should return schema value" file="tests/structure_spec.py" time="0.009222" /><testcase classname="tests.structure_spec" name="Structure files getter it should return cached value" file="tests/structure_spec.py" time="0.000076" /><testcase classname="tests.structure_spec" name="Structure _validate it should return true" file="tests/structure_spec.py" time="0.002276" /><testcase classname="tests.structure_spec" name="Structure _validate it should raise an error" file="tests/structure_spec.py" time="0.001461" /><testcase classname="tests.structure_spec" name="Structure get it should return file" file="tests/structure_spec.py" time="0.004512" /></testsuite>