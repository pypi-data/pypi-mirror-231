<testsuite errors="0" timestamp="2023-09-19T14:12:27.219420" host="localhost" tests="70" skipped="0" failures="0" time="0.815011"><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000084" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000041" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _pull_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000548" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _commit_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000320" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should return the scheme if scheme is ok" file="tests/cnd_scaffold_spec.py" time="0.000201" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should raise an error if scheme is not ok" file="tests/cnd_scaffold_spec.py" time="0.000349" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.000175" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should raise an error if structure is not ok" file="tests/cnd_scaffold_spec.py" time="0.000314" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.024058" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file" file="tests/cnd_scaffold_spec.py" time="0.001617" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file with repeat" file="tests/cnd_scaffold_spec.py" time="0.001504" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return good content with jinja engine" file="tests/cnd_scaffold_spec.py" time="0.007654" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should throw error if invalid yaml" file="tests/cnd_scaffold_spec.py" time="0.002628" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should raise an error if structure is not valid" file="tests/cnd_scaffold_spec.py" time="0.001769" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008329" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007656" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008232" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.009977" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.017390" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008502" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should raise an error if file cannot be load" file="tests/cnd_scaffold_spec.py" time="0.008361" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should skip and return 0 if nothing to push for this step" file="tests/cnd_scaffold_spec.py" time="0.008383" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content for jinja engine it should replace data" file="tests/cnd_scaffold_spec.py" time="0.001277" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace when data is an array of dict" file="tests/cnd_scaffold_spec.py" time="0.000108" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000093" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000081" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000043" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000082" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000083" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should push files" file="tests/cnd_scaffold_spec.py" time="0.000727" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.001366" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000562" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000585" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000249" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000248" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000249" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000266" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000277" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000254" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000161" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000139" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000136" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000130" /><testcase classname="tests.file_spec" name="File __init__ it should init the print in the class" file="tests/file_spec.py" time="0.000047" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004232" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004223" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.005937" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.005811" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008463" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008425" /><testcase classname="tests.scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/scaffold_spec.py" time="0.000053" /><testcase classname="tests.scaffold_spec" name="CndScaffold update_step it should update the step" file="tests/scaffold_spec.py" time="0.000043" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001047" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.000957" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io" file="tests/scaffold_spec.py" time="0.000061" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io if provider is not provide" file="tests/scaffold_spec.py" time="0.000049" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate file" file="tests/scaffold_spec.py" time="0.006267" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate multiple file" file="tests/scaffold_spec.py" time="0.009167" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should  repeat file" file="tests/scaffold_spec.py" time="0.009103" /><testcase classname="tests.structure_spec" name="Structure with provider __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000060" /><testcase classname="tests.structure_spec" name="Structure __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000053" /><testcase classname="tests.structure_spec" name="Structure structure getter it should return structure value" file="tests/structure_spec.py" time="0.000639" /><testcase classname="tests.structure_spec" name="Structure structure getter it should generate an error" file="tests/structure_spec.py" time="0.000323" /><testcase classname="tests.structure_spec" name="Structure schema getter it should return schema value" file="tests/structure_spec.py" time="0.000304" /><testcase classname="tests.structure_spec" name="Structure schema getter it should generate an error" file="tests/structure_spec.py" time="0.000333" /><testcase classname="tests.structure_spec" name="Structure files getter it should return schema value" file="tests/structure_spec.py" time="0.008733" /><testcase classname="tests.structure_spec" name="Structure files getter it should return cached value" file="tests/structure_spec.py" time="0.000066" /><testcase classname="tests.structure_spec" name="Structure _validate it should return true" file="tests/structure_spec.py" time="0.002292" /><testcase classname="tests.structure_spec" name="Structure _validate it should raise an error" file="tests/structure_spec.py" time="0.001422" /><testcase classname="tests.structure_spec" name="Structure get it should return file" file="tests/structure_spec.py" time="0.004565" /></testsuite>