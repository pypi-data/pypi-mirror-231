<testsuite errors="0" timestamp="2023-09-19T18:00:44.319786" host="localhost" tests="70" skipped="0" failures="0" time="0.834305"><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000095" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000050" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _pull_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000576" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _commit_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000324" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should return the scheme if scheme is ok" file="tests/cnd_scaffold_spec.py" time="0.000232" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should raise an error if scheme is not ok" file="tests/cnd_scaffold_spec.py" time="0.000339" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.000194" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should raise an error if structure is not ok" file="tests/cnd_scaffold_spec.py" time="0.000296" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.023779" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file" file="tests/cnd_scaffold_spec.py" time="0.001626" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file with repeat" file="tests/cnd_scaffold_spec.py" time="0.001543" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return good content with jinja engine" file="tests/cnd_scaffold_spec.py" time="0.007854" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should throw error if invalid yaml" file="tests/cnd_scaffold_spec.py" time="0.002592" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should raise an error if structure is not valid" file="tests/cnd_scaffold_spec.py" time="0.001831" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007666" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007514" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.007719" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.010064" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.018162" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.008660" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should raise an error if file cannot be load" file="tests/cnd_scaffold_spec.py" time="0.008522" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should skip and return 0 if nothing to push for this step" file="tests/cnd_scaffold_spec.py" time="0.008497" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content for jinja engine it should replace data" file="tests/cnd_scaffold_spec.py" time="0.001555" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace when data is an array of dict" file="tests/cnd_scaffold_spec.py" time="0.000141" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000085" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000077" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000043" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000082" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000084" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should push files" file="tests/cnd_scaffold_spec.py" time="0.000760" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.001396" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000609" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000602" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000258" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000252" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000261" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000258" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000241" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000278" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000193" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000144" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000130" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000128" /><testcase classname="tests.file_spec" name="File __init__ it should init the print in the class" file="tests/file_spec.py" time="0.000056" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004593" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.004284" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.006138" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.005897" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008945" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.008642" /><testcase classname="tests.scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/scaffold_spec.py" time="0.000077" /><testcase classname="tests.scaffold_spec" name="CndScaffold update_step it should update the step" file="tests/scaffold_spec.py" time="0.000044" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.001192" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.000983" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io" file="tests/scaffold_spec.py" time="0.000063" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io if provider is not provide" file="tests/scaffold_spec.py" time="0.000050" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate file" file="tests/scaffold_spec.py" time="0.006531" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate multiple file" file="tests/scaffold_spec.py" time="0.009392" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should  repeat file" file="tests/scaffold_spec.py" time="0.009291" /><testcase classname="tests.structure_spec" name="Structure with provider __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000082" /><testcase classname="tests.structure_spec" name="Structure __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000060" /><testcase classname="tests.structure_spec" name="Structure structure getter it should return structure value" file="tests/structure_spec.py" time="0.000686" /><testcase classname="tests.structure_spec" name="Structure structure getter it should generate an error" file="tests/structure_spec.py" time="0.000347" /><testcase classname="tests.structure_spec" name="Structure schema getter it should return schema value" file="tests/structure_spec.py" time="0.000311" /><testcase classname="tests.structure_spec" name="Structure schema getter it should generate an error" file="tests/structure_spec.py" time="0.000332" /><testcase classname="tests.structure_spec" name="Structure files getter it should return schema value" file="tests/structure_spec.py" time="0.009080" /><testcase classname="tests.structure_spec" name="Structure files getter it should return cached value" file="tests/structure_spec.py" time="0.000082" /><testcase classname="tests.structure_spec" name="Structure _validate it should return true" file="tests/structure_spec.py" time="0.002308" /><testcase classname="tests.structure_spec" name="Structure _validate it should raise an error" file="tests/structure_spec.py" time="0.001428" /><testcase classname="tests.structure_spec" name="Structure get it should return file" file="tests/structure_spec.py" time="0.004499" /></testsuite>