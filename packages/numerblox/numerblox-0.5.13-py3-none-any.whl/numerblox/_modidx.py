# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/numerblox',
                'doc_host': 'https://crowdcent.github.io',
                'git_url': 'https://github.com/crowdcent/numerblox/',
                'lib_path': 'numerblox'},
  'syms': { 'numerblox.download': { 'numerblox.download.AwesomeCustomDownloader': ( 'download.html#awesomecustomdownloader',
                                                                                    'numerblox/download.py'),
                                    'numerblox.download.AwesomeCustomDownloader.__init__': ( 'download.html#awesomecustomdownloader.__init__',
                                                                                             'numerblox/download.py'),
                                    'numerblox.download.AwesomeCustomDownloader.download_inference_data': ( 'download.html#awesomecustomdownloader.download_inference_data',
                                                                                                            'numerblox/download.py'),
                                    'numerblox.download.AwesomeCustomDownloader.download_training_data': ( 'download.html#awesomecustomdownloader.download_training_data',
                                                                                                           'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader': ('download.html#basedownloader', 'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader.__call__': ( 'download.html#basedownloader.__call__',
                                                                                    'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader.__init__': ( 'download.html#basedownloader.__init__',
                                                                                    'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader._default_save_path': ( 'download.html#basedownloader._default_save_path',
                                                                                              'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader._load_json': ( 'download.html#basedownloader._load_json',
                                                                                      'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader.download_inference_data': ( 'download.html#basedownloader.download_inference_data',
                                                                                                   'numerblox/download.py'),
                                    'numerblox.download.BaseDownloader.download_training_data': ( 'download.html#basedownloader.download_training_data',
                                                                                                  'numerblox/download.py'),
                                    'numerblox.download.BaseIO': ('download.html#baseio', 'numerblox/download.py'),
                                    'numerblox.download.BaseIO.__init__': ('download.html#baseio.__init__', 'numerblox/download.py'),
                                    'numerblox.download.BaseIO._append_folder': ( 'download.html#baseio._append_folder',
                                                                                  'numerblox/download.py'),
                                    'numerblox.download.BaseIO._create_directory': ( 'download.html#baseio._create_directory',
                                                                                     'numerblox/download.py'),
                                    'numerblox.download.BaseIO._get_gcs_blob': ( 'download.html#baseio._get_gcs_blob',
                                                                                 'numerblox/download.py'),
                                    'numerblox.download.BaseIO.download_directory_from_gcs': ( 'download.html#baseio.download_directory_from_gcs',
                                                                                               'numerblox/download.py'),
                                    'numerblox.download.BaseIO.download_file_from_gcs': ( 'download.html#baseio.download_file_from_gcs',
                                                                                          'numerblox/download.py'),
                                    'numerblox.download.BaseIO.get_all_files': ( 'download.html#baseio.get_all_files',
                                                                                 'numerblox/download.py'),
                                    'numerblox.download.BaseIO.is_empty': ('download.html#baseio.is_empty', 'numerblox/download.py'),
                                    'numerblox.download.BaseIO.remove_base_directory': ( 'download.html#baseio.remove_base_directory',
                                                                                         'numerblox/download.py'),
                                    'numerblox.download.BaseIO.upload_directory_to_gcs': ( 'download.html#baseio.upload_directory_to_gcs',
                                                                                           'numerblox/download.py'),
                                    'numerblox.download.BaseIO.upload_file_to_gcs': ( 'download.html#baseio.upload_file_to_gcs',
                                                                                      'numerblox/download.py'),
                                    'numerblox.download.EODDownloader': ('download.html#eoddownloader', 'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.__init__': ( 'download.html#eoddownloader.__init__',
                                                                                   'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.download_inference_data': ( 'download.html#eoddownloader.download_inference_data',
                                                                                                  'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.download_training_data': ( 'download.html#eoddownloader.download_training_data',
                                                                                                 'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.generate_full_dataf': ( 'download.html#eoddownloader.generate_full_dataf',
                                                                                              'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.generate_stock_dataf': ( 'download.html#eoddownloader.generate_stock_dataf',
                                                                                               'numerblox/download.py'),
                                    'numerblox.download.EODDownloader.get_live_data': ( 'download.html#eoddownloader.get_live_data',
                                                                                        'numerblox/download.py'),
                                    'numerblox.download.KaggleDownloader': ('download.html#kaggledownloader', 'numerblox/download.py'),
                                    'numerblox.download.KaggleDownloader.__check_kaggle_import': ( 'download.html#kaggledownloader.__check_kaggle_import',
                                                                                                   'numerblox/download.py'),
                                    'numerblox.download.KaggleDownloader.__init__': ( 'download.html#kaggledownloader.__init__',
                                                                                      'numerblox/download.py'),
                                    'numerblox.download.KaggleDownloader.download_inference_data': ( 'download.html#kaggledownloader.download_inference_data',
                                                                                                     'numerblox/download.py'),
                                    'numerblox.download.KaggleDownloader.download_training_data': ( 'download.html#kaggledownloader.download_training_data',
                                                                                                    'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader': ( 'download.html#numeraiclassicdownloader',
                                                                                     'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.__get_dest_path': ( 'download.html#numeraiclassicdownloader.__get_dest_path',
                                                                                                     'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.__init__': ( 'download.html#numeraiclassicdownloader.__init__',
                                                                                              'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader._get_version_mapping': ( 'download.html#numeraiclassicdownloader._get_version_mapping',
                                                                                                          'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_example_data': ( 'download.html#numeraiclassicdownloader.download_example_data',
                                                                                                           'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_inference_data': ( 'download.html#numeraiclassicdownloader.download_inference_data',
                                                                                                             'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_live_data': ( 'download.html#numeraiclassicdownloader.download_live_data',
                                                                                                        'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_meta_model_preds': ( 'download.html#numeraiclassicdownloader.download_meta_model_preds',
                                                                                                               'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_single_dataset': ( 'download.html#numeraiclassicdownloader.download_single_dataset',
                                                                                                             'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.download_training_data': ( 'download.html#numeraiclassicdownloader.download_training_data',
                                                                                                            'numerblox/download.py'),
                                    'numerblox.download.NumeraiClassicDownloader.get_classic_features': ( 'download.html#numeraiclassicdownloader.get_classic_features',
                                                                                                          'numerblox/download.py')},
            'numerblox.evaluation': { 'numerblox.evaluation.BaseEvaluator': ('evaluation.html#baseevaluator', 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.__init__': ( 'evaluation.html#baseevaluator.__init__',
                                                                                       'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator._neutralize_series': ( 'evaluation.html#baseevaluator._neutralize_series',
                                                                                                 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator._normalize_uniform': ( 'evaluation.html#baseevaluator._normalize_uniform',
                                                                                                 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator._score_by_date': ( 'evaluation.html#baseevaluator._score_by_date',
                                                                                             'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.apy': ( 'evaluation.html#baseevaluator.apy',
                                                                                  'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.evaluation_one_col': ( 'evaluation.html#baseevaluator.evaluation_one_col',
                                                                                                 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.example_correlation': ( 'evaluation.html#baseevaluator.example_correlation',
                                                                                                  'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.exposure_dissimilarity': ( 'evaluation.html#baseevaluator.exposure_dissimilarity',
                                                                                                     'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.feature_neutral_mean_std_sharpe': ( 'evaluation.html#baseevaluator.feature_neutral_mean_std_sharpe',
                                                                                                              'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.full_evaluation': ( 'evaluation.html#baseevaluator.full_evaluation',
                                                                                              'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.max_drawdown': ( 'evaluation.html#baseevaluator.max_drawdown',
                                                                                           'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.max_feature_exposure': ( 'evaluation.html#baseevaluator.max_feature_exposure',
                                                                                                   'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.mean_std_sharpe': ( 'evaluation.html#baseevaluator.mean_std_sharpe',
                                                                                              'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.numerai_corr': ( 'evaluation.html#baseevaluator.numerai_corr',
                                                                                           'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.per_era_corrs': ( 'evaluation.html#baseevaluator.per_era_corrs',
                                                                                            'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.per_era_numerai_corrs': ( 'evaluation.html#baseevaluator.per_era_numerai_corrs',
                                                                                                    'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.plot_correlations': ( 'evaluation.html#baseevaluator.plot_correlations',
                                                                                                'numerblox/evaluation.py'),
                                      'numerblox.evaluation.BaseEvaluator.tbx_mean_std_sharpe': ( 'evaluation.html#baseevaluator.tbx_mean_std_sharpe',
                                                                                                  'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiClassicEvaluator': ( 'evaluation.html#numeraiclassicevaluator',
                                                                                        'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiClassicEvaluator.__init__': ( 'evaluation.html#numeraiclassicevaluator.__init__',
                                                                                                 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiClassicEvaluator.full_evaluation': ( 'evaluation.html#numeraiclassicevaluator.full_evaluation',
                                                                                                        'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiSignalsEvaluator': ( 'evaluation.html#numeraisignalsevaluator',
                                                                                        'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiSignalsEvaluator.__await_diagnostics': ( 'evaluation.html#numeraisignalsevaluator.__await_diagnostics',
                                                                                                            'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiSignalsEvaluator.__init__': ( 'evaluation.html#numeraisignalsevaluator.__init__',
                                                                                                 'numerblox/evaluation.py'),
                                      'numerblox.evaluation.NumeraiSignalsEvaluator.get_neutralized_corr': ( 'evaluation.html#numeraisignalsevaluator.get_neutralized_corr',
                                                                                                             'numerblox/evaluation.py')},
            'numerblox.index': {},
            'numerblox.key': { 'numerblox.key.Key': ('key.html#key', 'numerblox/key.py'),
                               'numerblox.key.Key.__init__': ('key.html#key.__init__', 'numerblox/key.py'),
                               'numerblox.key.Key.__repr__': ('key.html#key.__repr__', 'numerblox/key.py'),
                               'numerblox.key.Key.__str__': ('key.html#key.__str__', 'numerblox/key.py'),
                               'numerblox.key.load_key_from_json': ('key.html#load_key_from_json', 'numerblox/key.py')},
            'numerblox.misc': { 'numerblox.misc.AttrDict': ('misc.html#attrdict', 'numerblox/misc.py'),
                                'numerblox.misc.AttrDict.__init__': ('misc.html#attrdict.__init__', 'numerblox/misc.py')},
            'numerblox.model': { 'numerblox.model.AwesomeDirectoryModel': ('model.html#awesomedirectorymodel', 'numerblox/model.py'),
                                 'numerblox.model.AwesomeDirectoryModel.__init__': ( 'model.html#awesomedirectorymodel.__init__',
                                                                                     'numerblox/model.py'),
                                 'numerblox.model.AwesomeDirectoryModel.load_models': ( 'model.html#awesomedirectorymodel.load_models',
                                                                                        'numerblox/model.py'),
                                 'numerblox.model.AwesomeModel': ('model.html#awesomemodel', 'numerblox/model.py'),
                                 'numerblox.model.AwesomeModel.__init__': ('model.html#awesomemodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.AwesomeModel.predict': ('model.html#awesomemodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.BaseModel': ('model.html#basemodel', 'numerblox/model.py'),
                                 'numerblox.model.BaseModel.__call__': ('model.html#basemodel.__call__', 'numerblox/model.py'),
                                 'numerblox.model.BaseModel.__init__': ('model.html#basemodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.BaseModel.get_prediction_col_names': ( 'model.html#basemodel.get_prediction_col_names',
                                                                                         'numerblox/model.py'),
                                 'numerblox.model.BaseModel.predict': ('model.html#basemodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.CatBoostModel': ('model.html#catboostmodel', 'numerblox/model.py'),
                                 'numerblox.model.CatBoostModel.__init__': ('model.html#catboostmodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.CatBoostModel.load_models': ( 'model.html#catboostmodel.load_models',
                                                                                'numerblox/model.py'),
                                 'numerblox.model.ConstantModel': ('model.html#constantmodel', 'numerblox/model.py'),
                                 'numerblox.model.ConstantModel.__init__': ('model.html#constantmodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.ConstantModel.predict': ('model.html#constantmodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.DirectoryModel': ('model.html#directorymodel', 'numerblox/model.py'),
                                 'numerblox.model.DirectoryModel.__init__': ('model.html#directorymodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.DirectoryModel.load_models': ( 'model.html#directorymodel.load_models',
                                                                                 'numerblox/model.py'),
                                 'numerblox.model.DirectoryModel.predict': ('model.html#directorymodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.ExamplePredictionsModel': ('model.html#examplepredictionsmodel', 'numerblox/model.py'),
                                 'numerblox.model.ExamplePredictionsModel.__init__': ( 'model.html#examplepredictionsmodel.__init__',
                                                                                       'numerblox/model.py'),
                                 'numerblox.model.ExamplePredictionsModel._download_example_preds': ( 'model.html#examplepredictionsmodel._download_example_preds',
                                                                                                      'numerblox/model.py'),
                                 'numerblox.model.ExamplePredictionsModel._load_example_preds': ( 'model.html#examplepredictionsmodel._load_example_preds',
                                                                                                  'numerblox/model.py'),
                                 'numerblox.model.ExamplePredictionsModel.predict': ( 'model.html#examplepredictionsmodel.predict',
                                                                                      'numerblox/model.py'),
                                 'numerblox.model.ExternalCSVs': ('model.html#externalcsvs', 'numerblox/model.py'),
                                 'numerblox.model.ExternalCSVs.__init__': ('model.html#externalcsvs.__init__', 'numerblox/model.py'),
                                 'numerblox.model.ExternalCSVs._get_preds': ('model.html#externalcsvs._get_preds', 'numerblox/model.py'),
                                 'numerblox.model.ExternalCSVs.predict': ('model.html#externalcsvs.predict', 'numerblox/model.py'),
                                 'numerblox.model.JoblibModel': ('model.html#joblibmodel', 'numerblox/model.py'),
                                 'numerblox.model.JoblibModel.__init__': ('model.html#joblibmodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.JoblibModel.load_models': ('model.html#joblibmodel.load_models', 'numerblox/model.py'),
                                 'numerblox.model.LGBMModel': ('model.html#lgbmmodel', 'numerblox/model.py'),
                                 'numerblox.model.LGBMModel.__init__': ('model.html#lgbmmodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.LGBMModel.load_models': ('model.html#lgbmmodel.load_models', 'numerblox/model.py'),
                                 'numerblox.model.NumerBayCSVs': ('model.html#numerbaycsvs', 'numerblox/model.py'),
                                 'numerblox.model.NumerBayCSVs.__init__': ('model.html#numerbaycsvs.__init__', 'numerblox/model.py'),
                                 'numerblox.model.NumerBayCSVs._get_preds': ('model.html#numerbaycsvs._get_preds', 'numerblox/model.py'),
                                 'numerblox.model.NumerBayCSVs.api': ('model.html#numerbaycsvs.api', 'numerblox/model.py'),
                                 'numerblox.model.NumerBayCSVs.predict': ('model.html#numerbaycsvs.predict', 'numerblox/model.py'),
                                 'numerblox.model.RandomModel': ('model.html#randommodel', 'numerblox/model.py'),
                                 'numerblox.model.RandomModel.__init__': ('model.html#randommodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.RandomModel.predict': ('model.html#randommodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.SingleModel': ('model.html#singlemodel', 'numerblox/model.py'),
                                 'numerblox.model.SingleModel.__check_valid_suffix': ( 'model.html#singlemodel.__check_valid_suffix',
                                                                                       'numerblox/model.py'),
                                 'numerblox.model.SingleModel.__init__': ('model.html#singlemodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.SingleModel._load_model': ('model.html#singlemodel._load_model', 'numerblox/model.py'),
                                 'numerblox.model.SingleModel.predict': ('model.html#singlemodel.predict', 'numerblox/model.py'),
                                 'numerblox.model.WandbKerasModel': ('model.html#wandbkerasmodel', 'numerblox/model.py'),
                                 'numerblox.model.WandbKerasModel.__init__': ('model.html#wandbkerasmodel.__init__', 'numerblox/model.py'),
                                 'numerblox.model.WandbKerasModel._download_model': ( 'model.html#wandbkerasmodel._download_model',
                                                                                      'numerblox/model.py')},
            'numerblox.model_pipeline': { 'numerblox.model_pipeline.ModelPipeline': ( 'modelpipeline.html#modelpipeline',
                                                                                      'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.__call__': ( 'modelpipeline.html#modelpipeline.__call__',
                                                                                               'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.__init__': ( 'modelpipeline.html#modelpipeline.__init__',
                                                                                               'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.pipeline': ( 'modelpipeline.html#modelpipeline.pipeline',
                                                                                               'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.postprocess': ( 'modelpipeline.html#modelpipeline.postprocess',
                                                                                                  'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.preprocess': ( 'modelpipeline.html#modelpipeline.preprocess',
                                                                                                 'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipeline.process_models': ( 'modelpipeline.html#modelpipeline.process_models',
                                                                                                     'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection': ( 'modelpipeline.html#modelpipelinecollection',
                                                                                                'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection.__call__': ( 'modelpipeline.html#modelpipelinecollection.__call__',
                                                                                                         'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection.__init__': ( 'modelpipeline.html#modelpipelinecollection.__init__',
                                                                                                         'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection.get_pipeline': ( 'modelpipeline.html#modelpipelinecollection.get_pipeline',
                                                                                                             'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection.process_all_pipelines': ( 'modelpipeline.html#modelpipelinecollection.process_all_pipelines',
                                                                                                                      'numerblox/model_pipeline.py'),
                                          'numerblox.model_pipeline.ModelPipelineCollection.process_single_pipeline': ( 'modelpipeline.html#modelpipelinecollection.process_single_pipeline',
                                                                                                                        'numerblox/model_pipeline.py')},
            'numerblox.numerframe': { 'numerblox.numerframe.NumerFrame': ('numerframe.html#numerframe', 'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.__init__': ( 'numerframe.html#numerframe.__init__',
                                                                                    'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.__init_meta_attrs': ( 'numerframe.html#numerframe.__init_meta_attrs',
                                                                                             'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.__set_era_col': ( 'numerframe.html#numerframe.__set_era_col',
                                                                                         'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame._constructor': ( 'numerframe.html#numerframe._constructor',
                                                                                        'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_aux_data': ( 'numerframe.html#numerframe.get_aux_data',
                                                                                        'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_column_selection': ( 'numerframe.html#numerframe.get_column_selection',
                                                                                                'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_era_batch': ( 'numerframe.html#numerframe.get_era_batch',
                                                                                         'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_feature_data': ( 'numerframe.html#numerframe.get_feature_data',
                                                                                            'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_feature_target_pair': ( 'numerframe.html#numerframe.get_feature_target_pair',
                                                                                                   'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_pattern_data': ( 'numerframe.html#numerframe.get_pattern_data',
                                                                                            'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_prediction_aux_data': ( 'numerframe.html#numerframe.get_prediction_aux_data',
                                                                                                   'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_prediction_data': ( 'numerframe.html#numerframe.get_prediction_data',
                                                                                               'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_single_target_data': ( 'numerframe.html#numerframe.get_single_target_data',
                                                                                                  'numerblox/numerframe.py'),
                                      'numerblox.numerframe.NumerFrame.get_target_data': ( 'numerframe.html#numerframe.get_target_data',
                                                                                           'numerblox/numerframe.py'),
                                      'numerblox.numerframe.create_numerframe': ( 'numerframe.html#create_numerframe',
                                                                                  'numerblox/numerframe.py')},
            'numerblox.postprocessing': { 'numerblox.postprocessing.AwesomePostProcessor': ( 'postprocessing.html#awesomepostprocessor',
                                                                                             'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.AwesomePostProcessor.__init__': ( 'postprocessing.html#awesomepostprocessor.__init__',
                                                                                                      'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.AwesomePostProcessor.transform': ( 'postprocessing.html#awesomepostprocessor.transform',
                                                                                                       'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.BasePostProcessor': ( 'postprocessing.html#basepostprocessor',
                                                                                          'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.BasePostProcessor.__init__': ( 'postprocessing.html#basepostprocessor.__init__',
                                                                                                   'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.BasePostProcessor.transform': ( 'postprocessing.html#basepostprocessor.transform',
                                                                                                    'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.DonateWeightedEnsembler': ( 'postprocessing.html#donateweightedensembler',
                                                                                                'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.DonateWeightedEnsembler.__init__': ( 'postprocessing.html#donateweightedensembler.__init__',
                                                                                                         'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.DonateWeightedEnsembler._get_weights': ( 'postprocessing.html#donateweightedensembler._get_weights',
                                                                                                             'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.DonateWeightedEnsembler.transform': ( 'postprocessing.html#donateweightedensembler.transform',
                                                                                                          'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer': ( 'postprocessing.html#featureneutralizer',
                                                                                           'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.__init__': ( 'postprocessing.html#featureneutralizer.__init__',
                                                                                                    'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.neutralize': ( 'postprocessing.html#featureneutralizer.neutralize',
                                                                                                      'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.neutralize_cuda': ( 'postprocessing.html#featureneutralizer.neutralize_cuda',
                                                                                                           'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.normalize': ( 'postprocessing.html#featureneutralizer.normalize',
                                                                                                     'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.normalize_and_neutralize': ( 'postprocessing.html#featureneutralizer.normalize_and_neutralize',
                                                                                                                    'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeatureNeutralizer.transform': ( 'postprocessing.html#featureneutralizer.transform',
                                                                                                     'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer': ( 'postprocessing.html#featurepenalizer',
                                                                                         'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer.__exposures': ( 'postprocessing.html#featurepenalizer.__exposures',
                                                                                                     'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer.__init__': ( 'postprocessing.html#featurepenalizer.__init__',
                                                                                                  'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer.__train_loop_body': ( 'postprocessing.html#featurepenalizer.__train_loop_body',
                                                                                                           'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer._reduce_exposure': ( 'postprocessing.html#featurepenalizer._reduce_exposure',
                                                                                                          'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer._train_loop': ( 'postprocessing.html#featurepenalizer._train_loop',
                                                                                                     'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer.reduce_all_exposures': ( 'postprocessing.html#featurepenalizer.reduce_all_exposures',
                                                                                                              'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.FeaturePenalizer.transform': ( 'postprocessing.html#featurepenalizer.transform',
                                                                                                   'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.GeometricMeanEnsembler': ( 'postprocessing.html#geometricmeanensembler',
                                                                                               'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.GeometricMeanEnsembler.__init__': ( 'postprocessing.html#geometricmeanensembler.__init__',
                                                                                                        'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.GeometricMeanEnsembler.transform': ( 'postprocessing.html#geometricmeanensembler.transform',
                                                                                                         'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.MeanEnsembler': ( 'postprocessing.html#meanensembler',
                                                                                      'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.MeanEnsembler.__init__': ( 'postprocessing.html#meanensembler.__init__',
                                                                                               'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.MeanEnsembler.transform': ( 'postprocessing.html#meanensembler.transform',
                                                                                                'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.Standardizer': ( 'postprocessing.html#standardizer',
                                                                                     'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.Standardizer.__init__': ( 'postprocessing.html#standardizer.__init__',
                                                                                              'numerblox/postprocessing.py'),
                                          'numerblox.postprocessing.Standardizer.transform': ( 'postprocessing.html#standardizer.transform',
                                                                                               'numerblox/postprocessing.py')},
            'numerblox.preprocessing': { 'numerblox.preprocessing.AwesomePreProcessor': ( 'preprocessing.html#awesomepreprocessor',
                                                                                          'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.AwesomePreProcessor.__init__': ( 'preprocessing.html#awesomepreprocessor.__init__',
                                                                                                   'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.AwesomePreProcessor.transform': ( 'preprocessing.html#awesomepreprocessor.transform',
                                                                                                    'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BaseProcessor': ( 'preprocessing.html#baseprocessor',
                                                                                    'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BaseProcessor.__call__': ( 'preprocessing.html#baseprocessor.__call__',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BaseProcessor.__init__': ( 'preprocessing.html#baseprocessor.__init__',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BaseProcessor.transform': ( 'preprocessing.html#baseprocessor.transform',
                                                                                              'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor': ( 'preprocessing.html#bayesiangmmtargetprocessor',
                                                                                                 'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor.__get_features_target': ( 'preprocessing.html#bayesiangmmtargetprocessor.__get_features_target',
                                                                                                                       'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor.__init__': ( 'preprocessing.html#bayesiangmmtargetprocessor.__init__',
                                                                                                          'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor._fit_bgmm': ( 'preprocessing.html#bayesiangmmtargetprocessor._fit_bgmm',
                                                                                                           'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor._generate_target': ( 'preprocessing.html#bayesiangmmtargetprocessor._generate_target',
                                                                                                                  'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor._get_coefs': ( 'preprocessing.html#bayesiangmmtargetprocessor._get_coefs',
                                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.BayesianGMMTargetProcessor.transform': ( 'preprocessing.html#bayesiangmmtargetprocessor.transform',
                                                                                                           'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.CopyPreProcessor': ( 'preprocessing.html#copypreprocessor',
                                                                                       'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.CopyPreProcessor.__init__': ( 'preprocessing.html#copypreprocessor.__init__',
                                                                                                'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.CopyPreProcessor.transform': ( 'preprocessing.html#copypreprocessor.transform',
                                                                                                 'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.DifferencePreProcessor': ( 'preprocessing.html#differencepreprocessor',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.DifferencePreProcessor.__init__': ( 'preprocessing.html#differencepreprocessor.__init__',
                                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.DifferencePreProcessor.transform': ( 'preprocessing.html#differencepreprocessor.transform',
                                                                                                       'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.EraQuantileProcessor': ( 'preprocessing.html#eraquantileprocessor',
                                                                                           'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.EraQuantileProcessor.__init__': ( 'preprocessing.html#eraquantileprocessor.__init__',
                                                                                                    'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.EraQuantileProcessor._process_eras': ( 'preprocessing.html#eraquantileprocessor._process_eras',
                                                                                                         'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.EraQuantileProcessor.transform': ( 'preprocessing.html#eraquantileprocessor.transform',
                                                                                                     'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.FeatureSelectionPreProcessor': ( 'preprocessing.html#featureselectionpreprocessor',
                                                                                                   'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.FeatureSelectionPreProcessor.__init__': ( 'preprocessing.html#featureselectionpreprocessor.__init__',
                                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.FeatureSelectionPreProcessor.transform': ( 'preprocessing.html#featureselectionpreprocessor.transform',
                                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.GroupStatsPreProcessor': ( 'preprocessing.html#groupstatspreprocessor',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.GroupStatsPreProcessor.__init__': ( 'preprocessing.html#groupstatspreprocessor.__init__',
                                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.GroupStatsPreProcessor._add_group_features': ( 'preprocessing.html#groupstatspreprocessor._add_group_features',
                                                                                                                 'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.GroupStatsPreProcessor.transform': ( 'preprocessing.html#groupstatspreprocessor.transform',
                                                                                                       'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator': ( 'preprocessing.html#katsufeaturegenerator',
                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator.__ema1': ( 'preprocessing.html#katsufeaturegenerator.__ema1',
                                                                                                   'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator.__init__': ( 'preprocessing.html#katsufeaturegenerator.__init__',
                                                                                                     'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator._generate_features': ( 'preprocessing.html#katsufeaturegenerator._generate_features',
                                                                                                               'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator._macd': ( 'preprocessing.html#katsufeaturegenerator._macd',
                                                                                                  'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator._rsi': ( 'preprocessing.html#katsufeaturegenerator._rsi',
                                                                                                 'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator.feature_engineering': ( 'preprocessing.html#katsufeaturegenerator.feature_engineering',
                                                                                                                'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.KatsuFeatureGenerator.transform': ( 'preprocessing.html#katsufeaturegenerator.transform',
                                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.LagPreProcessor': ( 'preprocessing.html#lagpreprocessor',
                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.LagPreProcessor.__init__': ( 'preprocessing.html#lagpreprocessor.__init__',
                                                                                               'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.LagPreProcessor.transform': ( 'preprocessing.html#lagpreprocessor.transform',
                                                                                                'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.PandasTaFeatureGenerator': ( 'preprocessing.html#pandastafeaturegenerator',
                                                                                               'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.PandasTaFeatureGenerator.__init__': ( 'preprocessing.html#pandastafeaturegenerator.__init__',
                                                                                                        'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.PandasTaFeatureGenerator._generate_features': ( 'preprocessing.html#pandastafeaturegenerator._generate_features',
                                                                                                                  'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.PandasTaFeatureGenerator.add_features': ( 'preprocessing.html#pandastafeaturegenerator.add_features',
                                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.PandasTaFeatureGenerator.transform': ( 'preprocessing.html#pandastafeaturegenerator.transform',
                                                                                                         'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.ReduceMemoryProcessor': ( 'preprocessing.html#reducememoryprocessor',
                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.ReduceMemoryProcessor.__init__': ( 'preprocessing.html#reducememoryprocessor.__init__',
                                                                                                     'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.ReduceMemoryProcessor._reduce_mem_usage': ( 'preprocessing.html#reducememoryprocessor._reduce_mem_usage',
                                                                                                              'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.ReduceMemoryProcessor.transform': ( 'preprocessing.html#reducememoryprocessor.transform',
                                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.SignalsTargetProcessor': ( 'preprocessing.html#signalstargetprocessor',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.SignalsTargetProcessor.__init__': ( 'preprocessing.html#signalstargetprocessor.__init__',
                                                                                                      'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.SignalsTargetProcessor.transform': ( 'preprocessing.html#signalstargetprocessor.transform',
                                                                                                       'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TargetSelectionPreProcessor': ( 'preprocessing.html#targetselectionpreprocessor',
                                                                                                  'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TargetSelectionPreProcessor.__init__': ( 'preprocessing.html#targetselectionpreprocessor.__init__',
                                                                                                           'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TargetSelectionPreProcessor.transform': ( 'preprocessing.html#targetselectionpreprocessor.transform',
                                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TickerMapper': ( 'preprocessing.html#tickermapper',
                                                                                   'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TickerMapper.__init__': ( 'preprocessing.html#tickermapper.__init__',
                                                                                            'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.TickerMapper.transform': ( 'preprocessing.html#tickermapper.transform',
                                                                                             'numerblox/preprocessing.py'),
                                         'numerblox.preprocessing.display_processor_info': ( 'preprocessing.html#display_processor_info',
                                                                                             'numerblox/preprocessing.py')},
            'numerblox.submission': { 'numerblox.submission.BaseSubmitter': ('submission.html#basesubmitter', 'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.__call__': ( 'submission.html#basesubmitter.__call__',
                                                                                       'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.__init__': ( 'submission.html#basesubmitter.__init__',
                                                                                       'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter._check_value_range': ( 'submission.html#basesubmitter._check_value_range',
                                                                                                 'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter._get_model_id': ( 'submission.html#basesubmitter._get_model_id',
                                                                                            'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.combine_csvs': ( 'submission.html#basesubmitter.combine_csvs',
                                                                                           'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.full_submission': ( 'submission.html#basesubmitter.full_submission',
                                                                                              'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.get_model_mapping': ( 'submission.html#basesubmitter.get_model_mapping',
                                                                                                'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.save_csv': ( 'submission.html#basesubmitter.save_csv',
                                                                                       'numerblox/submission.py'),
                                      'numerblox.submission.BaseSubmitter.upload_predictions': ( 'submission.html#basesubmitter.upload_predictions',
                                                                                                 'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter': ( 'submission.html#numerbaysubmitter',
                                                                                  'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.__call__': ( 'submission.html#numerbaysubmitter.__call__',
                                                                                           'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.__init__': ( 'submission.html#numerbaysubmitter.__init__',
                                                                                           'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.combine_csvs': ( 'submission.html#numerbaysubmitter.combine_csvs',
                                                                                               'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.full_submission': ( 'submission.html#numerbaysubmitter.full_submission',
                                                                                                  'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.get_model_mapping': ( 'submission.html#numerbaysubmitter.get_model_mapping',
                                                                                                    'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.save_csv': ( 'submission.html#numerbaysubmitter.save_csv',
                                                                                           'numerblox/submission.py'),
                                      'numerblox.submission.NumerBaySubmitter.upload_predictions': ( 'submission.html#numerbaysubmitter.upload_predictions',
                                                                                                     'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiClassicSubmitter': ( 'submission.html#numeraiclassicsubmitter',
                                                                                        'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiClassicSubmitter.__init__': ( 'submission.html#numeraiclassicsubmitter.__init__',
                                                                                                 'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiClassicSubmitter.save_csv': ( 'submission.html#numeraiclassicsubmitter.save_csv',
                                                                                                 'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiSignalsSubmitter': ( 'submission.html#numeraisignalssubmitter',
                                                                                        'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiSignalsSubmitter.__init__': ( 'submission.html#numeraisignalssubmitter.__init__',
                                                                                                 'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiSignalsSubmitter._check_ticker_format': ( 'submission.html#numeraisignalssubmitter._check_ticker_format',
                                                                                                             'numerblox/submission.py'),
                                      'numerblox.submission.NumeraiSignalsSubmitter.save_csv': ( 'submission.html#numeraisignalssubmitter.save_csv',
                                                                                                 'numerblox/submission.py')}}}
