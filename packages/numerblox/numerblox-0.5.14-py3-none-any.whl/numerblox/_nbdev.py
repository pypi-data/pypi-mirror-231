# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"AttrDict": "00_misc.ipynb",
         "BaseIO": "01_download.ipynb",
         "BaseDownloader": "01_download.ipynb",
         "NumeraiClassicDownloader": "01_download.ipynb",
         "KaggleDownloader": "01_download.ipynb",
         "PandasDataReader": "01_download.ipynb",
         "FinnhubDownloader": "01_download.ipynb",
         "EODDownloader": "01_download.ipynb",
         "AwesomeCustomDownloader": "01_download.ipynb",
         "NumerFrame": "02_numerframe.ipynb",
         "create_numerframe": "02_numerframe.ipynb",
         "BaseProcessor": "03_preprocessing.ipynb",
         "display_processor_info": "03_preprocessing.ipynb",
         "CopyPreProcessor": "03_preprocessing.ipynb",
         "FeatureSelectionPreProcessor": "03_preprocessing.ipynb",
         "TargetSelectionPreProcessor": "03_preprocessing.ipynb",
         "ReduceMemoryProcessor": "03_preprocessing.ipynb",
         "DeepDreamGenerator": "03_preprocessing.ipynb",
         "UMAPFeatureGenerator": "03_preprocessing.ipynb",
         "BayesianGMMTargetProcessor": "03_preprocessing.ipynb",
         "GroupStatsPreProcessor": "03_preprocessing.ipynb",
         "TalibFeatureGenerator": "03_preprocessing.ipynb",
         "KatsuFeatureGenerator": "03_preprocessing.ipynb",
         "EraQuantileProcessor": "03_preprocessing.ipynb",
         "TickerMapper": "03_preprocessing.ipynb",
         "SignalsTargetProcessor": "03_preprocessing.ipynb",
         "LagPreProcessor": "03_preprocessing.ipynb",
         "DifferencePreProcessor": "03_preprocessing.ipynb",
         "AwesomePreProcessor": "03_preprocessing.ipynb",
         "BaseModel": "04_model.ipynb",
         "DirectoryModel": "04_model.ipynb",
         "SingleModel": "04_model.ipynb",
         "WandbKerasModel": "04_model.ipynb",
         "ExternalCSVs": "04_model.ipynb",
         "NumerBayCSVs": "04_model.ipynb",
         "JoblibModel": "04_model.ipynb",
         "CatBoostModel": "04_model.ipynb",
         "LGBMModel": "04_model.ipynb",
         "ConstantModel": "04_model.ipynb",
         "RandomModel": "04_model.ipynb",
         "ExamplePredictionsModel": "04_model.ipynb",
         "AwesomeModel": "04_model.ipynb",
         "AwesomeDirectoryModel": "04_model.ipynb",
         "BasePostProcessor": "05_postprocessing.ipynb",
         "Standardizer": "05_postprocessing.ipynb",
         "MeanEnsembler": "05_postprocessing.ipynb",
         "DonateWeightedEnsembler": "05_postprocessing.ipynb",
         "GeometricMeanEnsembler": "05_postprocessing.ipynb",
         "FeatureNeutralizer": "05_postprocessing.ipynb",
         "FeaturePenalizer": "05_postprocessing.ipynb",
         "AwesomePostProcessor": "05_postprocessing.ipynb",
         "ModelPipeline": "06_modelpipeline.ipynb",
         "ModelPipelineCollection": "06_modelpipeline.ipynb",
         "FNCV3_FEATURES": "07_evaluation.ipynb",
         "MEDIUM_FEATURES": "07_evaluation.ipynb",
         "BaseEvaluator": "07_evaluation.ipynb",
         "NumeraiClassicEvaluator": "07_evaluation.ipynb",
         "NumeraiSignalsEvaluator": "07_evaluation.ipynb",
         "Key": "08_key.ipynb",
         "load_key_from_json": "08_key.ipynb",
         "BaseSubmitter": "09_submission.ipynb",
         "NumeraiClassicSubmitter": "09_submission.ipynb",
         "NumeraiSignalsSubmitter": "09_submission.ipynb",
         "NumerBaySubmitter": "09_submission.ipynb",
         "BaseStaker": "10_staking.ipynb",
         "NumeraiClassicStaker": "10_staking.ipynb",
         "NumeraiSignalsStaker": "10_staking.ipynb"}

modules = ["misc.py",
           "download.py",
           "numerframe.py",
           "preprocessing.py",
           "model.py",
           "postprocessing.py",
           "model_pipeline.py",
           "evaluation.py",
           "key.py",
           "submission.py",
           "staking.py"]

doc_url = "https://crowdcent.github.io/numerblox"

git_url = "https://github.com/crowdcent/numerblox/tree/master/"

def custom_doc_links(name): return None
