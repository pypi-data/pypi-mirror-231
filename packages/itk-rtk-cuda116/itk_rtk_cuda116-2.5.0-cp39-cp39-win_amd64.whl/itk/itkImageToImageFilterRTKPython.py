# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToImageFilterRTKPython
else:
    import _itkImageToImageFilterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageToImageFilterRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageToImageFilterRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkCudaImagePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImageDataManagerPython
import itk.itkImageRegionRTKPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkCudaImageRTKPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython
import itk.itkImageSourceCudaCommonPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourceRTKPython
import itk.itkImageSourcePython
class itkImageToImageFilterCIF2CIF2(itk.itkImageSourceCudaCommonPython.itkImageSourceCIF2):
    r"""Proxy of C++ itkImageToImageFilterCIF2CIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIF2CIF2
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_cast)

# Register itkImageToImageFilterCIF2CIF2 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_swigregister(itkImageToImageFilterCIF2CIF2)
itkImageToImageFilterCIF2CIF2_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIF2CIF2_cast

class itkImageToImageFilterCIF3CIF3(itk.itkImageSourceCudaCommonPython.itkImageSourceCIF3):
    r"""Proxy of C++ itkImageToImageFilterCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIF3CIF3
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_cast)

# Register itkImageToImageFilterCIF3CIF3 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_swigregister(itkImageToImageFilterCIF3CIF3)
itkImageToImageFilterCIF3CIF3_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIF3CIF3_cast

class itkImageToImageFilterCIF4CIF4(itk.itkImageSourceCudaCommonPython.itkImageSourceCIF4):
    r"""Proxy of C++ itkImageToImageFilterCIF4CIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIF4CIF4
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_cast)

# Register itkImageToImageFilterCIF4CIF4 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_swigregister(itkImageToImageFilterCIF4CIF4)
itkImageToImageFilterCIF4CIF4_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIF4CIF4_cast

class itkImageToImageFilterCIVF22CIVF22(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF22):
    r"""Proxy of C++ itkImageToImageFilterCIVF22CIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF22CIVF22
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_cast)

# Register itkImageToImageFilterCIVF22CIVF22 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_swigregister(itkImageToImageFilterCIVF22CIVF22)
itkImageToImageFilterCIVF22CIVF22_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF22CIVF22_cast

class itkImageToImageFilterCIVF23CIVF23(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF23):
    r"""Proxy of C++ itkImageToImageFilterCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF23CIVF23
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_cast)

# Register itkImageToImageFilterCIVF23CIVF23 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_swigregister(itkImageToImageFilterCIVF23CIVF23)
itkImageToImageFilterCIVF23CIVF23_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF23CIVF23_cast

class itkImageToImageFilterCIVF24CIVF24(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF24):
    r"""Proxy of C++ itkImageToImageFilterCIVF24CIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF24CIVF24
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_cast)

# Register itkImageToImageFilterCIVF24CIVF24 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_swigregister(itkImageToImageFilterCIVF24CIVF24)
itkImageToImageFilterCIVF24CIVF24_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF24CIVF24_cast

class itkImageToImageFilterCIVF32CIVF32(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF32):
    r"""Proxy of C++ itkImageToImageFilterCIVF32CIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF32CIVF32
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_cast)

# Register itkImageToImageFilterCIVF32CIVF32 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_swigregister(itkImageToImageFilterCIVF32CIVF32)
itkImageToImageFilterCIVF32CIVF32_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF32CIVF32_cast

class itkImageToImageFilterCIVF33CIVF33(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF33):
    r"""Proxy of C++ itkImageToImageFilterCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF33CIVF33
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_cast)

# Register itkImageToImageFilterCIVF33CIVF33 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_swigregister(itkImageToImageFilterCIVF33CIVF33)
itkImageToImageFilterCIVF33CIVF33_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF33CIVF33_cast

class itkImageToImageFilterCIVF34CIVF34(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF34):
    r"""Proxy of C++ itkImageToImageFilterCIVF34CIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF34CIVF34
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_cast)

# Register itkImageToImageFilterCIVF34CIVF34 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_swigregister(itkImageToImageFilterCIVF34CIVF34)
itkImageToImageFilterCIVF34CIVF34_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF34CIVF34_cast

class itkImageToImageFilterCIVF42CIVF42(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF42):
    r"""Proxy of C++ itkImageToImageFilterCIVF42CIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF42CIVF42
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_cast)

# Register itkImageToImageFilterCIVF42CIVF42 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_swigregister(itkImageToImageFilterCIVF42CIVF42)
itkImageToImageFilterCIVF42CIVF42_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF42CIVF42_cast

class itkImageToImageFilterCIVF43CIVF43(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF43):
    r"""Proxy of C++ itkImageToImageFilterCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF43CIVF43
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_cast)

# Register itkImageToImageFilterCIVF43CIVF43 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_swigregister(itkImageToImageFilterCIVF43CIVF43)
itkImageToImageFilterCIVF43CIVF43_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF43CIVF43_cast

class itkImageToImageFilterCIVF44CIVF44(itk.itkImageSourceCudaCommonPython.itkImageSourceCIVF44):
    r"""Proxy of C++ itkImageToImageFilterCIVF44CIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF44CIVF44
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_cast)

# Register itkImageToImageFilterCIVF44CIVF44 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_swigregister(itkImageToImageFilterCIVF44CIVF44)
itkImageToImageFilterCIVF44CIVF44_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF44CIVF44_cast

class itkImageToImageFilterCIVF52CIVF52(itk.itkImageSourceRTKPython.itkImageSourceCIVF52):
    r"""Proxy of C++ itkImageToImageFilterCIVF52CIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF52CIVF52
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_cast)

# Register itkImageToImageFilterCIVF52CIVF52 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_swigregister(itkImageToImageFilterCIVF52CIVF52)
itkImageToImageFilterCIVF52CIVF52_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52_cast

class itkImageToImageFilterCIVF53CIVF53(itk.itkImageSourceRTKPython.itkImageSourceCIVF53):
    r"""Proxy of C++ itkImageToImageFilterCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF53CIVF53
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_cast)

# Register itkImageToImageFilterCIVF53CIVF53 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_swigregister(itkImageToImageFilterCIVF53CIVF53)
itkImageToImageFilterCIVF53CIVF53_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53_cast

class itkImageToImageFilterCIVF54CIVF54(itk.itkImageSourceRTKPython.itkImageSourceCIVF54):
    r"""Proxy of C++ itkImageToImageFilterCIVF54CIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterCIVF54CIVF54
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_cast)

# Register itkImageToImageFilterCIVF54CIVF54 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_swigregister(itkImageToImageFilterCIVF54CIVF54)
itkImageToImageFilterCIVF54CIVF54_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54_cast

class itkImageToImageFilterICVD23ICVD23(itk.itkImageSourceRTKPython.itkImageSourceICVD23):
    r"""Proxy of C++ itkImageToImageFilterICVD23ICVD23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterICVD23ICVD23
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_cast)

# Register itkImageToImageFilterICVD23ICVD23 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_swigregister(itkImageToImageFilterICVD23ICVD23)
itkImageToImageFilterICVD23ICVD23_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterICVD23ICVD23_cast

class itkImageToImageFilterICVD33ICVD33(itk.itkImageSourcePython.itkImageSourceICVD33):
    r"""Proxy of C++ itkImageToImageFilterICVD33ICVD33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterICVD33ICVD33
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_cast)

# Register itkImageToImageFilterICVD33ICVD33 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_swigregister(itkImageToImageFilterICVD33ICVD33)
itkImageToImageFilterICVD33ICVD33_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterICVD33ICVD33_cast

class itkImageToImageFilterICVD43ICVD43(itk.itkImageSourceRTKPython.itkImageSourceICVD43):
    r"""Proxy of C++ itkImageToImageFilterICVD43ICVD43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterICVD43ICVD43
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_cast)

# Register itkImageToImageFilterICVD43ICVD43 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_swigregister(itkImageToImageFilterICVD43ICVD43)
itkImageToImageFilterICVD43ICVD43_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterICVD43ICVD43_cast

class itkImageToImageFilterICVD53ICVD53(itk.itkImageSourceRTKPython.itkImageSourceICVD53):
    r"""Proxy of C++ itkImageToImageFilterICVD53ICVD53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterICVD53ICVD53
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_cast)

# Register itkImageToImageFilterICVD53ICVD53 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_swigregister(itkImageToImageFilterICVD53ICVD53)
itkImageToImageFilterICVD53ICVD53_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterICVD53ICVD53_cast

class itkImageToImageFilterID1ID1(itk.itkImageSourceRTKPython.itkImageSourceID1):
    r"""Proxy of C++ itkImageToImageFilterID1ID1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterID1ID1
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_cast)

# Register itkImageToImageFilterID1ID1 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_swigregister(itkImageToImageFilterID1ID1)
itkImageToImageFilterID1ID1_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterID1ID1_cast

class itkImageToImageFilterID2ID1(itk.itkImageSourceRTKPython.itkImageSourceID1):
    r"""Proxy of C++ itkImageToImageFilterID2ID1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterID2ID1
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_cast)

# Register itkImageToImageFilterID2ID1 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_swigregister(itkImageToImageFilterID2ID1)
itkImageToImageFilterID2ID1_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterID2ID1_cast

class itkImageToImageFilterID3VID2(itk.itkImageSourcePython.itkImageSourceVID2):
    r"""Proxy of C++ itkImageToImageFilterID3VID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterID3VID2
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_cast)

# Register itkImageToImageFilterID3VID2 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_swigregister(itkImageToImageFilterID3VID2)
itkImageToImageFilterID3VID2_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterID3VID2_cast

class itkImageToImageFilterIF1IF1(itk.itkImageSourceRTKPython.itkImageSourceIF1):
    r"""Proxy of C++ itkImageToImageFilterIF1IF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIF1IF1
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_cast)

# Register itkImageToImageFilterIF1IF1 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_swigregister(itkImageToImageFilterIF1IF1)
itkImageToImageFilterIF1IF1_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIF1IF1_cast

class itkImageToImageFilterIF2IF1(itk.itkImageSourceRTKPython.itkImageSourceIF1):
    r"""Proxy of C++ itkImageToImageFilterIF2IF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIF2IF1
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_cast)

# Register itkImageToImageFilterIF2IF1 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_swigregister(itkImageToImageFilterIF2IF1)
itkImageToImageFilterIF2IF1_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIF2IF1_cast

class itkImageToImageFilterIF3ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIF3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIF3ID2
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_cast)

# Register itkImageToImageFilterIF3ID2 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_swigregister(itkImageToImageFilterIF3ID2)
itkImageToImageFilterIF3ID2_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIF3ID2_cast

class itkImageToImageFilterIF3VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterIF3VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIF3VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_cast)

# Register itkImageToImageFilterIF3VIF2 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_swigregister(itkImageToImageFilterIF3VIF2)
itkImageToImageFilterIF3VIF2_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIF3VIF2_cast

class itkImageToImageFilterIVF24IVF23(itk.itkImageSourcePython.itkImageSourceIVF23):
    r"""Proxy of C++ itkImageToImageFilterIVF24IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF24IVF23
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_cast)

# Register itkImageToImageFilterIVF24IVF23 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_swigregister(itkImageToImageFilterIVF24IVF23)
itkImageToImageFilterIVF24IVF23_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23_cast

class itkImageToImageFilterIVF34IVF33(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkImageToImageFilterIVF34IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF34IVF33
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_cast)

# Register itkImageToImageFilterIVF34IVF33 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_swigregister(itkImageToImageFilterIVF34IVF33)
itkImageToImageFilterIVF34IVF33_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33_cast

class itkImageToImageFilterIVF44IVF43(itk.itkImageSourcePython.itkImageSourceIVF43):
    r"""Proxy of C++ itkImageToImageFilterIVF44IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF44IVF43
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_cast)

# Register itkImageToImageFilterIVF44IVF43 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_swigregister(itkImageToImageFilterIVF44IVF43)
itkImageToImageFilterIVF44IVF43_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43_cast

class itkImageToImageFilterIVF52IVF52(itk.itkImageSourceRTKPython.itkImageSourceIVF52):
    r"""Proxy of C++ itkImageToImageFilterIVF52IVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF52IVF52
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_cast)

# Register itkImageToImageFilterIVF52IVF52 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_swigregister(itkImageToImageFilterIVF52IVF52)
itkImageToImageFilterIVF52IVF52_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF52IVF52_cast

class itkImageToImageFilterIVF53IVF53(itk.itkImageSourceRTKPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIVF53IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF53IVF53
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_cast)

# Register itkImageToImageFilterIVF53IVF53 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_swigregister(itkImageToImageFilterIVF53IVF53)
itkImageToImageFilterIVF53IVF53_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF53IVF53_cast

class itkImageToImageFilterIVF54IVF53(itk.itkImageSourceRTKPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIVF54IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF54IVF53
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_cast)

# Register itkImageToImageFilterIVF54IVF53 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_swigregister(itkImageToImageFilterIVF54IVF53)
itkImageToImageFilterIVF54IVF53_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53_cast

class itkImageToImageFilterIVF54IVF54(itk.itkImageSourceRTKPython.itkImageSourceIVF54):
    r"""Proxy of C++ itkImageToImageFilterIVF54IVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterIVF54IVF54
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_cast)

# Register itkImageToImageFilterIVF54IVF54 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_swigregister(itkImageToImageFilterIVF54IVF54)
itkImageToImageFilterIVF54IVF54_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF54_cast

class itkImageToImageFilterVID2ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterVID2ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterVID2ID3
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_cast)

# Register itkImageToImageFilterVID2ID3 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_swigregister(itkImageToImageFilterVID2ID3)
itkImageToImageFilterVID2ID3_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterVID2ID3_cast

class itkImageToImageFilterVID3ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterVID3ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterVID3ID4
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_cast)

# Register itkImageToImageFilterVID3ID4 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_swigregister(itkImageToImageFilterVID3ID4)
itkImageToImageFilterVID3ID4_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterVID3ID4_cast

class itkImageToImageFilterVIF2IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterVIF2IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterVIF2IF3
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_cast)

# Register itkImageToImageFilterVIF2IF3 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_swigregister(itkImageToImageFilterVIF2IF3)
itkImageToImageFilterVIF2IF3_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterVIF2IF3_cast

class itkImageToImageFilterVIF3IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterVIF3IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterRTKPython.delete_itkImageToImageFilterVIF3IF4
    cast = _swig_new_static_method(_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_cast)

# Register itkImageToImageFilterVIF3IF4 in _itkImageToImageFilterRTKPython:
_itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_swigregister(itkImageToImageFilterVIF3IF4)
itkImageToImageFilterVIF3IF4_cast = _itkImageToImageFilterRTKPython.itkImageToImageFilterVIF3IF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__




