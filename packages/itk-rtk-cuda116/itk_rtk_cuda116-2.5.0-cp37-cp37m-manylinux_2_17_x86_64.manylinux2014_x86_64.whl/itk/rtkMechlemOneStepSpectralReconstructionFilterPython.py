# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkMechlemOneStepSpectralReconstructionFilterPython
else:
    import _rtkMechlemOneStepSpectralReconstructionFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkMechlemOneStepSpectralReconstructionFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkMechlemOneStepSpectralReconstructionFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkCudaImagePython
import itk.itkCudaDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkCudaImageDataManagerPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.rtkIterativeConeBeamReconstructionFilterPython
import itk.rtkForwardProjectionImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkCudaImageRTKPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageSourceCudaCommonPython
import itk.rtkBackProjectionImageFilterPython

def rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF23CIVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF23CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF23CIVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF33CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF23CIVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF43CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF23CIVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF23CIVF53CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF33CIVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF23CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF33CIVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF33CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF33CIVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF43CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF33CIVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF33CIVF53CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF43CIVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF23CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF43CIVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF33CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF43CIVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF43CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF43CIVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF43CIVF53CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF53CIVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF23CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF53CIVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF33CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF53CIVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF43CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterCIVF53CIVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3)
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterCIVF53CIVF53CIF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def mechlem_one_step_spectral_reconstruction_filter(*args: itkt.ImageLike,  geometry=..., number_of_iterations: int=..., number_of_subsets: int=..., reset_nesterov_every: int=..., input_material_volumes=..., input_photon_counts=..., input_spectrum=..., support_mask=..., spatial_regularization_weights=..., projection_weights=..., regularization_weights: Sequence[float]=..., regularization_radius: Sequence[int]=..., binned_detector_response=..., material_attenuations=..., forward_projection_filter=..., back_projection_filter=..., attenuation_map=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., sigma_zero: float=..., alpha_psf: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MechlemOneStepSpectralReconstructionFilter"""
    import itk

    kwarg_typehints = { 'geometry':geometry,'number_of_iterations':number_of_iterations,'number_of_subsets':number_of_subsets,'reset_nesterov_every':reset_nesterov_every,'input_material_volumes':input_material_volumes,'input_photon_counts':input_photon_counts,'input_spectrum':input_spectrum,'support_mask':support_mask,'spatial_regularization_weights':spatial_regularization_weights,'projection_weights':projection_weights,'regularization_weights':regularization_weights,'regularization_radius':regularization_radius,'binned_detector_response':binned_detector_response,'material_attenuations':material_attenuations,'forward_projection_filter':forward_projection_filter,'back_projection_filter':back_projection_filter,'attenuation_map':attenuation_map,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'sigma_zero':sigma_zero,'alpha_psf':alpha_psf }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MechlemOneStepSpectralReconstructionFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mechlem_one_step_spectral_reconstruction_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.MechlemOneStepSpectralReconstructionFilter
    mechlem_one_step_spectral_reconstruction_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mechlem_one_step_spectral_reconstruction_filter.__doc__ = filter_object.__doc__




