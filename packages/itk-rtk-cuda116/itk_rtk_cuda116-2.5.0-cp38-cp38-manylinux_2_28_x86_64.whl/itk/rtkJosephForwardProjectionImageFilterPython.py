# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkJosephForwardProjectionImageFilterPython
else:
    import _rtkJosephForwardProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkJosephForwardProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkJosephForwardProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRTKPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageBaseRTKPython
import itk.itkMatrixRTKPython
import itk.itkPointRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython
import itk.rtkForwardProjectionImageFilterPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.itkCudaImageRTKPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImagePython
import itk.itkCudaImageDataManagerPython
import itk.itkImageSourceCudaCommonPython

def rtkJosephForwardProjectionImageFilterID3ID3_New():
    return rtkJosephForwardProjectionImageFilterID3ID3.New()

class rtkJosephForwardProjectionImageFilterID3ID3(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterID3ID3

        Create a new object of the class rtkJosephForwardProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterID3ID3 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_swigregister(rtkJosephForwardProjectionImageFilterID3ID3)
rtkJosephForwardProjectionImageFilterID3ID3___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3___New_orig__
rtkJosephForwardProjectionImageFilterID3ID3_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterID3ID3_cast


def rtkJosephForwardProjectionImageFilterIF3IF3_New():
    return rtkJosephForwardProjectionImageFilterIF3IF3.New()

class rtkJosephForwardProjectionImageFilterIF3IF3(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterIF3IF3

        Create a new object of the class rtkJosephForwardProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterIF3IF3 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_swigregister(rtkJosephForwardProjectionImageFilterIF3IF3)
rtkJosephForwardProjectionImageFilterIF3IF3___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3___New_orig__
rtkJosephForwardProjectionImageFilterIF3IF3_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIF3IF3_cast


def rtkJosephForwardProjectionImageFilterIVF23IVF23_New():
    return rtkJosephForwardProjectionImageFilterIVF23IVF23.New()

class rtkJosephForwardProjectionImageFilterIVF23IVF23(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterIVF23IVF23
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterIVF23IVF23

        Create a new object of the class rtkJosephForwardProjectionImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterIVF23IVF23 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_swigregister(rtkJosephForwardProjectionImageFilterIVF23IVF23)
rtkJosephForwardProjectionImageFilterIVF23IVF23___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23___New_orig__
rtkJosephForwardProjectionImageFilterIVF23IVF23_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF23IVF23_cast


def rtkJosephForwardProjectionImageFilterIVF33IVF33_New():
    return rtkJosephForwardProjectionImageFilterIVF33IVF33.New()

class rtkJosephForwardProjectionImageFilterIVF33IVF33(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterIVF33IVF33
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterIVF33IVF33

        Create a new object of the class rtkJosephForwardProjectionImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterIVF33IVF33 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_swigregister(rtkJosephForwardProjectionImageFilterIVF33IVF33)
rtkJosephForwardProjectionImageFilterIVF33IVF33___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33___New_orig__
rtkJosephForwardProjectionImageFilterIVF33IVF33_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF33IVF33_cast


def rtkJosephForwardProjectionImageFilterIVF43IVF43_New():
    return rtkJosephForwardProjectionImageFilterIVF43IVF43.New()

class rtkJosephForwardProjectionImageFilterIVF43IVF43(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterIVF43IVF43
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterIVF43IVF43

        Create a new object of the class rtkJosephForwardProjectionImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterIVF43IVF43 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_swigregister(rtkJosephForwardProjectionImageFilterIVF43IVF43)
rtkJosephForwardProjectionImageFilterIVF43IVF43___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43___New_orig__
rtkJosephForwardProjectionImageFilterIVF43IVF43_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF43IVF43_cast


def rtkJosephForwardProjectionImageFilterIVF53IVF53_New():
    return rtkJosephForwardProjectionImageFilterIVF53IVF53.New()

class rtkJosephForwardProjectionImageFilterIVF53IVF53(itk.rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53):
    r"""Proxy of C++ rtkJosephForwardProjectionImageFilterIVF53IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53___New_orig__)
    Clone = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_Clone)
    GetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetInterpolationWeightMultiplication)
    SetInterpolationWeightMultiplication = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetInterpolationWeightMultiplication)
    GetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetProjectedValueAccumulation)
    SetProjectedValueAccumulation = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetProjectedValueAccumulation)
    GetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetSumAlongRay)
    SetSumAlongRay = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetSumAlongRay)
    SetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetInferiorClipImage)
    GetInferiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetInferiorClipImage)
    SetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetSuperiorClipImage)
    GetSuperiorClipImage = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetSuperiorClipImage)
    GetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetInferiorClip)
    SetInferiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetInferiorClip)
    GetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_GetSuperiorClip)
    SetSuperiorClip = _swig_new_instance_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_SetSuperiorClip)
    __swig_destroy__ = _rtkJosephForwardProjectionImageFilterPython.delete_rtkJosephForwardProjectionImageFilterIVF53IVF53
    cast = _swig_new_static_method(_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_cast)

    def New(*args, **kargs):
        """New() -> rtkJosephForwardProjectionImageFilterIVF53IVF53

        Create a new object of the class rtkJosephForwardProjectionImageFilterIVF53IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkJosephForwardProjectionImageFilterIVF53IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkJosephForwardProjectionImageFilterIVF53IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkJosephForwardProjectionImageFilterIVF53IVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkJosephForwardProjectionImageFilterIVF53IVF53 in _rtkJosephForwardProjectionImageFilterPython:
_rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_swigregister(rtkJosephForwardProjectionImageFilterIVF53IVF53)
rtkJosephForwardProjectionImageFilterIVF53IVF53___New_orig__ = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53___New_orig__
rtkJosephForwardProjectionImageFilterIVF53IVF53_cast = _rtkJosephForwardProjectionImageFilterPython.rtkJosephForwardProjectionImageFilterIVF53IVF53_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def joseph_forward_projection_image_filter(*args: itkt.ImageLike,  interpolation_weight_multiplication=..., projected_value_accumulation=..., sum_along_ray=..., inferior_clip_image: itkt.Image=..., superior_clip_image: itkt.Image=..., inferior_clip: float=..., superior_clip: float=..., geometry=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for JosephForwardProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'interpolation_weight_multiplication':interpolation_weight_multiplication,'projected_value_accumulation':projected_value_accumulation,'sum_along_ray':sum_along_ray,'inferior_clip_image':inferior_clip_image,'superior_clip_image':superior_clip_image,'inferior_clip':inferior_clip,'superior_clip':superior_clip,'geometry':geometry }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.JosephForwardProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def joseph_forward_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.JosephForwardProjectionImageFilter
    joseph_forward_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    joseph_forward_projection_image_filter.__doc__ = filter_object.__doc__




