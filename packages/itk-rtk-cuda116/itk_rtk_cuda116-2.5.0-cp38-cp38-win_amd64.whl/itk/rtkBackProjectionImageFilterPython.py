# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkBackProjectionImageFilterPython
else:
    import _rtkBackProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkBackProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkBackProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.ITKCommonBasePython
import itk.itkImageRTKPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageBaseRTKPython
import itk.itkImageRegionRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageSourceCommonPython
import itk.itkCudaImageRTKPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourceCudaCommonPython
import itk.itkCudaImagePython
import itk.itkCudaImageDataManagerPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageToImageFilterAPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython

def rtkBackProjectionImageFilterCIF3CIF3_New():
    return rtkBackProjectionImageFilterCIF3CIF3.New()

class rtkBackProjectionImageFilterCIF3CIF3(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIF3):
    r"""Proxy of C++ rtkBackProjectionImageFilterCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterCIF3CIF3
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterCIF3CIF3

        Create a new object of the class rtkBackProjectionImageFilterCIF3CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterCIF3CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterCIF3CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterCIF3CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterCIF3CIF3 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_swigregister(rtkBackProjectionImageFilterCIF3CIF3)
rtkBackProjectionImageFilterCIF3CIF3___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3___New_orig__
rtkBackProjectionImageFilterCIF3CIF3_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIF3CIF3_cast


def rtkBackProjectionImageFilterCIVF23CIVF23_New():
    return rtkBackProjectionImageFilterCIVF23CIVF23.New()

class rtkBackProjectionImageFilterCIVF23CIVF23(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF23):
    r"""Proxy of C++ rtkBackProjectionImageFilterCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterCIVF23CIVF23
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterCIVF23CIVF23

        Create a new object of the class rtkBackProjectionImageFilterCIVF23CIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterCIVF23CIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterCIVF23CIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterCIVF23CIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterCIVF23CIVF23 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_swigregister(rtkBackProjectionImageFilterCIVF23CIVF23)
rtkBackProjectionImageFilterCIVF23CIVF23___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23___New_orig__
rtkBackProjectionImageFilterCIVF23CIVF23_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF23CIVF23_cast


def rtkBackProjectionImageFilterCIVF33CIVF33_New():
    return rtkBackProjectionImageFilterCIVF33CIVF33.New()

class rtkBackProjectionImageFilterCIVF33CIVF33(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF33):
    r"""Proxy of C++ rtkBackProjectionImageFilterCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterCIVF33CIVF33
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterCIVF33CIVF33

        Create a new object of the class rtkBackProjectionImageFilterCIVF33CIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterCIVF33CIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterCIVF33CIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterCIVF33CIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterCIVF33CIVF33 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_swigregister(rtkBackProjectionImageFilterCIVF33CIVF33)
rtkBackProjectionImageFilterCIVF33CIVF33___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33___New_orig__
rtkBackProjectionImageFilterCIVF33CIVF33_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF33CIVF33_cast


def rtkBackProjectionImageFilterCIVF43CIVF43_New():
    return rtkBackProjectionImageFilterCIVF43CIVF43.New()

class rtkBackProjectionImageFilterCIVF43CIVF43(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF43):
    r"""Proxy of C++ rtkBackProjectionImageFilterCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterCIVF43CIVF43
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterCIVF43CIVF43

        Create a new object of the class rtkBackProjectionImageFilterCIVF43CIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterCIVF43CIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterCIVF43CIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterCIVF43CIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterCIVF43CIVF43 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_swigregister(rtkBackProjectionImageFilterCIVF43CIVF43)
rtkBackProjectionImageFilterCIVF43CIVF43___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43___New_orig__
rtkBackProjectionImageFilterCIVF43CIVF43_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF43CIVF43_cast


def rtkBackProjectionImageFilterCIVF53CIVF53_New():
    return rtkBackProjectionImageFilterCIVF53CIVF53.New()

class rtkBackProjectionImageFilterCIVF53CIVF53(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF53):
    r"""Proxy of C++ rtkBackProjectionImageFilterCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterCIVF53CIVF53
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterCIVF53CIVF53

        Create a new object of the class rtkBackProjectionImageFilterCIVF53CIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterCIVF53CIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterCIVF53CIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterCIVF53CIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterCIVF53CIVF53 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_swigregister(rtkBackProjectionImageFilterCIVF53CIVF53)
rtkBackProjectionImageFilterCIVF53CIVF53___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53___New_orig__
rtkBackProjectionImageFilterCIVF53CIVF53_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterCIVF53CIVF53_cast


def rtkBackProjectionImageFilterID3ID3_New():
    return rtkBackProjectionImageFilterID3ID3.New()

class rtkBackProjectionImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ rtkBackProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterID3ID3

        Create a new object of the class rtkBackProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterID3ID3 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_swigregister(rtkBackProjectionImageFilterID3ID3)
rtkBackProjectionImageFilterID3ID3___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3___New_orig__
rtkBackProjectionImageFilterID3ID3_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterID3ID3_cast


def rtkBackProjectionImageFilterIF3IF3_New():
    return rtkBackProjectionImageFilterIF3IF3.New()

class rtkBackProjectionImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ rtkBackProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_Clone)
    GetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_SetGeometry)
    GetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_GetTranspose)
    SetTranspose = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_SetTranspose)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_rtkBackProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkBackProjectionImageFilterIF3IF3

        Create a new object of the class rtkBackProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkBackProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkBackProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkBackProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkBackProjectionImageFilterIF3IF3 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_swigregister(rtkBackProjectionImageFilterIF3IF3)
rtkBackProjectionImageFilterIF3IF3___New_orig__ = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3___New_orig__
rtkBackProjectionImageFilterIF3IF3_cast = _rtkBackProjectionImageFilterPython.rtkBackProjectionImageFilterIF3IF3_cast


def itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_New():
    return itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3.New()

class itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3(rtkBackProjectionImageFilterCIF3CIF3):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_Clone)
    SetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_SetGPUEnabled)
    GetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_GetGPUEnabled)
    GPUEnabledOn = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_GPUEnabledOn)
    GPUEnabledOff = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_GPUEnabledOff)
    GenerateData = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_GenerateData)
    GraftOutput = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_GraftOutput)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_swigregister(itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3)
itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3___New_orig__ = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3___New_orig__
itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_cast = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3_cast


def itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_New():
    return itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23.New()

class itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23(rtkBackProjectionImageFilterCIVF23CIVF23):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_Clone)
    SetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_SetGPUEnabled)
    GetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_GetGPUEnabled)
    GPUEnabledOn = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_GPUEnabledOn)
    GPUEnabledOff = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_GPUEnabledOff)
    GenerateData = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_GenerateData)
    GraftOutput = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_GraftOutput)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23

        Create a new object of the class itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_swigregister(itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23)
itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23___New_orig__ = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23___New_orig__
itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast


def itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_New():
    return itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33.New()

class itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33(rtkBackProjectionImageFilterCIVF33CIVF33):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_Clone)
    SetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_SetGPUEnabled)
    GetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_GetGPUEnabled)
    GPUEnabledOn = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_GPUEnabledOn)
    GPUEnabledOff = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_GPUEnabledOff)
    GenerateData = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_GenerateData)
    GraftOutput = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_GraftOutput)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33

        Create a new object of the class itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_swigregister(itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33)
itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33___New_orig__ = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33___New_orig__
itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast


def itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_New():
    return itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43.New()

class itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43(rtkBackProjectionImageFilterCIVF43CIVF43):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_Clone)
    SetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_SetGPUEnabled)
    GetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_GetGPUEnabled)
    GPUEnabledOn = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_GPUEnabledOn)
    GPUEnabledOff = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_GPUEnabledOff)
    GenerateData = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_GenerateData)
    GraftOutput = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_GraftOutput)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43

        Create a new object of the class itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_swigregister(itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43)
itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43___New_orig__ = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43___New_orig__
itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast


def itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_New():
    return itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53.New()

class itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53(rtkBackProjectionImageFilterCIVF53CIVF53):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53___New_orig__)
    Clone = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_Clone)
    SetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_SetGPUEnabled)
    GetGPUEnabled = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_GetGPUEnabled)
    GPUEnabledOn = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_GPUEnabledOn)
    GPUEnabledOff = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_GPUEnabledOff)
    GenerateData = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_GenerateData)
    GraftOutput = _swig_new_instance_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_GraftOutput)
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53

        Create a new object of the class itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_swigregister(itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53)
itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53___New_orig__ = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53___New_orig__
itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast = _rtkBackProjectionImageFilterPython.itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast

class itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3(itkCudaImageToImageFilterCIF3CIF3BPCIF3CIF3):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3_cast)

# Register itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3_swigregister(itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3)
itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3_cast = _rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIF3CIF3BPCIF3CIF3_cast

class itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23(itkCudaImageToImageFilterCIVF23CIVF23BPCIVF23CIVF23):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast)

# Register itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23_swigregister(itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23)
itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast = _rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF23CIVF23BPCIVF23CIVF23_cast

class itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33(itkCudaImageToImageFilterCIVF33CIVF33BPCIVF33CIVF33):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast)

# Register itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33_swigregister(itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33)
itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast = _rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF33CIVF33BPCIVF33CIVF33_cast

class itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43(itkCudaImageToImageFilterCIVF43CIVF43BPCIVF43CIVF43):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast)

# Register itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43_swigregister(itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43)
itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast = _rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF43CIVF43BPCIVF43CIVF43_cast

class itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53(itkCudaImageToImageFilterCIVF53CIVF53BPCIVF53CIVF53):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _rtkBackProjectionImageFilterPython.delete_itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53
    cast = _swig_new_static_method(_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast)

# Register itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53 in _rtkBackProjectionImageFilterPython:
_rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53_swigregister(itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53)
itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast = _rtkBackProjectionImageFilterPython.itkCudaInPlaceImageFilterCIVF53CIVF53BPCIVF53CIVF53_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def back_projection_image_filter(*args: itkt.ImageLike,  geometry=..., transpose: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BackProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'geometry':geometry,'transpose':transpose }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.BackProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def back_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.BackProjectionImageFilter
    back_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    back_projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_image_to_image_filter(*args: itkt.ImageLike,  gpu_enabled: bool=..., geometry=..., transpose: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaImageToImageFilter"""
    import itk

    kwarg_typehints = { 'gpu_enabled':gpu_enabled,'geometry':geometry,'transpose':transpose }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.CudaImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cuda_image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CudaImageToImageFilter
    cuda_image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_image_to_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_in_place_image_filter(*args: itkt.ImageLike,  gpu_enabled: bool=..., geometry=..., transpose: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaInPlaceImageFilter"""
    import itk

    kwarg_typehints = { 'gpu_enabled':gpu_enabled,'geometry':geometry,'transpose':transpose }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.CudaInPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cuda_in_place_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CudaInPlaceImageFilter
    cuda_in_place_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_in_place_image_filter.__doc__ = filter_object.__doc__




