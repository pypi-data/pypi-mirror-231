Metadata-Version: 2.1
Name: tiny_vaultclient
Version: 0.1.0
Summary: 
Author: Juan Borda
Author-email: juanignacioborda@gmail.com
Requires-Python: >=3.11,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: hvac (>=1.2.1,<2.0.0)
Requires-Dist: python-dotenv (>=1.0.0,<2.0.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Description-Content-Type: text/markdown

# Python Vault client

A simple client for read, list, write and delete secrets from  Vault

## INSTALLATION

```bash
make install
```
## USAGE
kvault-env will pick up secrets path from a dot env file

.env 

```bash
VAULT_DBNAME=vault:secret/data/testapp#dbname
VAULT_PASSWORD=vault:secret/data/testapp#password 
VAULT_LAST_UPDATED=vault:secret/data/testapp#last_updated 
```

and inject the secrets to the the command 

```bash
kvault-env docker-compose up
INFO[0000] spawning process: 
INFO[0000] spawning process: [docker-compose up]         app=vault-env
Starting vault-env-helper_db_1 ... 
Starting vault-env-helper_adminer_1 ... 
Starting vault-env-helper_podinfo_1 ... 
```

## Uninstall/Remove

```bash
make uninstall
```

## TEST


spin up a local vault instance using docker
```bash
export VAULT_ADDR='http://127.0.0.1:8200' 
make install 
make vault-up 
vault login devtoken
make vault-secret 
make test-docker 
```
Dcocker compose will spin up a database, adminer and podinfo

you can use podman to check environment variables passed to container

 ![http://localhost:9898/env](https://github.com/juanitomint/vault-env-helper/blob/main/img/podinfo.png?raw=true)

or  access the db using adminer

 ![http://localhost:8080](https://github.com/juanitomint/vault-env-helper/blob/main/img/adminer.png?raw=true)

## HELP
```bash
cover/report         Shows coverage Report
cover                runs tests
cover/xml            Creates coverage Report
deps                 config virtual env and install dependencies using poetry
docker-build         Build docker image using latest as cache
docker-push          Push docker image to remote ${IMAGE_REPOSITORY}
docker-test-bash     test the docker image but gives yuou a shell
docker-test          test file using docker image and .env variables
fix                  Fix code lints using black flake8 and isort
lint                 Show code lints using black flake8 and isort
local                installs pre-commit hook (WIP)
printvars            Prints make variables
vault-down           Removes docker vault container
vault-secret         Create a new version of secrets
vault-up             Spin up a vault development server use it with  export VAULT_ADDR='http://127.0.0.1:8200'
```
