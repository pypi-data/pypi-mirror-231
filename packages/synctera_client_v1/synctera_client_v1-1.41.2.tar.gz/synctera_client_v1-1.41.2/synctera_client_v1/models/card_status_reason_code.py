# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 1.41.2
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class CardStatusReasonCode(str, Enum):
    """
    The reason for the card status  Code | Description --- | --- NEW | Card activated REQ | Requested by you INA | Dormant UNK | Invalid shipping address NEG | Negative account balance REV | Account under review SUS | Suspicious activity OUT | Activity outside program parameters FRD | Confirmed fraud MAT | Matched with an OFAC list LOS | Card reported lost CLO | Card was cloned COM | Account or card was compromised TMP | Awaiting customer confirmation PRC | Initiated by Processor ISS | Initiated by Issuer EXP | Card expired KYC | Failed KYC INF | Information was validated ACT | Account activity was validated AUX | Initiated by a third party PIN | PIN try limit reached STO | Card reported stolen ADD | Address issue NAM | Name issue SSN | SSN issue DOB | DOB issue EML | Email issue PHO | Phone issue FUL | Account/fulfillment mismatch OTH | Other 
    """

    """
    allowed enum values
    """
    ACT = 'ACT'
    ADD = 'ADD'
    AUX = 'AUX'
    CLO = 'CLO'
    COM = 'COM'
    DOB = 'DOB'
    EML = 'EML'
    EXP = 'EXP'
    FRD = 'FRD'
    FUL = 'FUL'
    INA = 'INA'
    INF = 'INF'
    ISS = 'ISS'
    KYC = 'KYC'
    LOS = 'LOS'
    MAT = 'MAT'
    NAM = 'NAM'
    NEG = 'NEG'
    NEW = 'NEW'
    OTH = 'OTH'
    OUT = 'OUT'
    PHO = 'PHO'
    PIN = 'PIN'
    PRC = 'PRC'
    REQ = 'REQ'
    REV = 'REV'
    SSN = 'SSN'
    STO = 'STO'
    SUS = 'SUS'
    TMP = 'TMP'
    UNK = 'UNK'

    @classmethod
    def from_json(cls, json_str: str) -> CardStatusReasonCode:
        """Create an instance of CardStatusReasonCode from a JSON string"""
        return CardStatusReasonCode(json.loads(json_str))


