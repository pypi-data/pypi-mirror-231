# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 1.41.5
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class AdverseActionReasonCode(str, Enum):
    """
    AdverseActionReasonCode
    """

    """
    allowed enum values
    """
    APPLICATION_INCOMPLETE = 'APPLICATION_INCOMPLETE'
    BANKRUPTCY = 'BANKRUPTCY'
    BUSINESS_INADEQUATE_LOAN_PAYMENT_HISTORY = 'BUSINESS_INADEQUATE_LOAN_PAYMENT_HISTORY'
    BUSINESS_INSUFFICIENT_EARNINGS_RECORD = 'BUSINESS_INSUFFICIENT_EARNINGS_RECORD'
    COLLECTION_ACTION_OR_JUDGMENT = 'COLLECTION_ACTION_OR_JUDGMENT'
    DELINQUENT_CREDIT_HISTORY = 'DELINQUENT_CREDIT_HISTORY'
    EXCESSIVE_DEBT_TO_INCOME_RATIO = 'EXCESSIVE_DEBT_TO_INCOME_RATIO'
    FORECLOSURE_REPOSSESSION = 'FORECLOSURE_REPOSSESSION'
    GARNISHMENT_OR_ATTACHMENT_ORDER = 'GARNISHMENT_OR_ATTACHMENT_ORDER'
    INSUFFICIENT_COLLATERAL = 'INSUFFICIENT_COLLATERAL'
    INSUFFICIENT_CREDIT_EXPERIENCE = 'INSUFFICIENT_CREDIT_EXPERIENCE'
    INSUFFICIENT_CREDIT_REFERENCES = 'INSUFFICIENT_CREDIT_REFERENCES'
    INSUFFICIENT_EMPLOYMENT_TENURE = 'INSUFFICIENT_EMPLOYMENT_TENURE'
    INSUFFICIENT_INCOME = 'INSUFFICIENT_INCOME'
    INVALID_CREDIT_REFERENCES = 'INVALID_CREDIT_REFERENCES'
    LENGTH_OF_RESIDENCE = 'LENGTH_OF_RESIDENCE'
    NO_CREDIT_FILE = 'NO_CREDIT_FILE'
    OTHER = 'OTHER'
    POOR_CREDIT_PERFORMANCE = 'POOR_CREDIT_PERFORMANCE'
    TEMPORARY_EMPLOYMENT = 'TEMPORARY_EMPLOYMENT'
    TEMPORARY_RESIDENCE = 'TEMPORARY_RESIDENCE'
    UNVERIFIABLE_CREDIT_REFERENCES = 'UNVERIFIABLE_CREDIT_REFERENCES'
    UNVERIFIABLE_EMPLOYMENT = 'UNVERIFIABLE_EMPLOYMENT'
    UNVERIFIABLE_INCOME = 'UNVERIFIABLE_INCOME'
    UNVERIFIABLE_RESIDENCE = 'UNVERIFIABLE_RESIDENCE'

    @classmethod
    def from_json(cls, json_str: str) -> AdverseActionReasonCode:
        """Create an instance of AdverseActionReasonCode from a JSON string"""
        return AdverseActionReasonCode(json.loads(json_str))

    def __str__(self):
        return self.value


