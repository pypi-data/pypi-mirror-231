# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 1.41.4
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Optional
from pydantic import BaseModel, Field, StrictStr
from synctera_client_v1.models.adverse_action_reason_code import AdverseActionReasonCode

class ReviewDetails(BaseModel):
    """
    ReviewDetails
    """
    adverse_action_notice_time: Optional[datetime] = Field(None, description="Timestamp of the notice in RFC3339 format")
    adverse_action_reason_code: Optional[AdverseActionReasonCode] = None
    application_submitted_time: datetime = Field(..., description="Timestamp of the application submission in RFC3339 format")
    credit_accepted_time: Optional[datetime] = Field(None, description="Timestamp of the credit accepted by customer in RFC3339 format")
    credit_approved_time: Optional[datetime] = Field(None, description="Timestamp of the credit approval in RFC3339 format")
    credit_denied_time: Optional[datetime] = Field(None, description="Timestamp of the credit denial in RFC3339 format")
    credit_not_accepted_time: Optional[datetime] = Field(None, description="Timestamp of the credit not accepted by customer in RFC3339 format")
    provider_specific_adverse_action_reason: Optional[StrictStr] = Field(None, description="Credit score provider specific reason code")
    underwriting_model_version: Optional[StrictStr] = Field(None, description="The version of the underwriting model used for credit decision.")
    __properties = ["adverse_action_notice_time", "adverse_action_reason_code", "application_submitted_time", "credit_accepted_time", "credit_approved_time", "credit_denied_time", "credit_not_accepted_time", "provider_specific_adverse_action_reason", "underwriting_model_version"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ReviewDetails:
        """Create an instance of ReviewDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ReviewDetails:
        """Create an instance of ReviewDetails from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return ReviewDetails.parse_obj(obj)

        _obj = ReviewDetails.parse_obj({
            "adverse_action_notice_time": obj.get("adverse_action_notice_time"),
            "adverse_action_reason_code": obj.get("adverse_action_reason_code"),
            "application_submitted_time": obj.get("application_submitted_time"),
            "credit_accepted_time": obj.get("credit_accepted_time"),
            "credit_approved_time": obj.get("credit_approved_time"),
            "credit_denied_time": obj.get("credit_denied_time"),
            "credit_not_accepted_time": obj.get("credit_not_accepted_time"),
            "provider_specific_adverse_action_reason": obj.get("provider_specific_adverse_action_reason"),
            "underwriting_model_version": obj.get("underwriting_model_version")
        })
        return _obj

