{"version":3,"file":"static/js/6706.00cd0850.chunk.js","mappings":"wuBAGMA,GAA4BC,EAAAA,EAAAA,IAAS,CACzCC,IAAK,4BACLC,IAAI,WAAD,8BAAE,mHAE0BC,EAAAA,EAAAA,KAAQD,IAAI,qBAAqB,KAAD,EAAzC,OAAZE,EAAY,yBACXA,EAAaC,MAAI,yDAEjB,IAAE,yDAEZ,kDAPG,KAUAC,GAA2BN,EAAAA,EAAAA,IAAS,CACxCC,IAAK,2BACLC,IAAI,WAAD,8BAAE,mHAEyBC,EAAAA,EAAAA,KAAQD,IAAI,oBAAoB,KAAD,EAAxC,OAAXK,EAAW,yBACVA,EAAYF,MAAI,yDAEhB,IAAE,yDAEZ,kDAPG,KAUAG,GAAyBR,EAAAA,EAAAA,IAAS,CACtCC,IAAK,yBACLC,IAAI,WAAD,8BAAE,mHAEuBC,EAAAA,EAAAA,KAAQD,IAAI,kBAAkB,KAAD,EAAtC,OAATO,EAAS,yBACRA,EAAUJ,MAAI,yDAEd,IAAE,yDAEZ,kDAPG,KAUAK,GAA2BV,EAAAA,EAAAA,IAAS,CACxCC,IAAK,2BACLC,IAAI,WAAD,8BAAE,mHAEyBC,EAAAA,EAAAA,KAAQD,IAAI,oBAAoB,KAAD,EAAxC,OAAXS,EAAW,yBACVA,EAAYN,MAAI,yDAEhB,IAAE,yDAEZ,kDAPG,KAUAO,GAA+BZ,EAAAA,EAAAA,IAAS,CAC5CC,IAAK,+BACLC,IAAI,WAAD,8BAAE,mHAE6BC,EAAAA,EAAAA,KAAQD,IAAI,yBAAyB,KAAD,EAA7C,OAAfW,EAAe,yBACdA,EAAgBR,MAAI,yDAEpB,IAAE,yDAEZ,kDAPG,KAUOS,GAAoBC,EAAAA,EAAAA,IAAK,CACpCd,IAAK,eACLe,QAASjB,IAGEkB,GAA+BjB,EAAAA,EAAAA,IAAS,CACnDC,IAAK,0BACLC,IAAI,WAAD,8BAAE,4FAAY,OAAHA,EAAG,EAAHA,IAAG,SACYA,EAAIY,GAAmB,KAAD,EAA/B,OAAZV,EAAY,yBACXA,EAAac,KAAI,SAACC,GACvB,MAAO,CAAEC,MAAOD,EAAEE,KAAMC,MAAOH,EAAEE,KACnC,KAAE,2CACH,mDALG,KAQOE,GAA2BR,EAAAA,EAAAA,IAAK,CAC3Cd,IAAK,sBACLe,QAAS,OAGEQ,GAAmBT,EAAAA,EAAAA,IAAK,CACnCd,IAAK,cACLe,QAASV,IAGEmB,GAA8BzB,EAAAA,EAAAA,IAAS,CAClDC,IAAK,yBACLC,IAAK,YAAc,IAAXA,EAAG,EAAHA,IACAK,EAAcL,EAAIsB,GAClBE,EAAexB,EAAIyB,GACzB,OAAOpB,EACJqB,QACC,SAACC,GAAU,OAER,MADY,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcI,wBAAyB,IAAIC,QAAQF,EAAWG,GAC7D,IAELd,KAAI,SAACC,GACJ,MAAO,CAAEC,MAAOD,EAAEE,KAAMC,MAAOH,EAAEa,GAAIC,SAAUd,EAAEe,aAAab,KAChE,GACJ,IAGWc,GAA0BpB,EAAAA,EAAAA,IAAK,CAC1Cd,IAAK,qBACLe,QAAS,OAGEoB,GAAiBrB,EAAAA,EAAAA,IAAK,CACjCd,IAAK,YACLe,QAASR,IAgCE6B,IA7B4BrC,EAAAA,EAAAA,IAAS,CAChDC,IAAK,uBACLC,IAAK,YAAc,IACXO,GAAYP,EADT,EAAHA,KACgBkC,GAItB,OAHwB3B,EACrBmB,QAAO,SAACT,GAAC,OAAmB,IAAdA,EAAEmB,UAAkBnB,EAAEoB,KAAK,IACzCC,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEE,WAAaD,EAAEC,WAAa,GAAK,CAAC,IAChCzB,KAAI,SAACC,GAC1B,MAAO,CACLC,MAAM,GAAD,OAAKD,EAAEyB,YAAYV,aAAab,KAAI,iBAAMF,EAAEyB,YAAYvB,KAAI,iBAAMF,EAAEE,MACzEwB,KAAM1B,EAAE0B,KACRC,QAASrC,EACNmB,QAAO,SAACmB,GAAC,OAAKA,EAAEC,cAAgB7B,EAAE0B,IAAI,IACtC3B,KAAI,SAAC+B,GACJ,MAAO,CACL7B,MAAM,GAAD,OAAK6B,EAAEX,QAAO,aAAKW,EAAEC,aAC1B5B,MAAM,GAAD,OAAK2B,EAAED,YAAW,YAAIC,EAAEX,SAC7BA,QAASW,EAAEX,QACXa,QAAShC,EAAEyB,YAAYvB,KACvBY,SAAUd,EAAEyB,YAAYV,aAAab,KACrC+B,QAASH,EAAEG,QACXP,KAAMI,EAAEJ,KAEZ,IAEN,GACF,KAGmC9B,EAAAA,EAAAA,IAAK,CACxCd,IAAK,mBACLe,QAAS,QAGEqC,GAAyBrD,EAAAA,EAAAA,IAAS,CAC7CC,IAAK,oBACLC,IAAK,YAiBH,IAjBiB,IACXO,GAAYP,EADT,EAAHA,KACgBkC,GACnBR,QAAO,SAAC0B,GAAQ,OAAMA,EAASf,KAAK,IACpCC,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEE,WAAaD,EAAEC,WAAa,GAAK,CAAC,IAGjDY,EAAkB9C,EACrBmB,QAAO,SAACT,GAAC,OAAmB,IAAdA,EAAEmB,OAAa,IAC7BkB,QAAO,SAACC,EAAKC,GACZ,IAAMC,GAAS,UACZD,EAAMb,MAAI,kBAAQa,GAAK,IAAEE,SAAU,GAAI3D,IAAKyD,EAAMb,QAErD,OAAO,kBAAKY,GAAQE,EACtB,GAAG,CAAC,GAEAE,EAAiBpD,EAAUmB,QAAO,SAACT,GAAC,OAAmB,IAAdA,EAAEmB,OAAa,IAErDwB,EAAI,EAAGA,EAAID,EAAeE,OAAQD,IACrCD,EAAeC,GAAGd,eAAeO,GACnCA,EAAgBM,EAAeC,GAAGd,aAAaY,SAASI,MAAK,kBACxDH,EAAeC,IAAE,IACpB7D,IAAK4D,EAAeC,GAAGjB,QAI7B,OAAOoB,OAAOC,OAAOX,EACvB,IAQWY,IALwBpD,EAAAA,EAAAA,IAAK,CACxCd,IAAK,mBACLe,QAAS,MAG6BD,EAAAA,EAAAA,IAAK,CAC3Cd,IAAK,sBACLe,QAAS,CAAC,KAGCoD,GAAqBrD,EAAAA,EAAAA,IAAK,CACrCd,IAAK,eACLe,QAAS,CAAC,IAGCqD,GAAkBtD,EAAAA,EAAAA,IAAK,CAClCd,IAAK,aACLe,QAAS,CAAC,IAuBCsD,IApBgCvD,EAAAA,EAAAA,IAAK,CAChDd,IAAK,2BACLe,SAAS,KAGyCD,EAAAA,EAAAA,IAAK,CACvDd,IAAK,kCACLe,SAAS,KAGmCD,EAAAA,EAAAA,IAAK,CACjDd,IAAK,4BACLe,SAAS,KAGgCD,EAAAA,EAAAA,IAAK,CAC9Cd,IAAK,yBACLe,QAAS,QAGyBhB,EAAAA,EAAAA,IAAS,CAC3CC,IAAK,uBACLC,IAAI,WAAD,8BAAE,mHAEqBC,EAAAA,EAAAA,KAAQD,IAAI,oBAAoB,KAAD,EAAxC,OAAPqE,EAAO,yBACNA,EAAQlE,MAAI,yDAEZ,MAAI,yDAEd,kDAPG,MAUOmE,GAAezD,EAAAA,EAAAA,IAAK,CAC/Bd,IAAK,eACLe,QAASsD,IAGEG,GAAkBzE,EAAAA,EAAAA,IAAS,CACtCC,IAAK,aACLC,IAAK,YACH,OAA6B,QAAtBA,EADE,EAAHA,KACKsE,EACb,IAGWE,GAAiB3D,EAAAA,EAAAA,IAAK,CACjCd,IAAK,iBACLe,QAAS,KAWE2D,IARqB3E,EAAAA,EAAAA,IAAS,CACzCC,IAAK,gBACLC,IAAK,YAEH,OADkBA,EADT,EAAHA,KACgBwE,EAExB,KAG8B3D,EAAAA,EAAAA,IAAK,CACnCd,IAAK,mBACLe,QAASN,KAGEkE,GAAsB5E,EAAAA,EAAAA,IAAS,CAC1CC,IAAK,sBACLC,IAAI,WAAD,8BAAE,4FAE2C,GAFlCA,EAAG,EAAHA,IAAG,SAEQA,EAAI2E,GACPC,uBAAuB,CAAD,wCAC/B,IAAE,wBAEe3E,EAAAA,EAAAA,KAAQD,IAAI,wBAAwB,KAAD,EAA5C,OAAXS,EAAW,yBACVA,EAAYN,MAAI,2DAEhB,IAAE,0DAEZ,mDAXG,KAcO0E,GAAuBhE,EAAAA,EAAAA,IAAK,CACvCd,IAAK,uBACLe,QAASJ,IAGEoE,GAAyBjE,EAAAA,EAAAA,IAAK,CACzCd,IAAK,yBACLe,QAAS,KAGEiE,GAA4BlE,EAAAA,EAAAA,IAAK,CAC5Cd,IAAK,4BACLe,QAAS,KAGEkE,GAAkClF,EAAAA,EAAAA,IAAS,CACtDC,IAAK,6BACLC,IAAK,YAAc,IAAXA,EAAG,EAAHA,IACFiF,EAAoBjF,EAAI8E,GACxBI,EAAelF,EAAI2E,GAEvBM,EAAoBA,EAAkBjE,KAAI,SAACC,GACzC,OAAO,QAAEkE,aAAa,GAASlE,EACjC,IACA,IAAImE,EAAuBF,EAAaN,uBACpC5E,EAAI+E,GACJ,GACJK,EAAuBA,EAAqBpE,KAAI,SAACC,GAC/C,OAAO,QAAEkE,aAAa,GAAUlE,EAClC,IAEA,IAAIoE,EAAqBrF,EAAIyE,GAIvBa,GAHND,EAAqBA,EAAmBrE,KAAI,SAACC,GAC3C,OAAO,QAAEkE,aAAa,GAASlE,EACjC,KACmDD,KAAI,SAACC,GAAC,OAAKA,EAAE0B,IAAI,IAEhE4C,EAAiBL,EAAaN,uBAC9B5E,EAAI0E,GACJ,GAKJa,GAJAA,EAAiBA,EAAevE,KAAI,SAACC,GACnC,OAAO,QAAEkE,aAAa,GAAUlE,EAClC,KAEgCS,QAC9B,SAACT,GAAC,OAAMqE,EAAwBE,SAASvE,EAAE0B,KAAK,IAOlD,IAJA,IAAI8C,EAAS,GACPC,EAAyB,CAAC,EAC1BC,EAA6B,CAAC,EAE3B/B,EAAI,EAAGA,EAAIqB,EAAkBpB,OAAQD,IACxCqB,EAAkBrB,GAAGgC,WAAWjD,QAAQ+C,EAC1CA,EAAuBT,EAAkBrB,GAAGgC,WAAWjD,MAAMmB,KAC3DmB,EAAkBrB,IAGpB8B,EAAuBT,EAAkBrB,GAAGgC,WAAWjD,MAAQ,CAC7DsC,EAAkBrB,IAKxB,IAAK,IAAIA,EAAI,EAAGA,EAAIwB,EAAqBvB,OAAQD,IAE7CwB,EAAqBxB,GAAGgC,WAAWjD,QAAQgD,EAE3CA,EACEP,EAAqBxB,GAAGgC,WAAWjD,MACnCmB,KAAKsB,EAAqBxB,IAE5B+B,EAA2BP,EAAqBxB,GAAGgC,WAAWjD,MAAQ,CACpEyC,EAAqBxB,IAK3B,IAAK,IAAIA,EAAI,EAAGA,EAAIyB,EAAmBxB,OAAQD,IAC7C6B,EAAO3B,MAAK,kBACPuB,EAAmBzB,IACnB,CACDiC,oBACEH,EAAuBL,EAAmBzB,GAAGjB,OAAS,MAK9D,IAAK,IAAIiB,EAAI,EAAGA,EAAI2B,EAAe1B,OAAQD,IACzC6B,EAAO3B,MAAK,kBACPyB,EAAe3B,IACf,CACDiC,oBACEF,EAA2BJ,EAAe3B,GAAGjB,OAAS,MAK9D,OAAO8C,CACT,IAGWK,GAAgBjF,EAAAA,EAAAA,IAAK,CAChCd,IAAK,gBACLe,QAASiF,OAAOC,WAAa,MAazBC,IAV0BpF,EAAAA,EAAAA,IAAK,CACnCd,IAAK,mBACLe,QAAS,QAGkBD,EAAAA,EAAAA,IAAK,CAChCd,IAAK,gBACLe,QAAS,CAAC,KAGchB,EAAAA,EAAAA,IAAS,CACjCC,IAAK,oBACLC,IAAI,WAAD,8BAAE,mHAEkBC,EAAAA,EAAAA,KAAQD,IAAI,aAAa,KAAD,EAAjC,OAAJkG,EAAI,yBACHA,EAAK/F,MAAI,yDAET,IAAE,yDAEZ,kDAPG,MAUOgG,GAAYtF,EAAAA,EAAAA,IAAK,CAC5Bd,IAAK,YACLe,QAASmF,IAGEG,GAA4BtG,EAAAA,EAAAA,IAAS,CAChDC,IAAK,4BACLC,IAAI,WAAD,8BAAE,mHAEqBC,EAAAA,EAAAA,KAAQD,IAAI,0BAA0B,KAAD,EAA9C,OAAPqE,EAAO,yBACNA,EAAQlE,MAAI,yDAEZ,CAAC,GAAC,yDAEZ,kDAPG,KAUOwE,GAAoB9D,EAAAA,EAAAA,IAAK,CACpCd,IAAK,oBACLe,QAASsF,IAGEC,GAA4BvG,EAAAA,EAAAA,IAAS,CAChDC,IAAK,4BACLC,IAAI,WAAD,8BAAE,mHAE0BC,EAAAA,EAAAA,KAAQD,IAAI,YAAY,KAAD,EAAhC,OAAZwB,EAAY,yBACXA,EAAarB,MAAI,yDAEjB,MAAI,yDAEd,kDAPG,KAUOsB,GAAoBZ,EAAAA,EAAAA,IAAK,CACpCd,IAAK,oBACLe,QAASuF,G,iFCxbEpG,EAAQ,WACnB,IAAMqG,EAASC,EAAAA,EAAAA,OAAgB,CAC7BC,eAAgB,YAChBC,eAAgB,gBAmBlB,OAhBAH,EAAOI,aAAaC,SAASC,KAC3B,SAACD,GAAQ,OAAKA,CAAQ,IACtB,SAACE,GAUC,OARGd,OAAOe,SAASC,SAASC,WAAW,QACpCjB,OAAOe,SAASC,SAASC,WAAW,SACpCjB,OAAOe,SAASC,SAASC,WAAW,UACV,MAA1BH,EAAMF,SAASM,QAA4C,MAA1BJ,EAAMF,SAASM,SAEjDlB,OAAOe,SAASI,KAAO,WAEzBC,EAAAA,EAAAA,IAAgB,iBAAkB,CAAEC,QAAS,UACtCC,QAAQC,OAAOT,EACxB,IAGKP,CACT,C,kIC1BMiB,EAAY,SAACpG,GACjB,IAAMqG,EAAcC,SAASC,OAC1BC,MAAM,KACNC,MAAK,SAACF,GAAM,OAAKA,EAAOG,OAAOb,WAAW,GAAD,OAAI7F,EAAI,KAAI,IACxD,OAAKqG,EACEA,EAAYG,MAAM,KAAK,GADL,IAE3B,EAEaG,EAAS,yCAAG,WAAOC,EAAKC,EAAWC,EAAYC,GAAO,8EAE/C,OAF+C,SAE/DF,GAAU,GAAM,SACOG,MAAMJ,GAAK,KAAD,EAAnB,IAARpB,EAAQ,QACAyB,GAAG,CAAD,qBACR,IAAIC,MAAM1B,EAAS2B,YAAY,KAAD,kBAEnB3B,EAAS4B,OAAO,KAAD,EAA5BA,EAAI,OACVN,EAAWM,GACXP,GAAU,GAAO,kDAEjBE,EAAQ,KAAEM,SACVR,GAAU,GAAO,0DAEpB,gBAdqB,4CAgBTS,EAAQ,yCAAG,WAAOV,EAAK5H,EAAM6H,EAAWC,EAAYC,GAAO,uGAE7CC,MAAMJ,EAAK,CAChCW,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAepB,EAAU,cAE3BqB,KAAMC,KAAKC,UAAU3I,KACpB,KAAD,EAPY,OAARwG,EAAQ,gBAQKA,EAAS4B,OAAO,KAAD,EAA5BA,EAAI,OACVN,EAAWM,GACXP,GAAU,GAAO,kDAEjBE,EAAQ,KAAEM,SACVR,GAAU,GAAO,0DAEpB,gBAjBoB,8CAsCRe,EAAS,yCAAG,WAAOhB,EAAK5H,EAAM6H,EAAWC,EAAYC,GAAO,uGAE9CC,MAAMJ,EAAK,CAChCW,OAAQ,QACRC,QAAS,CACP,eAAgB,mBAChB,cAAepB,EAAU,cAE3BqB,KAAMC,KAAKC,UAAU3I,KACpB,KAAD,EAPY,OAARwG,EAAQ,gBAQKA,EAAS4B,OAAO,KAAD,EAA5BA,EAAI,OACVN,EAAWM,GACXP,GAAU,GAAO,kDAEjBE,EAAQ,KAAEM,SACVR,GAAU,GAAO,0DAEpB,gBAjBqB,6C,wQC3ChBgB,EAAa,yCAAG,WAAOC,GAAI,gFACZ,GAAfC,EAAMD,EAAKlB,IACN,CAAD,+BACM,IAAIV,SAAQ,SAAC8B,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,EAAKM,eAC1BH,EAAOI,OAAS,kBAAML,EAAQC,EAAO3D,OAAQ,CAC/C,IAAG,KAAD,EAJFyD,EAAG,eAMCO,EAAQ,IAAIC,OACZR,IAAMA,EAEH,QADHS,EAAY5D,OAAO6D,KAAKV,UACrB,IAATS,GAAAA,EAAWlC,SAASoC,MAAMJ,EAAMK,WAAW,2CAC5C,gBAbkB,sCA2bnB,UA5aoB,WAClB,OAAgCC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,WAAY,GACZC,gBAAiB,GACjBC,WAAY,GACZC,gBAAiB,GACjBC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAClBC,KAAM,KACN,eAVKC,EAAQ,KAAEC,EAAW,KAW5B,GAA8BX,EAAAA,EAAAA,WAAS,GAAK,eAArCY,EAAO,KAAEC,EAAU,KAC1B,GAAoCb,EAAAA,EAAAA,UAAS,IAAIc,KAAM,eAAhDC,EAAU,KAAEC,EAAa,KAC1B7F,GAAe8F,EAAAA,EAAAA,IAAerG,EAAAA,IAC9BnD,GAAewJ,EAAAA,EAAAA,IAAevJ,EAAAA,KAEpCwJ,EAAAA,EAAAA,YAAU,YACRnD,EAAAA,EAAAA,IACE,mBACA,WAAO,IACP,SAACzD,GACCqG,EAAY,CACVV,MAAO3F,EAAQ2F,MACfC,WAAY5F,EAAQ4F,WACpBC,gBAAiB7F,EAAQ6F,gBACzBC,WAAY9F,EAAQ8F,WACpBC,gBAAiB/F,EAAQ+F,gBACzBC,eAAgBhG,EAAQgG,eACxBa,gCACE7G,EAAQ6G,gCACVC,qBAAsB9G,EAAQ8G,qBAC9Bb,gBAAiBjG,EAAQiG,gBACzBC,iBAAkBlG,EAAQkG,iBAC1BC,KAAMnG,EAAQmG,KACdY,WAAY/G,EAAQ+G,aAEtBR,GAAW,EACb,GAEJ,GAAG,IAkCH,OACE,gBAAK9I,GAAG,eAAc,UACpB,SAAC,IAAI,CAACuJ,SAAUV,EAASW,KAAM,QAAQ,UACrC,SAAC,IAAI,CAACC,OAAO,WAAU,UACrB,UAAC,IAAI,CAACC,MAAM,WAAWC,MAAO,CAAEC,UAAW,OAAQC,QAAS,GAAI,WAC9D,SAAC,IAAG,WACF,SAAC,IAAG,CAACC,KAAM,GAAG,UACZ,SAAC,SAAS,CAAC1K,MAAM,iBAAgB,UAC/B,UAAC,UAAW,CAAC2K,SAAO,aAClB,SAAC,IAAK,CACJC,UAAU,EACVL,MAAO,CACLM,MAAO,SAET3K,MAAOqJ,EAAST,MAChBgC,aAAcvB,EAAST,SAEzB,SAAC,IAAO,CAACwB,MAAM,0BAAyB,UACtC,SAAC,KAAM,CACLS,MAAM,SAAC,IAAY,IACnBC,QAAS,kBACPC,UAAUC,UAAUC,UAAU5B,EAAST,MAAM,gBAQ3D,SAAC,IAAG,WACF,SAAC,IAAG,CAACsC,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,mBAAkB,UACjC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASR,WAChBuC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXR,WAAY0C,EAAEC,OAAOxL,SAEvB2J,EAAcD,EAAW+B,IAAI,cAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,wBAAuB,UACtC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASP,gBAChBsC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXP,gBAAiByC,EAAEC,OAAOxL,SAE5B2J,EAAcD,EAAW+B,IAAI,mBAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,mBAAkB,UACjC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASN,WAChBqC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXN,WAAYwC,EAAEC,OAAOxL,SAEvB2J,EAAcD,EAAW+B,IAAI,cAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,uBAAsB,UACrC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASJ,eAChBmC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXJ,eAAgBsC,EAAEC,OAAOxL,SAE3B2J,EAAcD,EAAW+B,IAAI,kBAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,uBAAsB,UACrC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASU,qBAChBqB,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXU,qBAAsBwB,EAAEC,OAAOxL,SAEjC2J,EAAcD,EAAW+B,IAAI,wBAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CACRrL,MAAM,kCACN4L,QAAQ,2BAA0B,UAElC,SAAC,IAAG,WACF,UAAC,IAAG,CAACR,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASS,gCAChBsB,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXS,gCAAiCyB,EAAEC,OAAOxL,SAE5C2J,EACED,EAAW+B,IAAI,mCAEnB,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,mBAAkB,UACjC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,IAAK,CACJnL,MAAOqJ,EAASF,iBAChBiC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXF,iBAAkBoC,EAAEC,OAAOxL,SAE7B2J,EAAcD,EAAW+B,IAAI,oBAC/B,gBAOZ,SAAC,IAAG,WACF,SAAC,IAAG,CAACP,GAAI,GAAIC,GAAI,GAAG,UAClB,SAAC,SAAS,CAACrL,MAAM,kBAAiB,UAChC,SAAC,IAAG,WACF,UAAC,IAAG,CAACoL,GAAI,GAAIC,GAAI,GAAG,UACjB,KACD,SAAC,aAAc,CACbnL,MAAOqJ,EAASH,gBAChBkC,UAAWtH,EAAauH,aACxBC,SAAU,SAACC,GACTjC,GAAY,kBACPD,GAAQ,IACXH,gBAAiBqC,EAAEC,OAAOxL,SAE5B2J,EAAcD,EAAW+B,IAAI,mBAC/B,eAQV,SADDE,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2CAEX,iCACE,SAAC,IAAG,WACF,SAAC,IAAG,CAACpB,KAAM,GAAG,UACZ,SAAC,SAAS,CACRzK,KAAK,OACLD,MAAM,cACN+L,cAAc,WACdC,KAAK,mFAAkF,UAEvF,SAAC,IAAG,WACF,UAAC,IAAG,CAACtB,KAAM,GAAG,UACX,KACD,SAAC,IAAO,CAACuB,gBAAc,EAACC,OAAQ,KAAK,UACnC,SAAC,IAAM,CACLZ,UAAWtH,EAAamI,oBACxBC,OAAO,UACPC,OAAQ,SAACtE,GACP,OAAO,IAAI5B,SAAQ,SAAC8B,GAClB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,GACrBG,EAAOI,OAAS,SAACmD,GAAO,IAAD,IACrBjC,GAAY,kBACPD,GAAQ,IACXD,KAAc,QAAV,EAAEmC,EAAEC,cAAM,aAAR,EAAUnH,UAElB0D,EAAgB,QAAT,EAACwD,EAAEC,cAAM,aAAR,EAAUnH,OACpB,CACF,GACF,EACA+H,SAAS,eACTC,SACEhD,EAASD,KACL,CACE,CACEkD,IAAK,KACLvM,KAAM,WACN8F,OAAQ,OACRc,IAAK0C,EAASD,OAGlB,GAENkC,SAAU,YACgB,IADL,EAARe,SACE5J,QACX6G,GAAY,kBACPD,GAAQ,IACXD,KAAM,MAGVO,EAAcD,EAAW+B,IAAI,QAC/B,EACAc,UAAW3E,EAAc,SAExByB,EAASD,KAAO,GAAK,2BAQpC,SAAC,IAAO,OAIV,SADDuC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2CAEX,iCACE,UAAC,IAAG,CAACvB,MAAO,CAAEmC,cAAe,UAAW,WACtC,4BAAQ,kBACR,eACEnC,MAAO,CACLoC,QAAS3I,EAAaN,uBAClB,OACA,SACJ,UACH,oBACmB,4BAAS6F,EAASW,aAAoB,yCAExD,4BACGlG,EAAa4I,kBACV,MACA5I,EAAa6I,oBACb,QACA,SACG,oFAGT,mBACA,uBAAG,kFAKL,eACEtC,MAAO,CACLoC,QAAS3I,EAAaN,uBAClB,QACA,QACJ,UACH,iBACc,4BAAS6F,EAASW,aAAoB,uDAEnD,4BAAqB,OAAZ5J,QAAY,IAAZA,OAAY,EAAZA,EAAcL,OAAc,kEAIzC,SAAC,IAAO,QAGZ,UAAC,IAAG,CAACsK,MAAO,CAAEuC,IAAK,GAAI,UAEnB,SADDjB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2CAEX,SAAC,KAAM,CACL9F,KAAI,UACF6F,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYkB,sCAAqC,4BAC/BC,mBAAmBzD,EAASW,aAChDwB,OAAO,SACPnB,MAAO,CACLoC,QAAS3I,EAAaN,uBAClB,OACA,WACJ,SACH,yBAIH,SAAC,KAAM,CACLuJ,KAAK,UACLjC,QAAS,WACPpB,EAAWsD,SAAQ,SAACC,GAAS,OArXxB,SAACC,GACpB1D,GAAW,GACX,IAAIzK,EAAO,CAAC,EACZA,EAAKmO,GAAc7D,EAAS6D,IAE5BvF,EAAAA,EAAAA,IACE,kBACA5I,GACA,SAACoO,GACC3D,EAAW2D,EACb,IACA,SAAClK,GACCqG,EAAY,CACVV,MAAO3F,EAAQ2F,MACfC,WAAY5F,EAAQ4F,WACpBC,gBAAiB7F,EAAQ6F,gBACzBC,WAAY9F,EAAQ8F,WACpBC,gBAAiB/F,EAAQ+F,gBACzBC,eAAgBhG,EAAQgG,eACxBa,gCACE7G,EAAQ6G,gCACVC,qBAAsB9G,EAAQ8G,qBAC9Bb,gBAAiBjG,EAAQiG,gBACzBC,iBAAkBlG,EAAQkG,iBAC1BC,KAAMnG,EAAQmG,OAEhBI,GAAW,EACb,IACA,WAAO,GAEX,CAuVkD4D,CAAaH,EAAU,GAC3D,EAAE,SACH,sBASf,C","sources":["data/atoms.js","data/axios.js","pages/dataUtil.jsx","pages/setting.jsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\nimport { axios } from \"./axios\";\n\nconst apiProvidersFetchSelector = selector({\n  key: \"apiProvidersFetchSelector\",\n  get: async () => {\n    try {\n      const apiProviders = await axios().get(\"/api/apiproviders\");\n      return apiProviders.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst apiBackendsFetchSelector = selector({\n  key: \"apiBackendsFetchSelector\",\n  get: async () => {\n    try {\n      const apiBackends = await axios().get(\"/api/apibackends\");\n      return apiBackends.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst endpointsFetchSelector = selector({\n  key: \"endpointsFetchSelector\",\n  get: async () => {\n    try {\n      const endpoints = await axios().get(\"/api/endpoints\");\n      return endpoints.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst dataSourcesFetchSelector = selector({\n  key: \"dataSourcesFetchSelector\",\n  get: async () => {\n    try {\n      const dataSources = await axios().get(\"/api/datasources\");\n      return dataSources.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nconst dataSourceTypesFetchSelector = selector({\n  key: \"dataSourceTypesFetchSelector\",\n  get: async () => {\n    try {\n      const dataSourceTypes = await axios().get(\"/api/datasource_types\");\n      return dataSourceTypes.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const apiProvidersState = atom({\n  key: \"apiProviders\",\n  default: apiProvidersFetchSelector,\n});\n\nexport const apiProviderDropdownListState = selector({\n  key: \"apiProviderDropdownList\",\n  get: async ({ get }) => {\n    const apiProviders = await get(apiProvidersState);\n    return apiProviders.map((x) => {\n      return { label: x.name, value: x.name };\n    });\n  },\n});\n\nexport const apiProviderSelectedState = atom({\n  key: \"apiProviderSelected\",\n  default: null,\n});\n\nexport const apiBackendsState = atom({\n  key: \"apiBackends\",\n  default: apiBackendsFetchSelector,\n});\n\nexport const apiBackendDropdownListState = selector({\n  key: \"apiBackendDropdownList\",\n  get: ({ get }) => {\n    const apiBackends = get(apiBackendsState);\n    const organization = get(organizationState);\n    return apiBackends\n      .filter(\n        (apiBackend) =>\n          (organization?.disabled_api_backends || []).indexOf(apiBackend.id) ===\n          -1,\n      )\n      .map((x) => {\n        return { label: x.name, value: x.id, provider: x.api_provider.name };\n      });\n  },\n});\n\nexport const apiBackendSelectedState = atom({\n  key: \"apiBackendSelected\",\n  default: null,\n});\n\nexport const endpointsState = atom({\n  key: \"endpoints\",\n  default: endpointsFetchSelector,\n});\n\nexport const endpointDropdownListState = selector({\n  key: \"endpointDropdownList\",\n  get: ({ get }) => {\n    const endpoints = get(endpointsState);\n    const parentEndpoints = endpoints\n      .filter((x) => x.version === 0 && !x.draft)\n      .sort((a, b) => (a.created_on < b.created_on ? 1 : -1));\n    return parentEndpoints.map((x) => {\n      return {\n        label: `${x.api_backend.api_provider.name} » ${x.api_backend.name} » ${x.name}`,\n        uuid: x.uuid,\n        options: endpoints\n          .filter((y) => y.parent_uuid === x.uuid)\n          .map((z) => {\n            return {\n              label: `${z.version}: ${z.description}`,\n              value: `${z.parent_uuid}:${z.version}`,\n              version: z.version,\n              backend: x.api_backend.name,\n              provider: x.api_backend.api_provider.name,\n              is_live: z.is_live,\n              uuid: z.uuid,\n            };\n          }),\n      };\n    });\n  },\n});\n\nexport const endpointSelectedState = atom({\n  key: \"endpointSelected\",\n  default: null,\n});\n\nexport const endpointTableDataState = selector({\n  key: \"endpointTableData\",\n  get: ({ get }) => {\n    const endpoints = get(endpointsState)\n      .filter((endpoint) => !endpoint.draft)\n      .sort((a, b) => (a.created_on < b.created_on ? 1 : -1));\n\n    // map of parent endpoints\n    const parentEndpoints = endpoints\n      .filter((x) => x.version === 0)\n      .reduce((acc, entry) => {\n        const entry_map = {\n          [entry.uuid]: { ...entry, versions: [], key: entry.uuid },\n        };\n        return { ...acc, ...entry_map };\n      }, {});\n\n    const childEndpoints = endpoints.filter((x) => x.version !== 0);\n\n    for (let i = 0; i < childEndpoints.length; i++) {\n      if (childEndpoints[i].parent_uuid in parentEndpoints) {\n        parentEndpoints[childEndpoints[i].parent_uuid].versions.push({\n          ...childEndpoints[i],\n          key: childEndpoints[i].uuid,\n        });\n      }\n    }\n    return Object.values(parentEndpoints);\n  },\n});\n\nexport const endpointVersionsState = atom({\n  key: \"endpointVersions\",\n  default: [],\n});\n\nexport const endpointConfigValueState = atom({\n  key: \"endpointConfigValue\",\n  default: {},\n});\n\nexport const templateValueState = atom({\n  key: \"promptValues\",\n  default: {},\n});\n\nexport const inputValueState = atom({\n  key: \"inputValue\",\n  default: {},\n});\n\nexport const saveEndpointModalVisibleState = atom({\n  key: \"saveEndpointModalVisible\",\n  default: false,\n});\n\nexport const saveEndpointVersionModalVisibleState = atom({\n  key: \"saveEndpointVersionModalVisible\",\n  default: false,\n});\n\nexport const shareEndpointModalVisibleState = atom({\n  key: \"shareEndpointModalVisible\",\n  default: false,\n});\n\nexport const endpointShareCodeValueState = atom({\n  key: \"endpointShareCodeValue\",\n  default: null,\n});\n\nexport const profileFetchSelector = selector({\n  key: \"profileFetchSelector\",\n  get: async () => {\n    try {\n      const profile = await axios().get(\"/api/profiles/me\");\n      return profile.data;\n    } catch (error) {\n      return null;\n    }\n  },\n});\n\nexport const profileState = atom({\n  key: \"profileValue\",\n  default: profileFetchSelector,\n});\n\nexport const isLoggedInState = selector({\n  key: \"isLoggedIn\",\n  get: ({ get }) => {\n    return get(profileState) !== null;\n  },\n});\n\nexport const promptHubState = atom({\n  key: \"promptHubState\",\n  default: [],\n});\n\nexport const promptHubListState = selector({\n  key: \"promptHubList\",\n  get: ({ get }) => {\n    const promptHub = get(promptHubState);\n    return promptHub;\n  },\n});\n\nexport const dataSourcesState = atom({\n  key: \"dataSourcesState\",\n  default: dataSourcesFetchSelector,\n});\n\nexport const orgDataSourcesState = selector({\n  key: \"orgDataSourcesState\",\n  get: async ({ get }) => {\n    try {\n      const profileFlags = get(profileFlagsState);\n      if (!profileFlags.IS_ORGANIZATION_MEMBER) {\n        return [];\n      }\n      const dataSources = await axios().get(\"/api/org/datasources\");\n      return dataSources.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const dataSourceTypesState = atom({\n  key: \"dataSourceTypesState\",\n  default: dataSourceTypesFetchSelector,\n});\n\nexport const dataSourceEntriesState = atom({\n  key: \"dataSourceEntriesState\",\n  default: [],\n});\n\nexport const orgDataSourceEntriesState = atom({\n  key: \"orgDataSourceEntriesState\",\n  default: [],\n});\n\nexport const dataSourceEntriesTableDataState = selector({\n  key: \"dataSourceEntriesTableData\",\n  get: ({ get }) => {\n    let dataSourceEntries = get(dataSourceEntriesState);\n    let profileFlags = get(profileFlagsState);\n\n    dataSourceEntries = dataSourceEntries.map((x) => {\n      return { isUserOwned: true, ...x };\n    });\n    let orgDataSourceEntries = profileFlags.IS_ORGANIZATION_MEMBER\n      ? get(orgDataSourceEntriesState)\n      : [];\n    orgDataSourceEntries = orgDataSourceEntries.map((x) => {\n      return { isUserOwned: false, ...x };\n    });\n\n    let privateDataSources = get(dataSourcesState);\n    privateDataSources = privateDataSources.map((x) => {\n      return { isUserOwned: true, ...x };\n    });\n    const privateDataSourcesUUIDs = privateDataSources.map((x) => x.uuid);\n\n    let orgDataSources = profileFlags.IS_ORGANIZATION_MEMBER\n      ? get(orgDataSourcesState)\n      : [];\n    orgDataSources = orgDataSources.map((x) => {\n      return { isUserOwned: false, ...x };\n    });\n\n    orgDataSources = orgDataSources.filter(\n      (x) => !privateDataSourcesUUIDs.includes(x.uuid),\n    );\n\n    let result = [];\n    const datasource_entries_map = {};\n    const org_datasource_entries_map = {};\n\n    for (let i = 0; i < dataSourceEntries.length; i++) {\n      if (dataSourceEntries[i].datasource.uuid in datasource_entries_map) {\n        datasource_entries_map[dataSourceEntries[i].datasource.uuid].push(\n          dataSourceEntries[i],\n        );\n      } else {\n        datasource_entries_map[dataSourceEntries[i].datasource.uuid] = [\n          dataSourceEntries[i],\n        ];\n      }\n    }\n\n    for (let i = 0; i < orgDataSourceEntries.length; i++) {\n      if (\n        orgDataSourceEntries[i].datasource.uuid in org_datasource_entries_map\n      ) {\n        org_datasource_entries_map[\n          orgDataSourceEntries[i].datasource.uuid\n        ].push(orgDataSourceEntries[i]);\n      } else {\n        org_datasource_entries_map[orgDataSourceEntries[i].datasource.uuid] = [\n          orgDataSourceEntries[i],\n        ];\n      }\n    }\n\n    for (let i = 0; i < privateDataSources.length; i++) {\n      result.push({\n        ...privateDataSources[i],\n        ...{\n          data_source_entries:\n            datasource_entries_map[privateDataSources[i].uuid] || [],\n        },\n      });\n    }\n\n    for (let i = 0; i < orgDataSources.length; i++) {\n      result.push({\n        ...orgDataSources[i],\n        ...{\n          data_source_entries:\n            org_datasource_entries_map[orgDataSources[i].uuid] || [],\n        },\n      });\n    }\n\n    return result;\n  },\n});\n\nexport const isMobileState = atom({\n  key: \"isMobileState\",\n  default: window.innerWidth < 768,\n});\n\nexport const appTemplateState = atom({\n  key: \"appTemplateState\",\n  default: null,\n});\n\nexport const appDebugState = atom({\n  key: \"appDebugState\",\n  default: {},\n});\n\nconst appsFetchSelector = selector({\n  key: \"appsFetchSelector\",\n  get: async () => {\n    try {\n      const apps = await axios().get(\"/api/apps\");\n      return apps.data;\n    } catch (error) {\n      return [];\n    }\n  },\n});\n\nexport const appsState = atom({\n  key: \"appsState\",\n  default: appsFetchSelector,\n});\n\nexport const profileFlagsFetchSelector = selector({\n  key: \"profileFlagsFetchSelector\",\n  get: async () => {\n    try {\n      const profile = await axios().get(\"/api/profiles/me/flags\");\n      return profile.data;\n    } catch (error) {\n      return {};\n    }\n  },\n});\n\nexport const profileFlagsState = atom({\n  key: \"profileFlagsState\",\n  default: profileFlagsFetchSelector,\n});\n\nexport const organizationFetchSelector = selector({\n  key: \"organizationFetchSelector\",\n  get: async () => {\n    try {\n      const organization = await axios().get(\"/api/org\");\n      return organization.data;\n    } catch (error) {\n      return null;\n    }\n  },\n});\n\nexport const organizationState = atom({\n  key: \"organizationState\",\n  default: organizationFetchSelector,\n});\n","import axiosLib from \"axios\";\nimport { enqueueSnackbar } from \"notistack\";\n\nexport const axios = () => {\n  const caxios = axiosLib.create({\n    xsrfCookieName: \"csrftoken\",\n    xsrfHeaderName: \"X-CSRFToken\",\n  });\n\n  caxios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (\n        !window.location.pathname.startsWith(\"/s/\") &&\n        !window.location.pathname.startsWith(\"/hub\") &&\n        !window.location.pathname.startsWith(\"/app/\") &&\n        (error.response.status === 401 || error.response.status === 403)\n      ) {\n        window.location.href = \"/login\";\n      }\n      enqueueSnackbar(\"Error Occurred\", { variant: \"error\" });\n      return Promise.reject(error);\n    },\n  );\n\n  return caxios;\n};\n","const getCookie = (name) => {\n  const cookieValue = document.cookie\n    .split(\";\")\n    .find((cookie) => cookie.trim().startsWith(`${name}=`));\n  if (!cookieValue) return null;\n  return cookieValue.split(\"=\")[1];\n};\n\nexport const fetchData = async (url, loadingCb, responseCb, errorCb) => {\n  try {\n    loadingCb(true);\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const postData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const putData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n\nexport const patchData = async (url, data, loadingCb, responseCb, errorCb) => {\n  try {\n    const response = await fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      },\n      body: JSON.stringify(data),\n    });\n    const json = await response.json();\n    responseCb(json);\n    loadingCb(false);\n  } catch (e) {\n    errorCb(e.message);\n    loadingCb(false);\n  }\n};\n","import {\n  Row,\n  Col,\n  Button,\n  Form,\n  Input,\n  Spin,\n  Tooltip,\n  Card,\n  Upload,\n  Divider,\n} from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useEffect, useState } from \"react\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { fetchData, patchData } from \"./dataUtil\";\nimport { organizationState, profileFlagsState } from \"../data/atoms\";\nimport { useRecoilValue } from \"recoil\";\n\nconst onLogoPreview = async (file) => {\n  let src = file.url;\n  if (!src) {\n    src = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file.originFileObj);\n      reader.onload = () => resolve(reader.result);\n    });\n  }\n  const image = new Image();\n  image.src = src;\n  const imgWindow = window.open(src);\n  imgWindow?.document.write(image.outerHTML);\n};\n\nconst SettingPage = () => {\n  const [formData, setFormData] = useState({\n    token: \"\",\n    openai_key: \"\",\n    stabilityai_key: \"\",\n    cohere_key: \"\",\n    forefrontai_key: \"\",\n    elevenlabs_key: \"\",\n    localai_api_key: \"\",\n    localai_base_url: \"\",\n    logo: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  const [updateKeys, setUpdateKeys] = useState(new Set());\n  const profileFlags = useRecoilValue(profileFlagsState);\n  const organization = useRecoilValue(organizationState);\n\n  useEffect(() => {\n    fetchData(\n      \"api/profiles/me\",\n      () => {},\n      (profile) => {\n        setFormData({\n          token: profile.token,\n          openai_key: profile.openai_key,\n          stabilityai_key: profile.stabilityai_key,\n          cohere_key: profile.cohere_key,\n          forefrontai_key: profile.forefrontai_key,\n          elevenlabs_key: profile.elevenlabs_key,\n          google_service_account_json_key:\n            profile.google_service_account_json_key,\n          azure_openai_api_key: profile.azure_openai_api_key,\n          localai_api_key: profile.localai_api_key,\n          localai_base_url: profile.localai_base_url,\n          logo: profile.logo,\n          user_email: profile.user_email,\n        });\n        setLoading(false);\n      },\n    );\n  }, []);\n\n  const handleUpdate = (form_field) => {\n    setLoading(true);\n    let data = {};\n    data[form_field] = formData[form_field];\n\n    patchData(\n      \"api/profiles/me\",\n      data,\n      (loading_result) => {\n        setLoading(loading_result);\n      },\n      (profile) => {\n        setFormData({\n          token: profile.token,\n          openai_key: profile.openai_key,\n          stabilityai_key: profile.stabilityai_key,\n          cohere_key: profile.cohere_key,\n          forefrontai_key: profile.forefrontai_key,\n          elevenlabs_key: profile.elevenlabs_key,\n          google_service_account_json_key:\n            profile.google_service_account_json_key,\n          azure_openai_api_key: profile.azure_openai_api_key,\n          localai_api_key: profile.localai_api_key,\n          localai_base_url: profile.localai_base_url,\n          logo: profile.logo,\n        });\n        setLoading(false);\n      },\n      () => {},\n    );\n  };\n\n  return (\n    <div id=\"setting-page\">\n      <Spin spinning={loading} size={\"large\"}>\n        <Form layout=\"vertical\">\n          <Card title=\"Settings\" style={{ textAlign: \"left\", padding: 4 }}>\n            <Row>\n              <Col span={16}>\n                <Form.Item label=\"Promptly Token\">\n                  <Input.Group compact>\n                    <Input\n                      readOnly={true}\n                      style={{\n                        width: \"350px\",\n                      }}\n                      value={formData.token}\n                      defaultValue={formData.token}\n                    />\n                    <Tooltip title=\"Copy Promptly API Token\">\n                      <Button\n                        icon={<CopyOutlined />}\n                        onClick={() =>\n                          navigator.clipboard.writeText(formData.token)\n                        }\n                      />\n                    </Tooltip>\n                  </Input.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"OpenAI API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.openai_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            openai_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"openai_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"StabilityAI API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.stabilityai_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            stabilityai_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"stabilityai_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Cohere API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.cohere_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            cohere_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"cohere_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Elevenlabs API Token\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.elevenlabs_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            elevenlabs_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"elevenlabs_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"Azure OpenAI API Key\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.azure_openai_api_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            azure_openai_api_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"azure_openai_api_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item\n                  label=\"Google Service Account JSON Key\"\n                  tooltip=\"base64 encoded JSON key.\"\n                >\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.google_service_account_json_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            google_service_account_json_key: e.target.value,\n                          });\n                          setUpdateKeys(\n                            updateKeys.add(\"google_service_account_json_key\"),\n                          );\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"LocalAI Base URL\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input\n                        value={formData.localai_base_url}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            localai_base_url: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"localai_base_url\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24} md={14}>\n                <Form.Item label=\"LocalAI API Key\">\n                  <Row>\n                    <Col xs={24} md={16}>\n                      {\" \"}\n                      <Input.Password\n                        value={formData.localai_api_key}\n                        disabled={!profileFlags.CAN_ADD_KEYS}\n                        onChange={(e) => {\n                          setFormData({\n                            ...formData,\n                            localai_api_key: e.target.value,\n                          });\n                          setUpdateKeys(updateKeys.add(\"localai_api_key\"));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Row>\n            {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n              \"true\" && (\n              <>\n                <Row>\n                  <Col span={16}>\n                    <Form.Item\n                      name=\"logo\"\n                      label=\"Custom Logo\"\n                      valuePropName=\"filelist\"\n                      help=\"[Pro Feature] Add a custom logo to your Promptly apps. 150px x 30px recommended.\"\n                    >\n                      <Row>\n                        <Col span={24}>\n                          {\" \"}\n                          <ImgCrop rotationSlider aspect={5.06}>\n                            <Upload\n                              disabled={!profileFlags.CAN_UPLOAD_APP_LOGO}\n                              accept=\"image/*\"\n                              action={(file) => {\n                                return new Promise((resolve) => {\n                                  const reader = new FileReader();\n                                  reader.readAsDataURL(file);\n                                  reader.onload = (e) => {\n                                    setFormData({\n                                      ...formData,\n                                      logo: e.target?.result,\n                                    });\n                                    resolve(e.target?.result);\n                                  };\n                                });\n                              }}\n                              listType=\"picture-card\"\n                              fileList={\n                                formData.logo\n                                  ? [\n                                      {\n                                        uid: \"-1\",\n                                        name: \"logo.png\",\n                                        status: \"done\",\n                                        url: formData.logo,\n                                      },\n                                    ]\n                                  : []\n                              }\n                              onChange={({ fileList }) => {\n                                if (fileList.length === 0) {\n                                  setFormData({\n                                    ...formData,\n                                    logo: \"\",\n                                  });\n                                }\n                                setUpdateKeys(updateKeys.add(\"logo\"));\n                              }}\n                              onPreview={onLogoPreview}\n                            >\n                              {formData.logo ? \"\" : \"+ Upload\"}\n                            </Upload>\n                          </ImgCrop>\n                        </Col>\n                      </Row>\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Divider />\n              </>\n            )}\n            {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n              \"true\" && (\n              <>\n                <Row style={{ flexDirection: \"column\" }}>\n                  <strong>Subscription</strong>\n                  <p\n                    style={{\n                      display: profileFlags.IS_ORGANIZATION_MEMBER\n                        ? \"none\"\n                        : \"block\",\n                    }}\n                  >\n                    Logged in as&nbsp;<strong>{formData.user_email}</strong>.\n                    You are currently subscribed to&nbsp;\n                    <strong>\n                      {profileFlags.IS_PRO_SUBSCRIBER\n                        ? \"Pro\"\n                        : profileFlags.IS_BASIC_SUBSCRIBER\n                        ? \"Basic\"\n                        : \"Free\"}\n                    </strong>\n                    &nbsp;tier. Click on the Manage Subscription button below to\n                    change your plan.&nbsp;\n                    <br />\n                    <i>\n                      Note: You will be needed to login with a link that is sent\n                      to your email.\n                    </i>\n                  </p>\n                  <p\n                    style={{\n                      display: profileFlags.IS_ORGANIZATION_MEMBER\n                        ? \"block\"\n                        : \"none\",\n                    }}\n                  >\n                    Logged in as <strong>{formData.user_email}</strong>. Your\n                    account is managed by your organization,&nbsp;\n                    <strong>{organization?.name}</strong>. Please contact your\n                    admin to manage your subscription.\n                  </p>\n                </Row>\n                <Divider />\n              </>\n            )}\n            <Row style={{ gap: 5 }}>\n              {process.env.REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT ===\n                \"true\" && (\n                <Button\n                  href={`${\n                    process.env.REACT_APP_SUBSCRIPTION_MANAGEMENT_URL\n                  }?prefilled_email=${encodeURIComponent(formData.user_email)}`}\n                  target=\"_blank\"\n                  style={{\n                    display: profileFlags.IS_ORGANIZATION_MEMBER\n                      ? \"none\"\n                      : \"inherit\",\n                  }}\n                >\n                  Manage Subscription\n                </Button>\n              )}\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  updateKeys.forEach((updateKey) => handleUpdate(updateKey));\n                }}\n              >\n                Update\n              </Button>\n            </Row>\n          </Card>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\n\nexport default SettingPage;\n"],"names":["apiProvidersFetchSelector","selector","key","get","axios","apiProviders","data","apiBackendsFetchSelector","apiBackends","endpointsFetchSelector","endpoints","dataSourcesFetchSelector","dataSources","dataSourceTypesFetchSelector","dataSourceTypes","apiProvidersState","atom","default","apiProviderDropdownListState","map","x","label","name","value","apiProviderSelectedState","apiBackendsState","apiBackendDropdownListState","organization","organizationState","filter","apiBackend","disabled_api_backends","indexOf","id","provider","api_provider","apiBackendSelectedState","endpointsState","endpointSelectedState","version","draft","sort","a","b","created_on","api_backend","uuid","options","y","parent_uuid","z","description","backend","is_live","endpointTableDataState","endpoint","parentEndpoints","reduce","acc","entry","entry_map","versions","childEndpoints","i","length","push","Object","values","endpointConfigValueState","templateValueState","inputValueState","profileFetchSelector","profile","profileState","isLoggedInState","promptHubState","dataSourcesState","orgDataSourcesState","profileFlagsState","IS_ORGANIZATION_MEMBER","dataSourceTypesState","dataSourceEntriesState","orgDataSourceEntriesState","dataSourceEntriesTableDataState","dataSourceEntries","profileFlags","isUserOwned","orgDataSourceEntries","privateDataSources","privateDataSourcesUUIDs","orgDataSources","includes","result","datasource_entries_map","org_datasource_entries_map","datasource","data_source_entries","isMobileState","window","innerWidth","appsFetchSelector","apps","appsState","profileFlagsFetchSelector","organizationFetchSelector","caxios","axiosLib","xsrfCookieName","xsrfHeaderName","interceptors","response","use","error","location","pathname","startsWith","status","href","enqueueSnackbar","variant","Promise","reject","getCookie","cookieValue","document","cookie","split","find","trim","fetchData","url","loadingCb","responseCb","errorCb","fetch","ok","Error","statusText","json","message","postData","method","headers","body","JSON","stringify","patchData","onLogoPreview","file","src","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","imgWindow","open","write","outerHTML","useState","token","openai_key","stabilityai_key","cohere_key","forefrontai_key","elevenlabs_key","localai_api_key","localai_base_url","logo","formData","setFormData","loading","setLoading","Set","updateKeys","setUpdateKeys","useRecoilValue","useEffect","google_service_account_json_key","azure_openai_api_key","user_email","spinning","size","layout","title","style","textAlign","padding","span","compact","readOnly","width","defaultValue","icon","onClick","navigator","clipboard","writeText","xs","md","disabled","CAN_ADD_KEYS","onChange","e","target","add","tooltip","process","REACT_APP_ENABLE_SUBSCRIPTION_MANAGEMENT","valuePropName","help","rotationSlider","aspect","CAN_UPLOAD_APP_LOGO","accept","action","listType","fileList","uid","onPreview","flexDirection","display","IS_PRO_SUBSCRIBER","IS_BASIC_SUBSCRIBER","gap","REACT_APP_SUBSCRIPTION_MANAGEMENT_URL","encodeURIComponent","type","forEach","updateKey","form_field","loading_result","handleUpdate"],"sourceRoot":""}