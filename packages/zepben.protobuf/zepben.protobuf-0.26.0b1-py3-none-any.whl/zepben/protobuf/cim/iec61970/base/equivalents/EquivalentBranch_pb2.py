# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/equivalents/EquivalentBranch.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.equivalents import EquivalentEquipment_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_equivalents_dot_EquivalentEquipment__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nDzepben/protobuf/cim/iec61970/base/equivalents/EquivalentBranch.proto\x12-zepben.protobuf.cim.iec61970.base.equivalents\x1aGzepben/protobuf/cim/iec61970/base/equivalents/EquivalentEquipment.proto\"\xfe\x02\n\x10\x45quivalentBranch\x12N\n\x02\x65\x65\x18\x01 \x01(\x0b\x32\x42.zepben.protobuf.cim.iec61970.base.equivalents.EquivalentEquipment\x12\x13\n\x0bnegativeR12\x18\x02 \x01(\x01\x12\x13\n\x0bnegativeR21\x18\x03 \x01(\x01\x12\x13\n\x0bnegativeX12\x18\x04 \x01(\x01\x12\x13\n\x0bnegativeX21\x18\x05 \x01(\x01\x12\x13\n\x0bpositiveR12\x18\x06 \x01(\x01\x12\x13\n\x0bpositiveR21\x18\x07 \x01(\x01\x12\x13\n\x0bpositiveX12\x18\x08 \x01(\x01\x12\x13\n\x0bpositiveX21\x18\t \x01(\x01\x12\t\n\x01r\x18\n \x01(\x01\x12\x0b\n\x03r21\x18\x0b \x01(\x01\x12\t\n\x01x\x18\x0c \x01(\x01\x12\x0b\n\x03x21\x18\r \x01(\x01\x12\x0f\n\x07zeroR12\x18\x0e \x01(\x01\x12\x0f\n\x07zeroR21\x18\x0f \x01(\x01\x12\x0f\n\x07zeroX12\x18\x10 \x01(\x01\x12\x0f\n\x07zeroX21\x18\x11 \x01(\x01\x42\x65\n1com.zepben.protobuf.cim.iec61970.base.equivalentsP\x01\xaa\x02-Zepben.Protobuf.CIM.IEC61970.Base.Equivalentsb\x06proto3')



_EQUIVALENTBRANCH = DESCRIPTOR.message_types_by_name['EquivalentBranch']
EquivalentBranch = _reflection.GeneratedProtocolMessageType('EquivalentBranch', (_message.Message,), {
  'DESCRIPTOR' : _EQUIVALENTBRANCH,
  '__module__' : 'zepben.protobuf.cim.iec61970.base.equivalents.EquivalentBranch_pb2'
  # @@protoc_insertion_point(class_scope:zepben.protobuf.cim.iec61970.base.equivalents.EquivalentBranch)
  })
_sym_db.RegisterMessage(EquivalentBranch)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n1com.zepben.protobuf.cim.iec61970.base.equivalentsP\001\252\002-Zepben.Protobuf.CIM.IEC61970.Base.Equivalents'
  _EQUIVALENTBRANCH._serialized_start=193
  _EQUIVALENTBRANCH._serialized_end=575
# @@protoc_insertion_point(module_scope)
