# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/core/ConnectivityNodeContainer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.core import PowerSystemResource_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_core_dot_PowerSystemResource__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nFzepben/protobuf/cim/iec61970/base/core/ConnectivityNodeContainer.proto\x12&zepben.protobuf.cim.iec61970.base.core\x1a@zepben/protobuf/cim/iec61970/base/core/PowerSystemResource.proto\"e\n\x19\x43onnectivityNodeContainer\x12H\n\x03psr\x18\x01 \x01(\x0b\x32;.zepben.protobuf.cim.iec61970.base.core.PowerSystemResourceBW\n*com.zepben.protobuf.cim.iec61970.base.coreP\x01\xaa\x02&Zepben.Protobuf.CIM.IEC61970.Base.Coreb\x06proto3')



_CONNECTIVITYNODECONTAINER = DESCRIPTOR.message_types_by_name['ConnectivityNodeContainer']
ConnectivityNodeContainer = _reflection.GeneratedProtocolMessageType('ConnectivityNodeContainer', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIVITYNODECONTAINER,
  '__module__' : 'zepben.protobuf.cim.iec61970.base.core.ConnectivityNodeContainer_pb2'
  # @@protoc_insertion_point(class_scope:zepben.protobuf.cim.iec61970.base.core.ConnectivityNodeContainer)
  })
_sym_db.RegisterMessage(ConnectivityNodeContainer)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n*com.zepben.protobuf.cim.iec61970.base.coreP\001\252\002&Zepben.Protobuf.CIM.IEC61970.Base.Core'
  _CONNECTIVITYNODECONTAINER._serialized_start=180
  _CONNECTIVITYNODECONTAINER._serialized_end=281
# @@protoc_insertion_point(module_scope)
