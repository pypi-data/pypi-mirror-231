# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/core/IdentifiedObject.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.core import Name_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_core_dot_Name__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n=zepben/protobuf/cim/iec61970/base/core/IdentifiedObject.proto\x12&zepben.protobuf.cim.iec61970.base.core\x1a\x31zepben/protobuf/cim/iec61970/base/core/Name.proto\"\x9b\x01\n\x10IdentifiedObject\x12\x0c\n\x04mRID\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x19\n\x11numDiagramObjects\x18\x03 \x01(\x05\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12;\n\x05names\x18\x05 \x03(\x0b\x32,.zepben.protobuf.cim.iec61970.base.core.NameBW\n*com.zepben.protobuf.cim.iec61970.base.coreP\x01\xaa\x02&Zepben.Protobuf.CIM.IEC61970.Base.Coreb\x06proto3')



_IDENTIFIEDOBJECT = DESCRIPTOR.message_types_by_name['IdentifiedObject']
IdentifiedObject = _reflection.GeneratedProtocolMessageType('IdentifiedObject', (_message.Message,), {
  'DESCRIPTOR' : _IDENTIFIEDOBJECT,
  '__module__' : 'zepben.protobuf.cim.iec61970.base.core.IdentifiedObject_pb2'
  # @@protoc_insertion_point(class_scope:zepben.protobuf.cim.iec61970.base.core.IdentifiedObject)
  })
_sym_db.RegisterMessage(IdentifiedObject)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n*com.zepben.protobuf.cim.iec61970.base.coreP\001\252\002&Zepben.Protobuf.CIM.IEC61970.Base.Core'
  _IDENTIFIEDOBJECT._serialized_start=157
  _IDENTIFIEDOBJECT._serialized_end=312
# @@protoc_insertion_point(module_scope)
