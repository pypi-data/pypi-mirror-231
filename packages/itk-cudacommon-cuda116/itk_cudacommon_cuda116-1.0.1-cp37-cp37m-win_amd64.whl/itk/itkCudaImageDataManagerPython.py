# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CudaCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageDataManagerPython
else:
    import _itkCudaImageDataManagerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCudaImageDataManagerPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCudaImageDataManagerPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython

def itkCudaImageDataManagerCICVF22_New():
    return itkCudaImageDataManagerCICVF22.New()

class itkCudaImageDataManagerCICVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF22
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF22

        Create a new object of the class itkCudaImageDataManagerCICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_swigregister(itkCudaImageDataManagerCICVF22)
itkCudaImageDataManagerCICVF22___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22___New_orig__
itkCudaImageDataManagerCICVF22_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF22_cast


def itkCudaImageDataManagerCICVF23_New():
    return itkCudaImageDataManagerCICVF23.New()

class itkCudaImageDataManagerCICVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF23
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF23

        Create a new object of the class itkCudaImageDataManagerCICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_swigregister(itkCudaImageDataManagerCICVF23)
itkCudaImageDataManagerCICVF23___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23___New_orig__
itkCudaImageDataManagerCICVF23_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF23_cast


def itkCudaImageDataManagerCICVF24_New():
    return itkCudaImageDataManagerCICVF24.New()

class itkCudaImageDataManagerCICVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF24
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF24

        Create a new object of the class itkCudaImageDataManagerCICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_swigregister(itkCudaImageDataManagerCICVF24)
itkCudaImageDataManagerCICVF24___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24___New_orig__
itkCudaImageDataManagerCICVF24_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF24_cast


def itkCudaImageDataManagerCICVF32_New():
    return itkCudaImageDataManagerCICVF32.New()

class itkCudaImageDataManagerCICVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF32
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF32

        Create a new object of the class itkCudaImageDataManagerCICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_swigregister(itkCudaImageDataManagerCICVF32)
itkCudaImageDataManagerCICVF32___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32___New_orig__
itkCudaImageDataManagerCICVF32_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF32_cast


def itkCudaImageDataManagerCICVF33_New():
    return itkCudaImageDataManagerCICVF33.New()

class itkCudaImageDataManagerCICVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF33
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF33

        Create a new object of the class itkCudaImageDataManagerCICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_swigregister(itkCudaImageDataManagerCICVF33)
itkCudaImageDataManagerCICVF33___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33___New_orig__
itkCudaImageDataManagerCICVF33_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF33_cast


def itkCudaImageDataManagerCICVF34_New():
    return itkCudaImageDataManagerCICVF34.New()

class itkCudaImageDataManagerCICVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF34
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF34

        Create a new object of the class itkCudaImageDataManagerCICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_swigregister(itkCudaImageDataManagerCICVF34)
itkCudaImageDataManagerCICVF34___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34___New_orig__
itkCudaImageDataManagerCICVF34_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF34_cast


def itkCudaImageDataManagerCICVF42_New():
    return itkCudaImageDataManagerCICVF42.New()

class itkCudaImageDataManagerCICVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF42
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF42

        Create a new object of the class itkCudaImageDataManagerCICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_swigregister(itkCudaImageDataManagerCICVF42)
itkCudaImageDataManagerCICVF42___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42___New_orig__
itkCudaImageDataManagerCICVF42_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF42_cast


def itkCudaImageDataManagerCICVF43_New():
    return itkCudaImageDataManagerCICVF43.New()

class itkCudaImageDataManagerCICVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF43
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF43

        Create a new object of the class itkCudaImageDataManagerCICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_swigregister(itkCudaImageDataManagerCICVF43)
itkCudaImageDataManagerCICVF43___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43___New_orig__
itkCudaImageDataManagerCICVF43_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF43_cast


def itkCudaImageDataManagerCICVF44_New():
    return itkCudaImageDataManagerCICVF44.New()

class itkCudaImageDataManagerCICVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCICVF44
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF44

        Create a new object of the class itkCudaImageDataManagerCICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_swigregister(itkCudaImageDataManagerCICVF44)
itkCudaImageDataManagerCICVF44___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44___New_orig__
itkCudaImageDataManagerCICVF44_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCICVF44_cast


def itkCudaImageDataManagerCID2_New():
    return itkCudaImageDataManagerCID2.New()

class itkCudaImageDataManagerCID2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID2

        Create a new object of the class itkCudaImageDataManagerCID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_swigregister(itkCudaImageDataManagerCID2)
itkCudaImageDataManagerCID2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2___New_orig__
itkCudaImageDataManagerCID2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID2_cast


def itkCudaImageDataManagerCID3_New():
    return itkCudaImageDataManagerCID3.New()

class itkCudaImageDataManagerCID3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID3

        Create a new object of the class itkCudaImageDataManagerCID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_swigregister(itkCudaImageDataManagerCID3)
itkCudaImageDataManagerCID3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3___New_orig__
itkCudaImageDataManagerCID3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID3_cast


def itkCudaImageDataManagerCID4_New():
    return itkCudaImageDataManagerCID4.New()

class itkCudaImageDataManagerCID4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCID4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCID4

        Create a new object of the class itkCudaImageDataManagerCID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCID4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_swigregister(itkCudaImageDataManagerCID4)
itkCudaImageDataManagerCID4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4___New_orig__
itkCudaImageDataManagerCID4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCID4_cast


def itkCudaImageDataManagerCIF2_New():
    return itkCudaImageDataManagerCIF2.New()

class itkCudaImageDataManagerCIF2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF2

        Create a new object of the class itkCudaImageDataManagerCIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_swigregister(itkCudaImageDataManagerCIF2)
itkCudaImageDataManagerCIF2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2___New_orig__
itkCudaImageDataManagerCIF2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF2_cast


def itkCudaImageDataManagerCIF3_New():
    return itkCudaImageDataManagerCIF3.New()

class itkCudaImageDataManagerCIF3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF3

        Create a new object of the class itkCudaImageDataManagerCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_swigregister(itkCudaImageDataManagerCIF3)
itkCudaImageDataManagerCIF3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3___New_orig__
itkCudaImageDataManagerCIF3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF3_cast


def itkCudaImageDataManagerCIF4_New():
    return itkCudaImageDataManagerCIF4.New()

class itkCudaImageDataManagerCIF4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIF4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIF4

        Create a new object of the class itkCudaImageDataManagerCIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIF4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_swigregister(itkCudaImageDataManagerCIF4)
itkCudaImageDataManagerCIF4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4___New_orig__
itkCudaImageDataManagerCIF4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIF4_cast


def itkCudaImageDataManagerCISS2_New():
    return itkCudaImageDataManagerCISS2.New()

class itkCudaImageDataManagerCISS2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS2

        Create a new object of the class itkCudaImageDataManagerCISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_swigregister(itkCudaImageDataManagerCISS2)
itkCudaImageDataManagerCISS2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2___New_orig__
itkCudaImageDataManagerCISS2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS2_cast


def itkCudaImageDataManagerCISS3_New():
    return itkCudaImageDataManagerCISS3.New()

class itkCudaImageDataManagerCISS3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS3

        Create a new object of the class itkCudaImageDataManagerCISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_swigregister(itkCudaImageDataManagerCISS3)
itkCudaImageDataManagerCISS3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3___New_orig__
itkCudaImageDataManagerCISS3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS3_cast


def itkCudaImageDataManagerCISS4_New():
    return itkCudaImageDataManagerCISS4.New()

class itkCudaImageDataManagerCISS4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCISS4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCISS4

        Create a new object of the class itkCudaImageDataManagerCISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCISS4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_swigregister(itkCudaImageDataManagerCISS4)
itkCudaImageDataManagerCISS4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4___New_orig__
itkCudaImageDataManagerCISS4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCISS4_cast


def itkCudaImageDataManagerCIUC2_New():
    return itkCudaImageDataManagerCIUC2.New()

class itkCudaImageDataManagerCIUC2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC2

        Create a new object of the class itkCudaImageDataManagerCIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_swigregister(itkCudaImageDataManagerCIUC2)
itkCudaImageDataManagerCIUC2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2___New_orig__
itkCudaImageDataManagerCIUC2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC2_cast


def itkCudaImageDataManagerCIUC3_New():
    return itkCudaImageDataManagerCIUC3.New()

class itkCudaImageDataManagerCIUC3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC3

        Create a new object of the class itkCudaImageDataManagerCIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_swigregister(itkCudaImageDataManagerCIUC3)
itkCudaImageDataManagerCIUC3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3___New_orig__
itkCudaImageDataManagerCIUC3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC3_cast


def itkCudaImageDataManagerCIUC4_New():
    return itkCudaImageDataManagerCIUC4.New()

class itkCudaImageDataManagerCIUC4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUC4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUC4

        Create a new object of the class itkCudaImageDataManagerCIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUC4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_swigregister(itkCudaImageDataManagerCIUC4)
itkCudaImageDataManagerCIUC4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4___New_orig__
itkCudaImageDataManagerCIUC4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUC4_cast


def itkCudaImageDataManagerCIUL2_New():
    return itkCudaImageDataManagerCIUL2.New()

class itkCudaImageDataManagerCIUL2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL2

        Create a new object of the class itkCudaImageDataManagerCIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_swigregister(itkCudaImageDataManagerCIUL2)
itkCudaImageDataManagerCIUL2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2___New_orig__
itkCudaImageDataManagerCIUL2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL2_cast


def itkCudaImageDataManagerCIUL3_New():
    return itkCudaImageDataManagerCIUL3.New()

class itkCudaImageDataManagerCIUL3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL3

        Create a new object of the class itkCudaImageDataManagerCIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_swigregister(itkCudaImageDataManagerCIUL3)
itkCudaImageDataManagerCIUL3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3___New_orig__
itkCudaImageDataManagerCIUL3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL3_cast


def itkCudaImageDataManagerCIUL4_New():
    return itkCudaImageDataManagerCIUL4.New()

class itkCudaImageDataManagerCIUL4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUL4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUL4

        Create a new object of the class itkCudaImageDataManagerCIUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUL4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_swigregister(itkCudaImageDataManagerCIUL4)
itkCudaImageDataManagerCIUL4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4___New_orig__
itkCudaImageDataManagerCIUL4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUL4_cast


def itkCudaImageDataManagerCIUS2_New():
    return itkCudaImageDataManagerCIUS2.New()

class itkCudaImageDataManagerCIUS2(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS2
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS2

        Create a new object of the class itkCudaImageDataManagerCIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS2 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_swigregister(itkCudaImageDataManagerCIUS2)
itkCudaImageDataManagerCIUS2___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2___New_orig__
itkCudaImageDataManagerCIUS2_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS2_cast


def itkCudaImageDataManagerCIUS3_New():
    return itkCudaImageDataManagerCIUS3.New()

class itkCudaImageDataManagerCIUS3(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS3
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS3

        Create a new object of the class itkCudaImageDataManagerCIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS3 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_swigregister(itkCudaImageDataManagerCIUS3)
itkCudaImageDataManagerCIUS3___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3___New_orig__
itkCudaImageDataManagerCIUS3_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS3_cast


def itkCudaImageDataManagerCIUS4_New():
    return itkCudaImageDataManagerCIUS4.New()

class itkCudaImageDataManagerCIUS4(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIUS4
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIUS4

        Create a new object of the class itkCudaImageDataManagerCIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIUS4 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_swigregister(itkCudaImageDataManagerCIUS4)
itkCudaImageDataManagerCIUS4___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4___New_orig__
itkCudaImageDataManagerCIUS4_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIUS4_cast


def itkCudaImageDataManagerCIVF22_New():
    return itkCudaImageDataManagerCIVF22.New()

class itkCudaImageDataManagerCIVF22(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF22
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF22

        Create a new object of the class itkCudaImageDataManagerCIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF22 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_swigregister(itkCudaImageDataManagerCIVF22)
itkCudaImageDataManagerCIVF22___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22___New_orig__
itkCudaImageDataManagerCIVF22_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF22_cast


def itkCudaImageDataManagerCIVF23_New():
    return itkCudaImageDataManagerCIVF23.New()

class itkCudaImageDataManagerCIVF23(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF23
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF23

        Create a new object of the class itkCudaImageDataManagerCIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF23 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_swigregister(itkCudaImageDataManagerCIVF23)
itkCudaImageDataManagerCIVF23___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23___New_orig__
itkCudaImageDataManagerCIVF23_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF23_cast


def itkCudaImageDataManagerCIVF24_New():
    return itkCudaImageDataManagerCIVF24.New()

class itkCudaImageDataManagerCIVF24(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF24
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF24

        Create a new object of the class itkCudaImageDataManagerCIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF24 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_swigregister(itkCudaImageDataManagerCIVF24)
itkCudaImageDataManagerCIVF24___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24___New_orig__
itkCudaImageDataManagerCIVF24_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF24_cast


def itkCudaImageDataManagerCIVF32_New():
    return itkCudaImageDataManagerCIVF32.New()

class itkCudaImageDataManagerCIVF32(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF32
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF32

        Create a new object of the class itkCudaImageDataManagerCIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF32 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_swigregister(itkCudaImageDataManagerCIVF32)
itkCudaImageDataManagerCIVF32___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32___New_orig__
itkCudaImageDataManagerCIVF32_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF32_cast


def itkCudaImageDataManagerCIVF33_New():
    return itkCudaImageDataManagerCIVF33.New()

class itkCudaImageDataManagerCIVF33(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF33
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF33

        Create a new object of the class itkCudaImageDataManagerCIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF33 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_swigregister(itkCudaImageDataManagerCIVF33)
itkCudaImageDataManagerCIVF33___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33___New_orig__
itkCudaImageDataManagerCIVF33_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF33_cast


def itkCudaImageDataManagerCIVF34_New():
    return itkCudaImageDataManagerCIVF34.New()

class itkCudaImageDataManagerCIVF34(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF34
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF34

        Create a new object of the class itkCudaImageDataManagerCIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF34 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_swigregister(itkCudaImageDataManagerCIVF34)
itkCudaImageDataManagerCIVF34___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34___New_orig__
itkCudaImageDataManagerCIVF34_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF34_cast


def itkCudaImageDataManagerCIVF42_New():
    return itkCudaImageDataManagerCIVF42.New()

class itkCudaImageDataManagerCIVF42(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF42
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF42

        Create a new object of the class itkCudaImageDataManagerCIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF42 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_swigregister(itkCudaImageDataManagerCIVF42)
itkCudaImageDataManagerCIVF42___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42___New_orig__
itkCudaImageDataManagerCIVF42_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF42_cast


def itkCudaImageDataManagerCIVF43_New():
    return itkCudaImageDataManagerCIVF43.New()

class itkCudaImageDataManagerCIVF43(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF43
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF43

        Create a new object of the class itkCudaImageDataManagerCIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF43 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_swigregister(itkCudaImageDataManagerCIVF43)
itkCudaImageDataManagerCIVF43___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43___New_orig__
itkCudaImageDataManagerCIVF43_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF43_cast


def itkCudaImageDataManagerCIVF44_New():
    return itkCudaImageDataManagerCIVF44.New()

class itkCudaImageDataManagerCIVF44(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_Clone)
    GetModifiableGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionIndex)
    GetGPUBufferedRegionIndex = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionIndex)
    GetModifiableGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetModifiableGPUBufferedRegionSize)
    GetGPUBufferedRegionSize = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetGPUBufferedRegionSize)
    SetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_GetImagePointer)
    MakeCPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeCPUBufferUpToDate)
    MakeGPUBufferUpToDate = _swig_new_instance_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_MakeGPUBufferUpToDate)
    __swig_destroy__ = _itkCudaImageDataManagerPython.delete_itkCudaImageDataManagerCIVF44
    cast = _swig_new_static_method(_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_cast)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF44

        Create a new object of the class itkCudaImageDataManagerCIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF44 in _itkCudaImageDataManagerPython:
_itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_swigregister(itkCudaImageDataManagerCIVF44)
itkCudaImageDataManagerCIVF44___New_orig__ = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44___New_orig__
itkCudaImageDataManagerCIVF44_cast = _itkCudaImageDataManagerPython.itkCudaImageDataManagerCIVF44_cast



