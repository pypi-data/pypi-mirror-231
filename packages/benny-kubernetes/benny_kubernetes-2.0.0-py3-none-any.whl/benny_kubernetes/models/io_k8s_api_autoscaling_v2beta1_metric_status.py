# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr
from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta1_external_metric_status import IoK8sApiAutoscalingV2beta1ExternalMetricStatus
from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta1_object_metric_status import IoK8sApiAutoscalingV2beta1ObjectMetricStatus
from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta1_pods_metric_status import IoK8sApiAutoscalingV2beta1PodsMetricStatus
from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta1_resource_metric_status import IoK8sApiAutoscalingV2beta1ResourceMetricStatus

class IoK8sApiAutoscalingV2beta1MetricStatus(BaseModel):
    """
    MetricStatus describes the last-read state of a single metric.  # noqa: E501
    """
    external: Optional[IoK8sApiAutoscalingV2beta1ExternalMetricStatus] = None
    object: Optional[IoK8sApiAutoscalingV2beta1ObjectMetricStatus] = None
    pods: Optional[IoK8sApiAutoscalingV2beta1PodsMetricStatus] = None
    resource: Optional[IoK8sApiAutoscalingV2beta1ResourceMetricStatus] = None
    type: StrictStr = Field(..., description="type is the type of metric source.  It will be one of \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object.")
    __properties = ["external", "object", "pods", "resource", "type"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> IoK8sApiAutoscalingV2beta1MetricStatus:
        """Create an instance of IoK8sApiAutoscalingV2beta1MetricStatus from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of external
        if self.external:
            _dict['external'] = self.external.to_dict()
        # override the default output from pydantic by calling `to_dict()` of object
        if self.object:
            _dict['object'] = self.object.to_dict()
        # override the default output from pydantic by calling `to_dict()` of pods
        if self.pods:
            _dict['pods'] = self.pods.to_dict()
        # override the default output from pydantic by calling `to_dict()` of resource
        if self.resource:
            _dict['resource'] = self.resource.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> IoK8sApiAutoscalingV2beta1MetricStatus:
        """Create an instance of IoK8sApiAutoscalingV2beta1MetricStatus from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return IoK8sApiAutoscalingV2beta1MetricStatus.parse_obj(obj)

        _obj = IoK8sApiAutoscalingV2beta1MetricStatus.parse_obj({
            "external": IoK8sApiAutoscalingV2beta1ExternalMetricStatus.from_dict(obj.get("external")) if obj.get("external") is not None else None,
            "object": IoK8sApiAutoscalingV2beta1ObjectMetricStatus.from_dict(obj.get("object")) if obj.get("object") is not None else None,
            "pods": IoK8sApiAutoscalingV2beta1PodsMetricStatus.from_dict(obj.get("pods")) if obj.get("pods") is not None else None,
            "resource": IoK8sApiAutoscalingV2beta1ResourceMetricStatus.from_dict(obj.get("resource")) if obj.get("resource") is not None else None,
            "type": obj.get("type")
        })
        return _obj


