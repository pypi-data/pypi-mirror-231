# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, StrictStr, conlist

class IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions(BaseModel):
    """
    RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.  # noqa: E501
    """
    allowed_runtime_class_names: conlist(StrictStr) = Field(..., alias="allowedRuntimeClassNames", description="allowedRuntimeClassNames is a whitelist of RuntimeClass names that may be specified on a pod. A value of \"*\" means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.")
    default_runtime_class_name: Optional[StrictStr] = Field(None, alias="defaultRuntimeClassName", description="defaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.")
    __properties = ["allowedRuntimeClassNames", "defaultRuntimeClassName"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions:
        """Create an instance of IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions:
        """Create an instance of IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions.parse_obj(obj)

        _obj = IoK8sApiPolicyV1beta1RuntimeClassStrategyOptions.parse_obj({
            "allowed_runtime_class_names": obj.get("allowedRuntimeClassNames"),
            "default_runtime_class_name": obj.get("defaultRuntimeClassName")
        })
        return _obj


