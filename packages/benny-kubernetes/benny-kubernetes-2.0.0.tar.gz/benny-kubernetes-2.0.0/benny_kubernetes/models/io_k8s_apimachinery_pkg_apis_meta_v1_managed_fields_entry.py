# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Any, Dict, Optional
from pydantic import BaseModel, Field, StrictStr

class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry(BaseModel):
    """
    ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.  # noqa: E501
    """
    api_version: Optional[StrictStr] = Field(None, alias="apiVersion", description="APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.")
    fields_type: Optional[StrictStr] = Field(None, alias="fieldsType", description="FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"")
    fields_v1: Optional[Dict[str, Any]] = Field(None, alias="fieldsV1", description="FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.  Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.  The exact format is defined in sigs.k8s.io/structured-merge-diff")
    manager: Optional[StrictStr] = Field(None, description="Manager is an identifier of the workflow managing these fields.")
    operation: Optional[StrictStr] = Field(None, description="Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.")
    time: Optional[datetime] = Field(None, description="Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.")
    __properties = ["apiVersion", "fieldsType", "fieldsV1", "manager", "operation", "time"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry:
        """Create an instance of IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry:
        """Create an instance of IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.parse_obj(obj)

        _obj = IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.parse_obj({
            "api_version": obj.get("apiVersion"),
            "fields_type": obj.get("fieldsType"),
            "fields_v1": obj.get("fieldsV1"),
            "manager": obj.get("manager"),
            "operation": obj.get("operation"),
            "time": obj.get("time")
        })
        return _obj


