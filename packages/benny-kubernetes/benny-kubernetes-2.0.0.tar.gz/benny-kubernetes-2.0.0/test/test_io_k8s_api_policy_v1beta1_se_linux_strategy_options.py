# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_policy_v1beta1_se_linux_strategy_options import IoK8sApiPolicyV1beta1SELinuxStrategyOptions  # noqa: E501

class TestIoK8sApiPolicyV1beta1SELinuxStrategyOptions(unittest.TestCase):
    """IoK8sApiPolicyV1beta1SELinuxStrategyOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiPolicyV1beta1SELinuxStrategyOptions:
        """Test IoK8sApiPolicyV1beta1SELinuxStrategyOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiPolicyV1beta1SELinuxStrategyOptions`
        """
        model = IoK8sApiPolicyV1beta1SELinuxStrategyOptions()  # noqa: E501
        if include_optional:
            return IoK8sApiPolicyV1beta1SELinuxStrategyOptions(
                rule = '',
                se_linux_options = benny_kubernetes.models.io/k8s/api/core/v1/se_linux_options.io.k8s.api.core.v1.SELinuxOptions(
                    level = '', 
                    role = '', 
                    type = '', 
                    user = '', )
            )
        else:
            return IoK8sApiPolicyV1beta1SELinuxStrategyOptions(
                rule = '',
        )
        """

    def testIoK8sApiPolicyV1beta1SELinuxStrategyOptions(self):
        """Test IoK8sApiPolicyV1beta1SELinuxStrategyOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
