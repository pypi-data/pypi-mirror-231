# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta2_metric_spec import IoK8sApiAutoscalingV2beta2MetricSpec  # noqa: E501

class TestIoK8sApiAutoscalingV2beta2MetricSpec(unittest.TestCase):
    """IoK8sApiAutoscalingV2beta2MetricSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAutoscalingV2beta2MetricSpec:
        """Test IoK8sApiAutoscalingV2beta2MetricSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAutoscalingV2beta2MetricSpec`
        """
        model = IoK8sApiAutoscalingV2beta2MetricSpec()  # noqa: E501
        if include_optional:
            return IoK8sApiAutoscalingV2beta2MetricSpec(
                external = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/external_metric_source.io.k8s.api.autoscaling.v2beta2.ExternalMetricSource(
                    metric = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_identifier.io.k8s.api.autoscaling.v2beta2.MetricIdentifier(
                        name = '', 
                        selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                            match_expressions = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_labels = {
                                'key' : ''
                                }, ), ), 
                    target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_target.io.k8s.api.autoscaling.v2beta2.MetricTarget(
                        average_utilization = 56, 
                        average_value = '', 
                        type = '', 
                        value = '', ), ),
                object = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/object_metric_source.io.k8s.api.autoscaling.v2beta2.ObjectMetricSource(
                    described_object = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/cross_version_object_reference.io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference(
                        api_version = '', 
                        kind = '', 
                        name = '', ), 
                    metric = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_identifier.io.k8s.api.autoscaling.v2beta2.MetricIdentifier(
                        name = '', 
                        selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                            match_expressions = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_labels = {
                                'key' : ''
                                }, ), ), 
                    target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_target.io.k8s.api.autoscaling.v2beta2.MetricTarget(
                        average_utilization = 56, 
                        average_value = '', 
                        type = '', 
                        value = '', ), ),
                pods = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/pods_metric_source.io.k8s.api.autoscaling.v2beta2.PodsMetricSource(
                    metric = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_identifier.io.k8s.api.autoscaling.v2beta2.MetricIdentifier(
                        name = '', 
                        selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                            match_expressions = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_labels = {
                                'key' : ''
                                }, ), ), 
                    target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_target.io.k8s.api.autoscaling.v2beta2.MetricTarget(
                        average_utilization = 56, 
                        average_value = '', 
                        type = '', 
                        value = '', ), ),
                resource = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/resource_metric_source.io.k8s.api.autoscaling.v2beta2.ResourceMetricSource(
                    name = '', 
                    target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta2/metric_target.io.k8s.api.autoscaling.v2beta2.MetricTarget(
                        average_utilization = 56, 
                        average_value = '', 
                        type = '', 
                        value = '', ), ),
                type = ''
            )
        else:
            return IoK8sApiAutoscalingV2beta2MetricSpec(
                type = '',
        )
        """

    def testIoK8sApiAutoscalingV2beta2MetricSpec(self):
        """Test IoK8sApiAutoscalingV2beta2MetricSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
