# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_autoscaling_v1_horizontal_pod_autoscaler_status import IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus  # noqa: E501

class TestIoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus(unittest.TestCase):
    """IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus:
        """Test IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus`
        """
        model = IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus()  # noqa: E501
        if include_optional:
            return IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus(
                current_cpu_utilization_percentage = 56,
                current_replicas = 56,
                desired_replicas = 56,
                last_scale_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                observed_generation = 56
            )
        else:
            return IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus(
                current_replicas = 56,
                desired_replicas = 56,
        )
        """

    def testIoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus(self):
        """Test IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
