# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_networking_v1beta1_http_ingress_path import IoK8sApiNetworkingV1beta1HTTPIngressPath  # noqa: E501

class TestIoK8sApiNetworkingV1beta1HTTPIngressPath(unittest.TestCase):
    """IoK8sApiNetworkingV1beta1HTTPIngressPath unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiNetworkingV1beta1HTTPIngressPath:
        """Test IoK8sApiNetworkingV1beta1HTTPIngressPath
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiNetworkingV1beta1HTTPIngressPath`
        """
        model = IoK8sApiNetworkingV1beta1HTTPIngressPath()  # noqa: E501
        if include_optional:
            return IoK8sApiNetworkingV1beta1HTTPIngressPath(
                backend = benny_kubernetes.models.io/k8s/api/networking/v1beta1/ingress_backend.io.k8s.api.networking.v1beta1.IngressBackend(
                    resource = benny_kubernetes.models.io/k8s/api/core/v1/typed_local_object_reference.io.k8s.api.core.v1.TypedLocalObjectReference(
                        api_group = '', 
                        kind = '', 
                        name = '', ), 
                    service_name = '', 
                    service_port = '', ),
                path = '',
                path_type = ''
            )
        else:
            return IoK8sApiNetworkingV1beta1HTTPIngressPath(
                backend = benny_kubernetes.models.io/k8s/api/networking/v1beta1/ingress_backend.io.k8s.api.networking.v1beta1.IngressBackend(
                    resource = benny_kubernetes.models.io/k8s/api/core/v1/typed_local_object_reference.io.k8s.api.core.v1.TypedLocalObjectReference(
                        api_group = '', 
                        kind = '', 
                        name = '', ), 
                    service_name = '', 
                    service_port = '', ),
        )
        """

    def testIoK8sApiNetworkingV1beta1HTTPIngressPath(self):
        """Test IoK8sApiNetworkingV1beta1HTTPIngressPath"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
