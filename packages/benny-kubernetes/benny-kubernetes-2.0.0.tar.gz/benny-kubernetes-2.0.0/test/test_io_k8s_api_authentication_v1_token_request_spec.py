# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_authentication_v1_token_request_spec import IoK8sApiAuthenticationV1TokenRequestSpec  # noqa: E501

class TestIoK8sApiAuthenticationV1TokenRequestSpec(unittest.TestCase):
    """IoK8sApiAuthenticationV1TokenRequestSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAuthenticationV1TokenRequestSpec:
        """Test IoK8sApiAuthenticationV1TokenRequestSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAuthenticationV1TokenRequestSpec`
        """
        model = IoK8sApiAuthenticationV1TokenRequestSpec()  # noqa: E501
        if include_optional:
            return IoK8sApiAuthenticationV1TokenRequestSpec(
                audiences = [
                    ''
                    ],
                bound_object_ref = benny_kubernetes.models.io/k8s/api/authentication/v1/bound_object_reference.io.k8s.api.authentication.v1.BoundObjectReference(
                    api_version = '', 
                    kind = '', 
                    name = '', 
                    uid = '', ),
                expiration_seconds = 56
            )
        else:
            return IoK8sApiAuthenticationV1TokenRequestSpec(
                audiences = [
                    ''
                    ],
        )
        """

    def testIoK8sApiAuthenticationV1TokenRequestSpec(self):
        """Test IoK8sApiAuthenticationV1TokenRequestSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
