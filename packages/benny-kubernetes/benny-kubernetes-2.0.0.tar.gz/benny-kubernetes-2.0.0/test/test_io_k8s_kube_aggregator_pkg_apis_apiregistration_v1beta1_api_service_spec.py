# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_api_service_spec import IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec  # noqa: E501

class TestIoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec(unittest.TestCase):
    """IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec:
        """Test IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec`
        """
        model = IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec()  # noqa: E501
        if include_optional:
            return IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec(
                ca_bundle = 'YQ==',
                group = '',
                group_priority_minimum = 56,
                insecure_skip_tls_verify = True,
                service = benny_kubernetes.models.io/k8s/kube_aggregator/pkg/apis/apiregistration/v1beta1/service_reference.io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference(
                    name = '', 
                    namespace = '', 
                    port = 56, ),
                version = '',
                version_priority = 56
            )
        else:
            return IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec(
                group_priority_minimum = 56,
                version_priority = 56,
        )
        """

    def testIoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec(self):
        """Test IoK8sKubeAggregatorPkgApisApiregistrationV1beta1APIServiceSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
