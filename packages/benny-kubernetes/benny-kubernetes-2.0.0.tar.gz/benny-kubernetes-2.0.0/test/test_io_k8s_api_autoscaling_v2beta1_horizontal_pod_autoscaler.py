# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_autoscaling_v2beta1_horizontal_pod_autoscaler import IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler  # noqa: E501

class TestIoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler(unittest.TestCase):
    """IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler:
        """Test IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler`
        """
        model = IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler()  # noqa: E501
        if include_optional:
            return IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler(
                api_version = '',
                kind = '',
                metadata = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/object_meta.io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta(
                    annotations = {
                        'key' : ''
                        }, 
                    cluster_name = '', 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        ''
                        ], 
                    generate_name = '', 
                    generation = 56, 
                    labels = {
                        'key' : ''
                        }, 
                    managed_fields = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/managed_fields_entry.io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry(
                            api_version = '', 
                            fields_type = '', 
                            fields_v1 = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/fields_v1.io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1(), 
                            manager = '', 
                            operation = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    name = '', 
                    namespace = '', 
                    owner_references = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/owner_reference.io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference(
                            api_version = '', 
                            block_owner_deletion = True, 
                            controller = True, 
                            kind = '', 
                            name = '', 
                            uid = '', )
                        ], 
                    resource_version = '', 
                    self_link = '', 
                    uid = '', ),
                spec = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/horizontal_pod_autoscaler_spec.io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec(
                    max_replicas = 56, 
                    metrics = [
                        benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/metric_spec.io.k8s.api.autoscaling.v2beta1.MetricSpec(
                            external = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/external_metric_source.io.k8s.api.autoscaling.v2beta1.ExternalMetricSource(
                                metric_name = '', 
                                metric_selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                                    match_expressions = [
                                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                                            key = '', 
                                            operator = '', 
                                            values = [
                                                ''
                                                ], )
                                        ], 
                                    match_labels = {
                                        'key' : ''
                                        }, ), 
                                target_average_value = '', 
                                target_value = '', ), 
                            object = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/object_metric_source.io.k8s.api.autoscaling.v2beta1.ObjectMetricSource(
                                average_value = '', 
                                metric_name = '', 
                                selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(), 
                                target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/cross_version_object_reference.io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference(
                                    api_version = '', 
                                    kind = '', 
                                    name = '', ), 
                                target_value = '', ), 
                            pods = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/pods_metric_source.io.k8s.api.autoscaling.v2beta1.PodsMetricSource(
                                metric_name = '', 
                                target_average_value = '', ), 
                            resource = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/resource_metric_source.io.k8s.api.autoscaling.v2beta1.ResourceMetricSource(
                                name = '', 
                                target_average_utilization = 56, ), 
                            type = '', )
                        ], 
                    min_replicas = 56, 
                    scale_target_ref = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/cross_version_object_reference.io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference(
                        api_version = '', 
                        kind = '', 
                        name = '', ), ),
                status = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/horizontal_pod_autoscaler_status.io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus(
                    conditions = [
                        benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/horizontal_pod_autoscaler_condition.io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition(
                            last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            message = '', 
                            reason = '', 
                            status = '', 
                            type = '', )
                        ], 
                    current_metrics = [
                        benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/metric_status.io.k8s.api.autoscaling.v2beta1.MetricStatus(
                            external = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/external_metric_status.io.k8s.api.autoscaling.v2beta1.ExternalMetricStatus(
                                current_average_value = '', 
                                current_value = '', 
                                metric_name = '', 
                                metric_selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                                    match_expressions = [
                                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                                            key = '', 
                                            operator = '', 
                                            values = [
                                                ''
                                                ], )
                                        ], 
                                    match_labels = {
                                        'key' : ''
                                        }, ), ), 
                            object = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/object_metric_status.io.k8s.api.autoscaling.v2beta1.ObjectMetricStatus(
                                average_value = '', 
                                current_value = '', 
                                metric_name = '', 
                                selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(), 
                                target = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/cross_version_object_reference.io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference(
                                    api_version = '', 
                                    kind = '', 
                                    name = '', ), ), 
                            pods = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/pods_metric_status.io.k8s.api.autoscaling.v2beta1.PodsMetricStatus(
                                current_average_value = '', 
                                metric_name = '', ), 
                            resource = benny_kubernetes.models.io/k8s/api/autoscaling/v2beta1/resource_metric_status.io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus(
                                current_average_utilization = 56, 
                                current_average_value = '', 
                                name = '', ), 
                            type = '', )
                        ], 
                    current_replicas = 56, 
                    desired_replicas = 56, 
                    last_scale_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    observed_generation = 56, )
            )
        else:
            return IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler(
        )
        """

    def testIoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler(self):
        """Test IoK8sApiAutoscalingV2beta1HorizontalPodAutoscaler"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
