# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_core_v1_lifecycle import IoK8sApiCoreV1Lifecycle  # noqa: E501

class TestIoK8sApiCoreV1Lifecycle(unittest.TestCase):
    """IoK8sApiCoreV1Lifecycle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1Lifecycle:
        """Test IoK8sApiCoreV1Lifecycle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1Lifecycle`
        """
        model = IoK8sApiCoreV1Lifecycle()  # noqa: E501
        if include_optional:
            return IoK8sApiCoreV1Lifecycle(
                post_start = benny_kubernetes.models.io/k8s/api/core/v1/handler.io.k8s.api.core.v1.Handler(
                    exec = benny_kubernetes.models.io/k8s/api/core/v1/exec_action.io.k8s.api.core.v1.ExecAction(
                        command = [
                            ''
                            ], ), 
                    http_get = benny_kubernetes.models.io/k8s/api/core/v1/http_get_action.io.k8s.api.core.v1.HTTPGetAction(
                        host = '', 
                        http_headers = [
                            benny_kubernetes.models.io/k8s/api/core/v1/http_header.io.k8s.api.core.v1.HTTPHeader(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = '', 
                        scheme = '', ), 
                    tcp_socket = benny_kubernetes.models.io/k8s/api/core/v1/tcp_socket_action.io.k8s.api.core.v1.TCPSocketAction(
                        host = '', 
                        port = '', ), ),
                pre_stop = benny_kubernetes.models.io/k8s/api/core/v1/handler.io.k8s.api.core.v1.Handler(
                    exec = benny_kubernetes.models.io/k8s/api/core/v1/exec_action.io.k8s.api.core.v1.ExecAction(
                        command = [
                            ''
                            ], ), 
                    http_get = benny_kubernetes.models.io/k8s/api/core/v1/http_get_action.io.k8s.api.core.v1.HTTPGetAction(
                        host = '', 
                        http_headers = [
                            benny_kubernetes.models.io/k8s/api/core/v1/http_header.io.k8s.api.core.v1.HTTPHeader(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = '', 
                        scheme = '', ), 
                    tcp_socket = benny_kubernetes.models.io/k8s/api/core/v1/tcp_socket_action.io.k8s.api.core.v1.TCPSocketAction(
                        host = '', 
                        port = '', ), )
            )
        else:
            return IoK8sApiCoreV1Lifecycle(
        )
        """

    def testIoK8sApiCoreV1Lifecycle(self):
        """Test IoK8sApiCoreV1Lifecycle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
