# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_core_v1_persistent_volume_claim_spec import IoK8sApiCoreV1PersistentVolumeClaimSpec  # noqa: E501

class TestIoK8sApiCoreV1PersistentVolumeClaimSpec(unittest.TestCase):
    """IoK8sApiCoreV1PersistentVolumeClaimSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1PersistentVolumeClaimSpec:
        """Test IoK8sApiCoreV1PersistentVolumeClaimSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1PersistentVolumeClaimSpec`
        """
        model = IoK8sApiCoreV1PersistentVolumeClaimSpec()  # noqa: E501
        if include_optional:
            return IoK8sApiCoreV1PersistentVolumeClaimSpec(
                access_modes = [
                    ''
                    ],
                data_source = benny_kubernetes.models.io/k8s/api/core/v1/typed_local_object_reference.io.k8s.api.core.v1.TypedLocalObjectReference(
                    api_group = '', 
                    kind = '', 
                    name = '', ),
                resources = benny_kubernetes.models.io/k8s/api/core/v1/resource_requirements.io.k8s.api.core.v1.ResourceRequirements(
                    limits = {
                        'key' : ''
                        }, 
                    requests = {
                        'key' : ''
                        }, ),
                selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                    match_expressions = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                storage_class_name = '',
                volume_mode = '',
                volume_name = ''
            )
        else:
            return IoK8sApiCoreV1PersistentVolumeClaimSpec(
        )
        """

    def testIoK8sApiCoreV1PersistentVolumeClaimSpec(self):
        """Test IoK8sApiCoreV1PersistentVolumeClaimSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
