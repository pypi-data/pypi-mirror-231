# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_events_v1beta1_event_list import IoK8sApiEventsV1beta1EventList  # noqa: E501

class TestIoK8sApiEventsV1beta1EventList(unittest.TestCase):
    """IoK8sApiEventsV1beta1EventList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiEventsV1beta1EventList:
        """Test IoK8sApiEventsV1beta1EventList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiEventsV1beta1EventList`
        """
        model = IoK8sApiEventsV1beta1EventList()  # noqa: E501
        if include_optional:
            return IoK8sApiEventsV1beta1EventList(
                api_version = '',
                items = [
                    benny_kubernetes.models.io/k8s/api/events/v1beta1/event.io.k8s.api.events.v1beta1.Event(
                        action = '', 
                        api_version = '', 
                        deprecated_count = 56, 
                        deprecated_first_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_last_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_source = benny_kubernetes.models.io/k8s/api/core/v1/event_source.io.k8s.api.core.v1.EventSource(
                            component = '', 
                            host = '', ), 
                        event_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        kind = '', 
                        metadata = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/object_meta.io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta(
                            annotations = {
                                'key' : ''
                                }, 
                            cluster_name = '', 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                ''
                                ], 
                            generate_name = '', 
                            generation = 56, 
                            labels = {
                                'key' : ''
                                }, 
                            managed_fields = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/managed_fields_entry.io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry(
                                    api_version = '', 
                                    fields_type = '', 
                                    fields_v1 = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/fields_v1.io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1(), 
                                    manager = '', 
                                    operation = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '', 
                            namespace = '', 
                            owner_references = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/owner_reference.io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference(
                                    api_version = '', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '', 
                                    name = '', 
                                    uid = '', )
                                ], 
                            resource_version = '', 
                            self_link = '', 
                            uid = '', ), 
                        note = '', 
                        reason = '', 
                        regarding = benny_kubernetes.models.io/k8s/api/core/v1/object_reference.io.k8s.api.core.v1.ObjectReference(
                            api_version = '', 
                            field_path = '', 
                            kind = '', 
                            name = '', 
                            namespace = '', 
                            resource_version = '', 
                            uid = '', ), 
                        related = benny_kubernetes.models.io/k8s/api/core/v1/object_reference.io.k8s.api.core.v1.ObjectReference(
                            api_version = '', 
                            field_path = '', 
                            kind = '', 
                            name = '', 
                            namespace = '', 
                            resource_version = '', 
                            uid = '', ), 
                        reporting_controller = '', 
                        reporting_instance = '', 
                        series = benny_kubernetes.models.io/k8s/api/events/v1beta1/event_series.io.k8s.api.events.v1beta1.EventSeries(
                            count = 56, 
                            last_observed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            state = '', ), 
                        type = '', )
                    ],
                kind = '',
                metadata = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/list_meta.io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta(
                    continue = '', 
                    remaining_item_count = 56, 
                    resource_version = '', 
                    self_link = '', )
            )
        else:
            return IoK8sApiEventsV1beta1EventList(
                items = [
                    benny_kubernetes.models.io/k8s/api/events/v1beta1/event.io.k8s.api.events.v1beta1.Event(
                        action = '', 
                        api_version = '', 
                        deprecated_count = 56, 
                        deprecated_first_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_last_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_source = benny_kubernetes.models.io/k8s/api/core/v1/event_source.io.k8s.api.core.v1.EventSource(
                            component = '', 
                            host = '', ), 
                        event_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        kind = '', 
                        metadata = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/object_meta.io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta(
                            annotations = {
                                'key' : ''
                                }, 
                            cluster_name = '', 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                ''
                                ], 
                            generate_name = '', 
                            generation = 56, 
                            labels = {
                                'key' : ''
                                }, 
                            managed_fields = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/managed_fields_entry.io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry(
                                    api_version = '', 
                                    fields_type = '', 
                                    fields_v1 = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/fields_v1.io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1(), 
                                    manager = '', 
                                    operation = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '', 
                            namespace = '', 
                            owner_references = [
                                benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/owner_reference.io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference(
                                    api_version = '', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '', 
                                    name = '', 
                                    uid = '', )
                                ], 
                            resource_version = '', 
                            self_link = '', 
                            uid = '', ), 
                        note = '', 
                        reason = '', 
                        regarding = benny_kubernetes.models.io/k8s/api/core/v1/object_reference.io.k8s.api.core.v1.ObjectReference(
                            api_version = '', 
                            field_path = '', 
                            kind = '', 
                            name = '', 
                            namespace = '', 
                            resource_version = '', 
                            uid = '', ), 
                        related = benny_kubernetes.models.io/k8s/api/core/v1/object_reference.io.k8s.api.core.v1.ObjectReference(
                            api_version = '', 
                            field_path = '', 
                            kind = '', 
                            name = '', 
                            namespace = '', 
                            resource_version = '', 
                            uid = '', ), 
                        reporting_controller = '', 
                        reporting_instance = '', 
                        series = benny_kubernetes.models.io/k8s/api/events/v1beta1/event_series.io.k8s.api.events.v1beta1.EventSeries(
                            count = 56, 
                            last_observed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            state = '', ), 
                        type = '', )
                    ],
        )
        """

    def testIoK8sApiEventsV1beta1EventList(self):
        """Test IoK8sApiEventsV1beta1EventList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
