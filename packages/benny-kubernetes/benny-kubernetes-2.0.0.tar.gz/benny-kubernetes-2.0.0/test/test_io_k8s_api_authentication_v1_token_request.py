# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_authentication_v1_token_request import IoK8sApiAuthenticationV1TokenRequest  # noqa: E501

class TestIoK8sApiAuthenticationV1TokenRequest(unittest.TestCase):
    """IoK8sApiAuthenticationV1TokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAuthenticationV1TokenRequest:
        """Test IoK8sApiAuthenticationV1TokenRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAuthenticationV1TokenRequest`
        """
        model = IoK8sApiAuthenticationV1TokenRequest()  # noqa: E501
        if include_optional:
            return IoK8sApiAuthenticationV1TokenRequest(
                api_version = '',
                kind = '',
                metadata = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/object_meta.io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta(
                    annotations = {
                        'key' : ''
                        }, 
                    cluster_name = '', 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        ''
                        ], 
                    generate_name = '', 
                    generation = 56, 
                    labels = {
                        'key' : ''
                        }, 
                    managed_fields = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/managed_fields_entry.io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry(
                            api_version = '', 
                            fields_type = '', 
                            fields_v1 = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/fields_v1.io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1(), 
                            manager = '', 
                            operation = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    name = '', 
                    namespace = '', 
                    owner_references = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/owner_reference.io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference(
                            api_version = '', 
                            block_owner_deletion = True, 
                            controller = True, 
                            kind = '', 
                            name = '', 
                            uid = '', )
                        ], 
                    resource_version = '', 
                    self_link = '', 
                    uid = '', ),
                spec = benny_kubernetes.models.io/k8s/api/authentication/v1/token_request_spec.io.k8s.api.authentication.v1.TokenRequestSpec(
                    audiences = [
                        ''
                        ], 
                    bound_object_ref = benny_kubernetes.models.io/k8s/api/authentication/v1/bound_object_reference.io.k8s.api.authentication.v1.BoundObjectReference(
                        api_version = '', 
                        kind = '', 
                        name = '', 
                        uid = '', ), 
                    expiration_seconds = 56, ),
                status = benny_kubernetes.models.io/k8s/api/authentication/v1/token_request_status.io.k8s.api.authentication.v1.TokenRequestStatus(
                    expiration_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    token = '', )
            )
        else:
            return IoK8sApiAuthenticationV1TokenRequest(
                spec = benny_kubernetes.models.io/k8s/api/authentication/v1/token_request_spec.io.k8s.api.authentication.v1.TokenRequestSpec(
                    audiences = [
                        ''
                        ], 
                    bound_object_ref = benny_kubernetes.models.io/k8s/api/authentication/v1/bound_object_reference.io.k8s.api.authentication.v1.BoundObjectReference(
                        api_version = '', 
                        kind = '', 
                        name = '', 
                        uid = '', ), 
                    expiration_seconds = 56, ),
        )
        """

    def testIoK8sApiAuthenticationV1TokenRequest(self):
        """Test IoK8sApiAuthenticationV1TokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
