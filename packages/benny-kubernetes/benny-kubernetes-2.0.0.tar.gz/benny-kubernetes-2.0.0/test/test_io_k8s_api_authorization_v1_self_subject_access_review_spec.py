# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_authorization_v1_self_subject_access_review_spec import IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec  # noqa: E501

class TestIoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec(unittest.TestCase):
    """IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec:
        """Test IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec`
        """
        model = IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec()  # noqa: E501
        if include_optional:
            return IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec(
                non_resource_attributes = benny_kubernetes.models.io/k8s/api/authorization/v1/non_resource_attributes.io.k8s.api.authorization.v1.NonResourceAttributes(
                    path = '', 
                    verb = '', ),
                resource_attributes = benny_kubernetes.models.io/k8s/api/authorization/v1/resource_attributes.io.k8s.api.authorization.v1.ResourceAttributes(
                    group = '', 
                    name = '', 
                    namespace = '', 
                    resource = '', 
                    subresource = '', 
                    verb = '', 
                    version = '', )
            )
        else:
            return IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec(
        )
        """

    def testIoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec(self):
        """Test IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
