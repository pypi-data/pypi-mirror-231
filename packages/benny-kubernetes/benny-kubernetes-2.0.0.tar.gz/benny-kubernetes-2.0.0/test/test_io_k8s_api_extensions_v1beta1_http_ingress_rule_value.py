# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_extensions_v1beta1_http_ingress_rule_value import IoK8sApiExtensionsV1beta1HTTPIngressRuleValue  # noqa: E501

class TestIoK8sApiExtensionsV1beta1HTTPIngressRuleValue(unittest.TestCase):
    """IoK8sApiExtensionsV1beta1HTTPIngressRuleValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiExtensionsV1beta1HTTPIngressRuleValue:
        """Test IoK8sApiExtensionsV1beta1HTTPIngressRuleValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiExtensionsV1beta1HTTPIngressRuleValue`
        """
        model = IoK8sApiExtensionsV1beta1HTTPIngressRuleValue()  # noqa: E501
        if include_optional:
            return IoK8sApiExtensionsV1beta1HTTPIngressRuleValue(
                paths = [
                    benny_kubernetes.models.io/k8s/api/extensions/v1beta1/http_ingress_path.io.k8s.api.extensions.v1beta1.HTTPIngressPath(
                        backend = benny_kubernetes.models.io/k8s/api/extensions/v1beta1/ingress_backend.io.k8s.api.extensions.v1beta1.IngressBackend(
                            resource = benny_kubernetes.models.io/k8s/api/core/v1/typed_local_object_reference.io.k8s.api.core.v1.TypedLocalObjectReference(
                                api_group = '', 
                                kind = '', 
                                name = '', ), 
                            service_name = '', 
                            service_port = '', ), 
                        path = '', 
                        path_type = '', )
                    ]
            )
        else:
            return IoK8sApiExtensionsV1beta1HTTPIngressRuleValue(
                paths = [
                    benny_kubernetes.models.io/k8s/api/extensions/v1beta1/http_ingress_path.io.k8s.api.extensions.v1beta1.HTTPIngressPath(
                        backend = benny_kubernetes.models.io/k8s/api/extensions/v1beta1/ingress_backend.io.k8s.api.extensions.v1beta1.IngressBackend(
                            resource = benny_kubernetes.models.io/k8s/api/core/v1/typed_local_object_reference.io.k8s.api.core.v1.TypedLocalObjectReference(
                                api_group = '', 
                                kind = '', 
                                name = '', ), 
                            service_name = '', 
                            service_port = '', ), 
                        path = '', 
                        path_type = '', )
                    ],
        )
        """

    def testIoK8sApiExtensionsV1beta1HTTPIngressRuleValue(self):
        """Test IoK8sApiExtensionsV1beta1HTTPIngressRuleValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
