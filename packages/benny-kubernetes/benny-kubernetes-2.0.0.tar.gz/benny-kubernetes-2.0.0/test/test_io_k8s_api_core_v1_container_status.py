# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_core_v1_container_status import IoK8sApiCoreV1ContainerStatus  # noqa: E501

class TestIoK8sApiCoreV1ContainerStatus(unittest.TestCase):
    """IoK8sApiCoreV1ContainerStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1ContainerStatus:
        """Test IoK8sApiCoreV1ContainerStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1ContainerStatus`
        """
        model = IoK8sApiCoreV1ContainerStatus()  # noqa: E501
        if include_optional:
            return IoK8sApiCoreV1ContainerStatus(
                container_id = '',
                image = '',
                image_id = '',
                last_state = benny_kubernetes.models.io/k8s/api/core/v1/container_state.io.k8s.api.core.v1.ContainerState(
                    running = benny_kubernetes.models.io/k8s/api/core/v1/container_state_running.io.k8s.api.core.v1.ContainerStateRunning(
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    terminated = benny_kubernetes.models.io/k8s/api/core/v1/container_state_terminated.io.k8s.api.core.v1.ContainerStateTerminated(
                        container_id = '', 
                        exit_code = 56, 
                        finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        message = '', 
                        reason = '', 
                        signal = 56, 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    waiting = benny_kubernetes.models.io/k8s/api/core/v1/container_state_waiting.io.k8s.api.core.v1.ContainerStateWaiting(
                        message = '', 
                        reason = '', ), ),
                name = '',
                ready = True,
                restart_count = 56,
                started = True,
                state = benny_kubernetes.models.io/k8s/api/core/v1/container_state.io.k8s.api.core.v1.ContainerState(
                    running = benny_kubernetes.models.io/k8s/api/core/v1/container_state_running.io.k8s.api.core.v1.ContainerStateRunning(
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    terminated = benny_kubernetes.models.io/k8s/api/core/v1/container_state_terminated.io.k8s.api.core.v1.ContainerStateTerminated(
                        container_id = '', 
                        exit_code = 56, 
                        finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        message = '', 
                        reason = '', 
                        signal = 56, 
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    waiting = benny_kubernetes.models.io/k8s/api/core/v1/container_state_waiting.io.k8s.api.core.v1.ContainerStateWaiting(
                        message = '', 
                        reason = '', ), )
            )
        else:
            return IoK8sApiCoreV1ContainerStatus(
                image = '',
                image_id = '',
                name = '',
                ready = True,
                restart_count = 56,
        )
        """

    def testIoK8sApiCoreV1ContainerStatus(self):
        """Test IoK8sApiCoreV1ContainerStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
