# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_authorization_v1beta1_subject_rules_review_status import IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus  # noqa: E501

class TestIoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus(unittest.TestCase):
    """IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus:
        """Test IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus`
        """
        model = IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus()  # noqa: E501
        if include_optional:
            return IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus(
                evaluation_error = '',
                incomplete = True,
                non_resource_rules = [
                    benny_kubernetes.models.io/k8s/api/authorization/v1beta1/non_resource_rule.io.k8s.api.authorization.v1beta1.NonResourceRule(
                        non_resource_urls = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ],
                resource_rules = [
                    benny_kubernetes.models.io/k8s/api/authorization/v1beta1/resource_rule.io.k8s.api.authorization.v1beta1.ResourceRule(
                        api_groups = [
                            ''
                            ], 
                        resource_names = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ]
            )
        else:
            return IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus(
                incomplete = True,
                non_resource_rules = [
                    benny_kubernetes.models.io/k8s/api/authorization/v1beta1/non_resource_rule.io.k8s.api.authorization.v1beta1.NonResourceRule(
                        non_resource_urls = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ],
                resource_rules = [
                    benny_kubernetes.models.io/k8s/api/authorization/v1beta1/resource_rule.io.k8s.api.authorization.v1beta1.ResourceRule(
                        api_groups = [
                            ''
                            ], 
                        resource_names = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        verbs = [
                            ''
                            ], )
                    ],
        )
        """

    def testIoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus(self):
        """Test IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
