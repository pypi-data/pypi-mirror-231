# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_admissionregistration_v1beta1_mutating_webhook import IoK8sApiAdmissionregistrationV1beta1MutatingWebhook  # noqa: E501

class TestIoK8sApiAdmissionregistrationV1beta1MutatingWebhook(unittest.TestCase):
    """IoK8sApiAdmissionregistrationV1beta1MutatingWebhook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiAdmissionregistrationV1beta1MutatingWebhook:
        """Test IoK8sApiAdmissionregistrationV1beta1MutatingWebhook
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiAdmissionregistrationV1beta1MutatingWebhook`
        """
        model = IoK8sApiAdmissionregistrationV1beta1MutatingWebhook()  # noqa: E501
        if include_optional:
            return IoK8sApiAdmissionregistrationV1beta1MutatingWebhook(
                admission_review_versions = [
                    ''
                    ],
                client_config = benny_kubernetes.models.io/k8s/api/admissionregistration/v1beta1/webhook_client_config.io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig(
                    ca_bundle = 'YQ==', 
                    service = benny_kubernetes.models.io/k8s/api/admissionregistration/v1beta1/service_reference.io.k8s.api.admissionregistration.v1beta1.ServiceReference(
                        name = '', 
                        namespace = '', 
                        path = '', 
                        port = 56, ), 
                    url = '', ),
                failure_policy = '',
                match_policy = '',
                name = '',
                namespace_selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                    match_expressions = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                object_selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                    match_expressions = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                reinvocation_policy = '',
                rules = [
                    benny_kubernetes.models.io/k8s/api/admissionregistration/v1beta1/rule_with_operations.io.k8s.api.admissionregistration.v1beta1.RuleWithOperations(
                        api_groups = [
                            ''
                            ], 
                        api_versions = [
                            ''
                            ], 
                        operations = [
                            ''
                            ], 
                        resources = [
                            ''
                            ], 
                        scope = '', )
                    ],
                side_effects = '',
                timeout_seconds = 56
            )
        else:
            return IoK8sApiAdmissionregistrationV1beta1MutatingWebhook(
                client_config = benny_kubernetes.models.io/k8s/api/admissionregistration/v1beta1/webhook_client_config.io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig(
                    ca_bundle = 'YQ==', 
                    service = benny_kubernetes.models.io/k8s/api/admissionregistration/v1beta1/service_reference.io.k8s.api.admissionregistration.v1beta1.ServiceReference(
                        name = '', 
                        namespace = '', 
                        path = '', 
                        port = 56, ), 
                    url = '', ),
                name = '',
        )
        """

    def testIoK8sApiAdmissionregistrationV1beta1MutatingWebhook(self):
        """Test IoK8sApiAdmissionregistrationV1beta1MutatingWebhook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
