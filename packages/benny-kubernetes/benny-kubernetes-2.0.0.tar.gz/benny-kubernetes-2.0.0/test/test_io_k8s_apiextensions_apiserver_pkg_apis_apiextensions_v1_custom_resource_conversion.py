# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_custom_resource_conversion import IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion  # noqa: E501

class TestIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion(unittest.TestCase):
    """IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion:
        """Test IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion`
        """
        model = IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion()  # noqa: E501
        if include_optional:
            return IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion(
                strategy = '',
                webhook = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1/webhook_conversion.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion(
                    client_config = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1/webhook_client_config.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig(
                        ca_bundle = 'YQ==', 
                        service = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1/service_reference.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference(
                            name = '', 
                            namespace = '', 
                            path = '', 
                            port = 56, ), 
                        url = '', ), 
                    conversion_review_versions = [
                        ''
                        ], )
            )
        else:
            return IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion(
                strategy = '',
        )
        """

    def testIoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion(self):
        """Test IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
