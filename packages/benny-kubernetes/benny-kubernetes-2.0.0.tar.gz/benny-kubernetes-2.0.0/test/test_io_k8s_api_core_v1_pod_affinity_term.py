# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_core_v1_pod_affinity_term import IoK8sApiCoreV1PodAffinityTerm  # noqa: E501

class TestIoK8sApiCoreV1PodAffinityTerm(unittest.TestCase):
    """IoK8sApiCoreV1PodAffinityTerm unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1PodAffinityTerm:
        """Test IoK8sApiCoreV1PodAffinityTerm
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1PodAffinityTerm`
        """
        model = IoK8sApiCoreV1PodAffinityTerm()  # noqa: E501
        if include_optional:
            return IoK8sApiCoreV1PodAffinityTerm(
                label_selector = benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector(
                    match_expressions = [
                        benny_kubernetes.models.io/k8s/apimachinery/pkg/apis/meta/v1/label_selector_requirement.io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement(
                            key = '', 
                            operator = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    match_labels = {
                        'key' : ''
                        }, ),
                namespaces = [
                    ''
                    ],
                topology_key = ''
            )
        else:
            return IoK8sApiCoreV1PodAffinityTerm(
                topology_key = '',
        )
        """

    def testIoK8sApiCoreV1PodAffinityTerm(self):
        """Test IoK8sApiCoreV1PodAffinityTerm"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
