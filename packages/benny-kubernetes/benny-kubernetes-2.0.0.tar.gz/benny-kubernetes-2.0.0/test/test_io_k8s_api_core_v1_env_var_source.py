# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_api_core_v1_env_var_source import IoK8sApiCoreV1EnvVarSource  # noqa: E501

class TestIoK8sApiCoreV1EnvVarSource(unittest.TestCase):
    """IoK8sApiCoreV1EnvVarSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1EnvVarSource:
        """Test IoK8sApiCoreV1EnvVarSource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1EnvVarSource`
        """
        model = IoK8sApiCoreV1EnvVarSource()  # noqa: E501
        if include_optional:
            return IoK8sApiCoreV1EnvVarSource(
                config_map_key_ref = benny_kubernetes.models.io/k8s/api/core/v1/config_map_key_selector.io.k8s.api.core.v1.ConfigMapKeySelector(
                    key = '', 
                    name = '', 
                    optional = True, ),
                field_ref = benny_kubernetes.models.io/k8s/api/core/v1/object_field_selector.io.k8s.api.core.v1.ObjectFieldSelector(
                    api_version = '', 
                    field_path = '', ),
                resource_field_ref = benny_kubernetes.models.io/k8s/api/core/v1/resource_field_selector.io.k8s.api.core.v1.ResourceFieldSelector(
                    container_name = '', 
                    divisor = '', 
                    resource = '', ),
                secret_key_ref = benny_kubernetes.models.io/k8s/api/core/v1/secret_key_selector.io.k8s.api.core.v1.SecretKeySelector(
                    key = '', 
                    name = '', 
                    optional = True, )
            )
        else:
            return IoK8sApiCoreV1EnvVarSource(
        )
        """

    def testIoK8sApiCoreV1EnvVarSource(self):
        """Test IoK8sApiCoreV1EnvVarSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
