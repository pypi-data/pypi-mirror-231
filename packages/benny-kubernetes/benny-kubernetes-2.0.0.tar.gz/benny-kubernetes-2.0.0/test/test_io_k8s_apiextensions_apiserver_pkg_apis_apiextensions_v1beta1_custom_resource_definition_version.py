# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: unversioned
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from benny_kubernetes.models.io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_custom_resource_definition_version import IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion  # noqa: E501

class TestIoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion(unittest.TestCase):
    """IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion:
        """Test IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion`
        """
        model = IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion()  # noqa: E501
        if include_optional:
            return IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion(
                additional_printer_columns = [
                    benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/custom_resource_column_definition.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition(
                        json_path = '', 
                        description = '', 
                        format = '', 
                        name = '', 
                        priority = 56, 
                        type = '', )
                    ],
                name = '',
                var_schema = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/custom_resource_validation.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation(
                    open_apiv3_schema = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps(
                        __ref = '', 
                        __schema = '', 
                        additional_items = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_bool.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool(), 
                        additional_properties = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_bool.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool(), 
                        all_of = [
                            benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps(
                                __ref = '', 
                                __schema = '', 
                                any_of = [
                                    
                                    ], 
                                default = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON(), 
                                definitions = {
                                    'key' : 
                                    }, 
                                dependencies = {
                                    'key' : benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_string_array.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray()
                                    }, 
                                description = '', 
                                enum = [
                                    benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON()
                                    ], 
                                example = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON(), 
                                exclusive_maximum = True, 
                                exclusive_minimum = True, 
                                external_docs = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/external_documentation.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation(
                                    description = '', 
                                    url = '', ), 
                                format = '', 
                                id = '', 
                                items = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_array.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray(), 
                                max_items = 56, 
                                max_length = 56, 
                                max_properties = 56, 
                                maximum = 1.337, 
                                min_items = 56, 
                                min_length = 56, 
                                min_properties = 56, 
                                minimum = 1.337, 
                                multiple_of = 1.337, 
                                not = , 
                                nullable = True, 
                                one_of = [
                                    
                                    ], 
                                pattern = '', 
                                pattern_properties = {
                                    'key' : 
                                    }, 
                                properties = {
                                    'key' : 
                                    }, 
                                required = [
                                    ''
                                    ], 
                                title = '', 
                                type = '', 
                                unique_items = True, 
                                x_kubernetes_embedded_resource = True, 
                                x_kubernetes_int_or_string = True, 
                                x_kubernetes_list_map_keys = [
                                    ''
                                    ], 
                                x_kubernetes_list_type = '', 
                                x_kubernetes_map_type = '', 
                                x_kubernetes_preserve_unknown_fields = True, )
                            ], 
                        any_of = [
                            
                            ], 
                        default = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON(), 
                        definitions = {
                            'key' : 
                            }, 
                        dependencies = {
                            'key' : benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_string_array.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray()
                            }, 
                        description = '', 
                        enum = [
                            benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON()
                            ], 
                        example = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON(), 
                        exclusive_maximum = True, 
                        exclusive_minimum = True, 
                        external_docs = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/external_documentation.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation(
                            description = '', 
                            url = '', ), 
                        format = '', 
                        id = '', 
                        items = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/json_schema_props_or_array.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray(), 
                        max_items = 56, 
                        max_length = 56, 
                        max_properties = 56, 
                        maximum = 1.337, 
                        min_items = 56, 
                        min_length = 56, 
                        min_properties = 56, 
                        minimum = 1.337, 
                        multiple_of = 1.337, 
                        not = , 
                        nullable = True, 
                        one_of = [
                            
                            ], 
                        pattern = '', 
                        pattern_properties = {
                            'key' : 
                            }, 
                        properties = {
                            'key' : 
                            }, 
                        required = [
                            ''
                            ], 
                        title = '', 
                        type = '', 
                        unique_items = True, 
                        x_kubernetes_embedded_resource = True, 
                        x_kubernetes_int_or_string = True, 
                        x_kubernetes_list_map_keys = [
                            ''
                            ], 
                        x_kubernetes_list_type = '', 
                        x_kubernetes_map_type = '', 
                        x_kubernetes_preserve_unknown_fields = True, ), ),
                served = True,
                storage = True,
                subresources = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/custom_resource_subresources.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources(
                    scale = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/custom_resource_subresource_scale.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale(
                        label_selector_path = '', 
                        spec_replicas_path = '', 
                        status_replicas_path = '', ), 
                    status = benny_kubernetes.models.io/k8s/apiextensions_apiserver/pkg/apis/apiextensions/v1beta1/custom_resource_subresource_status.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceStatus(), )
            )
        else:
            return IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion(
                name = '',
                served = True,
                storage = True,
        )
        """

    def testIoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion(self):
        """Test IoK8sApiextensionsApiserverPkgApisApiextensionsV1beta1CustomResourceDefinitionVersion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
