"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, TypeVar

if False:
    ...
logger = ...
def display_chunk(chunk: Any) -> str:
    ...

T = TypeVar('T')
def status_iterator(iterable: Iterable[T], summary: str, color: str = ..., length: int = ..., verbosity: int = ..., stringify_func: Callable[[Any], str] = ...) -> Iterator[T]:
    ...

class SkipProgressMessage(Exception):
    ...


class progress_message:
    def __init__(self, message: str) -> None:
        ...
    
    def __enter__(self) -> None:
        ...
    
    def __exit__(self, typ: type[BaseException] | None, val: BaseException | None, tb: TracebackType | None) -> bool:
        ...
    
    def __call__(self, f: Callable) -> Callable:
        ...
    


