from dataclasses import dataclass, field
from typing import List

@dataclass
class Channel:
    """Base Channel class. Have maximum options."""

    author: str=""
    authorId: str=""
    authorUrl: str=""
    authorBanners: List[dict]=field(
        default_factory=lambda: list()
    )
    authorThumbnails: List[dict]=field(
        default_factory=lambda: list()
    )

    subCount: int=0
    totalViews: int=0
    joined: int=0

    description: str=""
    descriptionHtml: str=""

    latestVideos: List[dict]=field(
        default_factory=lambda: list()
    )
    relatedChannels: List[dict]=field(
        default_factory=lambda: list()
    )
 
    autoGenerated: bool=False
    isFamilyFriendly: bool=False
    allowedRegions: List[str]=field(
        default_factory=lambda: list()
    )

    def from_json(self, data) -> None:
        """Loads class info from dictionary"""
        for key in data:
            setattr(self, key, data[key])

    def convert(self, cls):
        self.__class__ = cls



