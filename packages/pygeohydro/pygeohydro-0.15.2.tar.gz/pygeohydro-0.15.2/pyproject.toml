[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42",
  "setuptools-scm>=7",
]

[project]
name = "pygeohydro"
description = "Access geospatial web services that offer hydrological data"
readme = "README.rst"
license = {text = "MIT"}
authors = [{name = "Taher Chegini", email = "cheginit@gmail.com"}]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Hydrology",
  "Typing :: Typed",
]
dynamic = [
  "version",
]
dependencies = [
  "async-retriever<0.16,>=0.15.2",
  "cytoolz",
  "defusedxml",
  "folium",
  "geopandas>=0.10",
  "h5netcdf",
  "hydrosignatures<0.16,>=0.15.2",
  "matplotlib>=3.5",
  "numpy>=1.21",
  "pandas>=1",
  "pygeoogc<0.16,>=0.15.2",
  "pygeoutils<0.16,>=0.15.2",
  "pynhd<0.16,>=0.15.2",
  "pyproj>=3.0.1",
  "rioxarray>=0.11",
  "scipy",
  "shapely>=1.8.5",
  "ujson",
  "xarray>=2023.01",
]
[project.optional-dependencies]
stac = [
  "planetary-computer",
  "pystac-client",
]
test = [
  "coverage[toml]",
  "pytest-cov",
  "pytest-xdist[psutil]",
]
[project.urls]
CI = "https://github.com/hyriver/pygeohydro/actions"
Changelog = "https://docs.hyriver.io/changelogs/pygeohydro.html"
Homepage = "https://docs.hyriver.io/readme/pygeohydro.html"
Issues = "https://github.com/hyriver/pygeohydro/issues"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]
platforms = ["any"]
zip-safe = false

[tool.setuptools.package-data]
pygeohydro = ["py.typed"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools_scm]
fallback_version = "999"

[tool.black]
line-length = 100

[tool.ruff]
target-version = 'py38'
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "ISC", # flake8-implicit-str-concat
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]

exclude = [
    "__pycache__",
    ".nox",
]

ignore = [
    "D103",
    "D105",
    "E501",
]
line-length = 100

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "chr",
    "typer.Argument",
    "typer.Option",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "S101",  # use of "assert"
    "S102",  # use of "exec"
    "S106",  # possible hardcoded password.
    "PGH001",  # use of "eval"
]

[tool.ruff.isort]
known-first-party = [
  "async_retriever",
  "pygeoogc",
  "pygeoutils",
  "pynhd",
  "py3dep",
  "hydrosignatures",
  "pygeohydro",
  "pydaymet",
  "pynldas2",
]

[tool.pytest.ini_options]
addopts = "--ignore=noxfile.py -n=auto -v --cov=pygeohydro --cov-report xml --durations=5"
doctest_optionflags = 'NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL NUMBER'
filterwarnings = [
  "ignore:.*distutils.*",
  "ignore:.*--rsyncdir command line argument.*",
  "ignore:.*numpy.ndarray size changed.*",
  "ignore:.*invalid value encountered in cast.*",
  "ignore:.*'cgi' is deprecated.*",
]
testpaths = [
  "tests",
  "pygeohydro"
]

[tool.coverage.report]
exclude_lines = [
  'raise ServiceUnavailableError',
  "if TYPE_CHECKING:"
]
ignore_errors = true

[tool.coverage.run]
branch = true
omit = [
  "**/__init__.py",
  "**/print_versions.py"
]
parallel = true
source = ['pygeohydro']

[tool.fixit]
formatter = "ufmt"

[tool.codespell]
skip = "__pycache__,_build,.mypy_cache,.git,./htmlcov,.nox,**/us_abbrs.py,cache"
ignore-words-list = "gage"

[tool.pycln]
all = true
expand_stars = true
no_gitignore = false
verbose = true

[tool.pyright]
exclude = [
  ".nox/",
  "**/__pycache__",
  "**/__init__.py",
  "tests/"
]
include = ["pygeohydro"]
reportMissingTypeStubs = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryIsInstance = false
reportUntypedFunctionDecorator = false
typeCheckingMode = "strict"

[tool.refurb]
python_version = "3.8"
quiet = true
