Metadata-Version: 2.1
Name: aiointeractions
Version: 2.0.0
Summary: An async Discord HTTP Interactions wrapper for discord.py.
Author: The Master
License: MIT
Project-URL: Homepage, http://github.com/TheMaster3558/aiointeractions
Project-URL: Documentation, http://aiointeractions.readthedocs.io/
Keywords: discord
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: discord.py>=2.0.0
Requires-Dist: PyNaCl>=1.3.0
Provides-Extra: docs
Requires-Dist: shibuya; extra == "docs"
Requires-Dist: sphinx-copybutton; extra == "docs"
Requires-Dist: sphinx-tabs; extra == "docs"
Provides-Extra: tests
Requires-Dist: pytest; extra == "tests"
Requires-Dist: pytest-asyncio; extra == "tests"
Requires-Dist: pytest-aiohttp; extra == "tests"

aiointeractions
===============

An async Discord HTTP Interactions wrapper for `discord.py` built with `aiohttp`.


.. image:: /docs/_static/logo.png
  :alt: The aiointeractions logo


Documentation
-------------
https://aiointeractions.readthedocs.io/


Installing
----------
`aiointeractions` requires Python 3.8 or newer.

.. code::

    pip install aiointeractions


Example
-------

.. code:: py

    import asyncio
    import discord
    import aiointeractions

    intents = discord.Intents.none()
    # intents are not required because there is no gateway connection

    client = discord.Client(intents=intents)
    tree = discord.app_commands.CommandTree(client)
    app = aiointeractions.InteractionsApp(client)

    discord.utils.setup_logging(root=True)

    @tree.command()
    async def ping(interaction: discord.Interaction) -> None:
        await interaction.response.send_message('Pong!')

    app.run('bot token')


Fork Support
------------
While some forks may be compatible, discord.py forks will not be supported.
