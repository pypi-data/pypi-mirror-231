class PySimpleINIBaseError(RuntimeError): ...
class KeyNotFoundError(PySimpleINIBaseError): ...
class SectionNotFoundError(PySimpleINIBaseError): ...
class WrongFormatError(PySimpleINIBaseError): ...
class KeyBase(metaclass=ABCMeta):
    def __init__(self, line: int) -> None: ...
    def getvalue(self) -> str: ...
    def format(self) -> str: ...
class KeyBlanck(KeyBase):
    def getvalue(self) -> str: ...
class KeyComment(KeyValue):
    def __init__(self, delimiter: str, value: str, line: int): ...
    def getdelimiter(self) -> str: ...
    def format(self) -> str: ...
class Key(KeyValue):
    def __init__(self, name: str, value: str, line: int): ...
    def getname(self) -> str: ...
    def setvalue(self, value: str) -> None: ...
    def format(self, bBeautify: bool = False) -> str: ...
class SectionBase(metaclass=ABCMeta):
    def __init__(self, line: int) -> None: ...
    def keys(self): ...
    def format(self) -> str: ...
    def formatall(self, bBeautify: bool = False, bWipeComments: bool = False) -> str: ...
class SectionBlanck(SectionBase):
    def append_blanckkey(self, line: int) -> KeyBlanck: ...
    def format(self) -> str: ...
class SectionComment(SectionBase):
    def format(self) -> str: ...
    def append_commentkey(self, delimiter: str, value: str, line: int) -> KeyComment: ...
class Section(SectionComment, SectionBlanck):
    def __init__(self, name: str, line: int) -> None: ...
    def getname(self) -> str: ...
    def formatall(self, bBeautify: bool = False, bWipeComments: bool = False) -> str: ...
    def format(self) -> str: ...
    def append_key(self, name: str, value: str, line: int) -> Key: ...
    def getallkeynames(self) -> list[str]: ...
    def delkey(self, name: str, index: Optional[int] = None, value: Optional[str] = None) -> int: ...
    def getkey_ex(
        self, name: str, index: Optional[int] = None, value: Optional[str] = None, bForceAlwaysOutputArrays: Optional[bool] = False
    ) -> Key | List[Key]: ...
    def getkey(self, name: str) -> Key | List[Key]: ...
    def getkeyvalue_ex(self, name: str, index: Optional[int] = None, value: Optional[str] = None) -> str | list[str]: ...
    def getkeyvalue(self, name: str) -> str | list[str]: ...
    def setaddkeyvalue(self, name: str, value: str, bForceAddKey: Optional[bool] = False) -> None: ...
class SectionRoot(Section):
    def __init__(self) -> None: ...