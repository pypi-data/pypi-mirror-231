Metadata-Version: 2.1
Name: pycrafter
Version: 0.0.7
Summary: Text extraction from images using ONNX runtime and CRAFT net
Project-URL: Homepage, https://github.com/innodatalabs/crafter
Project-URL: Source, https://github.com/innodatalabs/crafter
Author-email: Mike Kroutikov <mkroutikov@innodata.com>
License-Expression: MIT
License-File: LICENSE
Keywords: CRAFT,OCR,neural net,onnx,text detection
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Requires-Dist: onnxruntime~=1.15.0
Requires-Dist: opencv-python-headless~=4.8.0.76
Description-Content-Type: text/markdown

# Crafter
CRAFT text detection with ONNX Runtime

Based on the [craft-text-detector](https://github.com/innodatalabs/craft-text-detector). See also the source of the fork [here](https://github.com/fcakyon/craft-text-detector).

## Installation
```bash
$ pip install crafter
```

## Usage
```python
from crafter import Crafter

crafter = Crafter()

prediction = crafter('crafter/test/resources/idcard2.jpg')
for p1, p2, p3, p4 in prediction['boxes']:
    print(p1, p2, p3, p4)
```

## Developing
```bash
$ pip install .
$ pip install onnx git@github.com:innodatalabs/craft-text-detector.git pytest
```

To download Pytorch weights and convert to ONNX, run this (once):
```bash
$ python convert/craftnet.py
$ python convert/refinenet.py
```
This will (re-)create the ONNX files in `crafter/resources`.

## Testing
```bash
$ PYTHONPATH+. pytest
```

## Building
```bash
$ make
```