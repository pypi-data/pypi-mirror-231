# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetStaticRouteVrfResult',
    'AwaitableGetStaticRouteVrfResult',
    'get_static_route_vrf',
    'get_static_route_vrf_output',
]

@pulumi.output_type
class GetStaticRouteVrfResult:
    """
    A collection of values returned by getStaticRouteVrf.
    """
    def __init__(__self__, device=None, id=None, routes=None, vrf=None):
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if routes and not isinstance(routes, list):
            raise TypeError("Expected argument 'routes' to be a list")
        pulumi.set(__self__, "routes", routes)
        if vrf and not isinstance(vrf, str):
            raise TypeError("Expected argument 'vrf' to be a str")
        pulumi.set(__self__, "vrf", vrf)

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The path of the retrieved object.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def routes(self) -> Sequence['outputs.GetStaticRouteVrfRouteResult']:
        return pulumi.get(self, "routes")

    @property
    @pulumi.getter
    def vrf(self) -> str:
        return pulumi.get(self, "vrf")


class AwaitableGetStaticRouteVrfResult(GetStaticRouteVrfResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetStaticRouteVrfResult(
            device=self.device,
            id=self.id,
            routes=self.routes,
            vrf=self.vrf)


def get_static_route_vrf(device: Optional[str] = None,
                         vrf: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetStaticRouteVrfResult:
    """
    This data source can read the Static Route VRF configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_iosxe as iosxe

    example = iosxe.iosxe.get_static_route_vrf(vrf="VRF1")
    ```


    :param str device: A device name from the provider configuration.
    """
    __args__ = dict()
    __args__['device'] = device
    __args__['vrf'] = vrf
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('iosxe:iosxe/getStaticRouteVrf:getStaticRouteVrf', __args__, opts=opts, typ=GetStaticRouteVrfResult).value

    return AwaitableGetStaticRouteVrfResult(
        device=pulumi.get(__ret__, 'device'),
        id=pulumi.get(__ret__, 'id'),
        routes=pulumi.get(__ret__, 'routes'),
        vrf=pulumi.get(__ret__, 'vrf'))


@_utilities.lift_output_func(get_static_route_vrf)
def get_static_route_vrf_output(device: Optional[pulumi.Input[Optional[str]]] = None,
                                vrf: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetStaticRouteVrfResult]:
    """
    This data source can read the Static Route VRF configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_iosxe as iosxe

    example = iosxe.iosxe.get_static_route_vrf(vrf="VRF1")
    ```


    :param str device: A device name from the provider configuration.
    """
    ...
