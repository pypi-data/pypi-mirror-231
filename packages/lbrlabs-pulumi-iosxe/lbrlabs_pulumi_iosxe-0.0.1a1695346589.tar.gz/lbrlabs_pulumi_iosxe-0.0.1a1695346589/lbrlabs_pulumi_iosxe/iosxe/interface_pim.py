# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['InterfacePimArgs', 'InterfacePim']

@pulumi.input_type
class InterfacePimArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 bfd: Optional[pulumi.Input[bool]] = None,
                 border: Optional[pulumi.Input[bool]] = None,
                 bsr_border: Optional[pulumi.Input[bool]] = None,
                 dense_mode: Optional[pulumi.Input[bool]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dr_priority: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[bool]] = None,
                 sparse_dense_mode: Optional[pulumi.Input[bool]] = None,
                 sparse_mode: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a InterfacePim resource.
        :param pulumi.Input[str] type: Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
               `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
               `Port-channel`
        :param pulumi.Input[bool] bfd: Configure BFD
        :param pulumi.Input[bool] border: Border of PIM domain
        :param pulumi.Input[bool] bsr_border: Border of PIM domain
        :param pulumi.Input[bool] dense_mode: Enable PIM dense-mode operation
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] dr_priority: PIM router DR priority - Range: `0`-`4294967295`
        :param pulumi.Input[bool] passive: Enable PIM passive interface operation
        :param pulumi.Input[bool] sparse_dense_mode: Enable PIM sparse-dense-mode operation
        :param pulumi.Input[bool] sparse_mode: Enable PIM sparse-mode operation
        """
        pulumi.set(__self__, "type", type)
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if border is not None:
            pulumi.set(__self__, "border", border)
        if bsr_border is not None:
            pulumi.set(__self__, "bsr_border", bsr_border)
        if dense_mode is not None:
            pulumi.set(__self__, "dense_mode", dense_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if dr_priority is not None:
            pulumi.set(__self__, "dr_priority", dr_priority)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if passive is not None:
            pulumi.set(__self__, "passive", passive)
        if sparse_dense_mode is not None:
            pulumi.set(__self__, "sparse_dense_mode", sparse_dense_mode)
        if sparse_mode is not None:
            pulumi.set(__self__, "sparse_mode", sparse_mode)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        `Port-channel`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure BFD
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def border(self) -> Optional[pulumi.Input[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "border")

    @border.setter
    def border(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "border", value)

    @property
    @pulumi.getter(name="bsrBorder")
    def bsr_border(self) -> Optional[pulumi.Input[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "bsr_border")

    @bsr_border.setter
    def bsr_border(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bsr_border", value)

    @property
    @pulumi.getter(name="denseMode")
    def dense_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM dense-mode operation
        """
        return pulumi.get(self, "dense_mode")

    @dense_mode.setter
    def dense_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "dense_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="drPriority")
    def dr_priority(self) -> Optional[pulumi.Input[int]]:
        """
        PIM router DR priority - Range: `0`-`4294967295`
        """
        return pulumi.get(self, "dr_priority")

    @dr_priority.setter
    def dr_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dr_priority", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def passive(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM passive interface operation
        """
        return pulumi.get(self, "passive")

    @passive.setter
    def passive(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "passive", value)

    @property
    @pulumi.getter(name="sparseDenseMode")
    def sparse_dense_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM sparse-dense-mode operation
        """
        return pulumi.get(self, "sparse_dense_mode")

    @sparse_dense_mode.setter
    def sparse_dense_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sparse_dense_mode", value)

    @property
    @pulumi.getter(name="sparseMode")
    def sparse_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM sparse-mode operation
        """
        return pulumi.get(self, "sparse_mode")

    @sparse_mode.setter
    def sparse_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sparse_mode", value)


@pulumi.input_type
class _InterfacePimState:
    def __init__(__self__, *,
                 bfd: Optional[pulumi.Input[bool]] = None,
                 border: Optional[pulumi.Input[bool]] = None,
                 bsr_border: Optional[pulumi.Input[bool]] = None,
                 dense_mode: Optional[pulumi.Input[bool]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dr_priority: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[bool]] = None,
                 sparse_dense_mode: Optional[pulumi.Input[bool]] = None,
                 sparse_mode: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering InterfacePim resources.
        :param pulumi.Input[bool] bfd: Configure BFD
        :param pulumi.Input[bool] border: Border of PIM domain
        :param pulumi.Input[bool] bsr_border: Border of PIM domain
        :param pulumi.Input[bool] dense_mode: Enable PIM dense-mode operation
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] dr_priority: PIM router DR priority - Range: `0`-`4294967295`
        :param pulumi.Input[bool] passive: Enable PIM passive interface operation
        :param pulumi.Input[bool] sparse_dense_mode: Enable PIM sparse-dense-mode operation
        :param pulumi.Input[bool] sparse_mode: Enable PIM sparse-mode operation
        :param pulumi.Input[str] type: Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
               `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
               `Port-channel`
        """
        if bfd is not None:
            pulumi.set(__self__, "bfd", bfd)
        if border is not None:
            pulumi.set(__self__, "border", border)
        if bsr_border is not None:
            pulumi.set(__self__, "bsr_border", bsr_border)
        if dense_mode is not None:
            pulumi.set(__self__, "dense_mode", dense_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if dr_priority is not None:
            pulumi.set(__self__, "dr_priority", dr_priority)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if passive is not None:
            pulumi.set(__self__, "passive", passive)
        if sparse_dense_mode is not None:
            pulumi.set(__self__, "sparse_dense_mode", sparse_dense_mode)
        if sparse_mode is not None:
            pulumi.set(__self__, "sparse_mode", sparse_mode)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def bfd(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure BFD
        """
        return pulumi.get(self, "bfd")

    @bfd.setter
    def bfd(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bfd", value)

    @property
    @pulumi.getter
    def border(self) -> Optional[pulumi.Input[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "border")

    @border.setter
    def border(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "border", value)

    @property
    @pulumi.getter(name="bsrBorder")
    def bsr_border(self) -> Optional[pulumi.Input[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "bsr_border")

    @bsr_border.setter
    def bsr_border(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bsr_border", value)

    @property
    @pulumi.getter(name="denseMode")
    def dense_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM dense-mode operation
        """
        return pulumi.get(self, "dense_mode")

    @dense_mode.setter
    def dense_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "dense_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="drPriority")
    def dr_priority(self) -> Optional[pulumi.Input[int]]:
        """
        PIM router DR priority - Range: `0`-`4294967295`
        """
        return pulumi.get(self, "dr_priority")

    @dr_priority.setter
    def dr_priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dr_priority", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def passive(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM passive interface operation
        """
        return pulumi.get(self, "passive")

    @passive.setter
    def passive(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "passive", value)

    @property
    @pulumi.getter(name="sparseDenseMode")
    def sparse_dense_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM sparse-dense-mode operation
        """
        return pulumi.get(self, "sparse_dense_mode")

    @sparse_dense_mode.setter
    def sparse_dense_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sparse_dense_mode", value)

    @property
    @pulumi.getter(name="sparseMode")
    def sparse_mode(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable PIM sparse-mode operation
        """
        return pulumi.get(self, "sparse_mode")

    @sparse_mode.setter
    def sparse_mode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sparse_mode", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        `Port-channel`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


class InterfacePim(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bfd: Optional[pulumi.Input[bool]] = None,
                 border: Optional[pulumi.Input[bool]] = None,
                 bsr_border: Optional[pulumi.Input[bool]] = None,
                 dense_mode: Optional[pulumi.Input[bool]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dr_priority: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[bool]] = None,
                 sparse_dense_mode: Optional[pulumi.Input[bool]] = None,
                 sparse_mode: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the Interface PIM configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.iosxe.InterfacePim("example",
            bfd=False,
            border=False,
            bsr_border=False,
            dense_mode=False,
            dr_priority=10,
            passive=False,
            sparse_dense_mode=False,
            sparse_mode=True,
            type="Loopback")
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:iosxe/interfacePim:InterfacePim example "Cisco-IOS-XE-native:native/interface/Loopback=100/ip/pim"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] bfd: Configure BFD
        :param pulumi.Input[bool] border: Border of PIM domain
        :param pulumi.Input[bool] bsr_border: Border of PIM domain
        :param pulumi.Input[bool] dense_mode: Enable PIM dense-mode operation
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] dr_priority: PIM router DR priority - Range: `0`-`4294967295`
        :param pulumi.Input[bool] passive: Enable PIM passive interface operation
        :param pulumi.Input[bool] sparse_dense_mode: Enable PIM sparse-dense-mode operation
        :param pulumi.Input[bool] sparse_mode: Enable PIM sparse-mode operation
        :param pulumi.Input[str] type: Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
               `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
               `Port-channel`
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InterfacePimArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the Interface PIM configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.iosxe.InterfacePim("example",
            bfd=False,
            border=False,
            bsr_border=False,
            dense_mode=False,
            dr_priority=10,
            passive=False,
            sparse_dense_mode=False,
            sparse_mode=True,
            type="Loopback")
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:iosxe/interfacePim:InterfacePim example "Cisco-IOS-XE-native:native/interface/Loopback=100/ip/pim"
        ```

        :param str resource_name: The name of the resource.
        :param InterfacePimArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InterfacePimArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bfd: Optional[pulumi.Input[bool]] = None,
                 border: Optional[pulumi.Input[bool]] = None,
                 bsr_border: Optional[pulumi.Input[bool]] = None,
                 dense_mode: Optional[pulumi.Input[bool]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 dr_priority: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 passive: Optional[pulumi.Input[bool]] = None,
                 sparse_dense_mode: Optional[pulumi.Input[bool]] = None,
                 sparse_mode: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InterfacePimArgs.__new__(InterfacePimArgs)

            __props__.__dict__["bfd"] = bfd
            __props__.__dict__["border"] = border
            __props__.__dict__["bsr_border"] = bsr_border
            __props__.__dict__["dense_mode"] = dense_mode
            __props__.__dict__["device"] = device
            __props__.__dict__["dr_priority"] = dr_priority
            __props__.__dict__["name"] = name
            __props__.__dict__["passive"] = passive
            __props__.__dict__["sparse_dense_mode"] = sparse_dense_mode
            __props__.__dict__["sparse_mode"] = sparse_mode
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
        super(InterfacePim, __self__).__init__(
            'iosxe:iosxe/interfacePim:InterfacePim',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bfd: Optional[pulumi.Input[bool]] = None,
            border: Optional[pulumi.Input[bool]] = None,
            bsr_border: Optional[pulumi.Input[bool]] = None,
            dense_mode: Optional[pulumi.Input[bool]] = None,
            device: Optional[pulumi.Input[str]] = None,
            dr_priority: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            passive: Optional[pulumi.Input[bool]] = None,
            sparse_dense_mode: Optional[pulumi.Input[bool]] = None,
            sparse_mode: Optional[pulumi.Input[bool]] = None,
            type: Optional[pulumi.Input[str]] = None) -> 'InterfacePim':
        """
        Get an existing InterfacePim resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] bfd: Configure BFD
        :param pulumi.Input[bool] border: Border of PIM domain
        :param pulumi.Input[bool] bsr_border: Border of PIM domain
        :param pulumi.Input[bool] dense_mode: Enable PIM dense-mode operation
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] dr_priority: PIM router DR priority - Range: `0`-`4294967295`
        :param pulumi.Input[bool] passive: Enable PIM passive interface operation
        :param pulumi.Input[bool] sparse_dense_mode: Enable PIM sparse-dense-mode operation
        :param pulumi.Input[bool] sparse_mode: Enable PIM sparse-mode operation
        :param pulumi.Input[str] type: Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
               `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
               `Port-channel`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InterfacePimState.__new__(_InterfacePimState)

        __props__.__dict__["bfd"] = bfd
        __props__.__dict__["border"] = border
        __props__.__dict__["bsr_border"] = bsr_border
        __props__.__dict__["dense_mode"] = dense_mode
        __props__.__dict__["device"] = device
        __props__.__dict__["dr_priority"] = dr_priority
        __props__.__dict__["name"] = name
        __props__.__dict__["passive"] = passive
        __props__.__dict__["sparse_dense_mode"] = sparse_dense_mode
        __props__.__dict__["sparse_mode"] = sparse_mode
        __props__.__dict__["type"] = type
        return InterfacePim(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def bfd(self) -> pulumi.Output[Optional[bool]]:
        """
        Configure BFD
        """
        return pulumi.get(self, "bfd")

    @property
    @pulumi.getter
    def border(self) -> pulumi.Output[Optional[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "border")

    @property
    @pulumi.getter(name="bsrBorder")
    def bsr_border(self) -> pulumi.Output[Optional[bool]]:
        """
        Border of PIM domain
        """
        return pulumi.get(self, "bsr_border")

    @property
    @pulumi.getter(name="denseMode")
    def dense_mode(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable PIM dense-mode operation
        """
        return pulumi.get(self, "dense_mode")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="drPriority")
    def dr_priority(self) -> pulumi.Output[Optional[int]]:
        """
        PIM router DR priority - Range: `0`-`4294967295`
        """
        return pulumi.get(self, "dr_priority")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def passive(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable PIM passive interface operation
        """
        return pulumi.get(self, "passive")

    @property
    @pulumi.getter(name="sparseDenseMode")
    def sparse_dense_mode(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable PIM sparse-dense-mode operation
        """
        return pulumi.get(self, "sparse_dense_mode")

    @property
    @pulumi.getter(name="sparseMode")
    def sparse_mode(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable PIM sparse-mode operation
        """
        return pulumi.get(self, "sparse_mode")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        `Port-channel`
        """
        return pulumi.get(self, "type")

