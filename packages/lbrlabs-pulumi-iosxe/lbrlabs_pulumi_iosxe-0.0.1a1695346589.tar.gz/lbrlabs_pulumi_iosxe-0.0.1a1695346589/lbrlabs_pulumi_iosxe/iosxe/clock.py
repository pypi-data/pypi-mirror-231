# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ClockArgs', 'Clock']

@pulumi.input_type
class ClockArgs:
    def __init__(__self__, *,
                 calendar_valid: Optional[pulumi.Input[bool]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 summer_time_date: Optional[pulumi.Input[bool]] = None,
                 summer_time_date_end_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_year: Optional[pulumi.Input[int]] = None,
                 summer_time_date_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_year: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring: Optional[pulumi.Input[bool]] = None,
                 summer_time_recurring_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_zone: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Clock resource.
        :param pulumi.Input[bool] calendar_valid: Calendar time is authoritative
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] summer_time_date: Configure absolute summer time
        :param pulumi.Input[int] summer_time_date_end_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_end_year: - Range: `1993`-`2035`
        :param pulumi.Input[int] summer_time_date_offset: - Range: `1`-`1440`
        :param pulumi.Input[int] summer_time_date_start_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_start_year: - Range: `1993`-`2035`
        :param pulumi.Input[bool] summer_time_recurring: Configure recurring summer time
        :param pulumi.Input[str] summer_time_recurring_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_end_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[int] summer_time_recurring_offset: - Range: `1`-`1440`
        :param pulumi.Input[str] summer_time_recurring_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_start_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[str] summer_time_zone: Name of time zone in summer
        """
        if calendar_valid is not None:
            pulumi.set(__self__, "calendar_valid", calendar_valid)
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if summer_time_date is not None:
            pulumi.set(__self__, "summer_time_date", summer_time_date)
        if summer_time_date_end_day is not None:
            pulumi.set(__self__, "summer_time_date_end_day", summer_time_date_end_day)
        if summer_time_date_end_month is not None:
            pulumi.set(__self__, "summer_time_date_end_month", summer_time_date_end_month)
        if summer_time_date_end_time is not None:
            pulumi.set(__self__, "summer_time_date_end_time", summer_time_date_end_time)
        if summer_time_date_end_year is not None:
            pulumi.set(__self__, "summer_time_date_end_year", summer_time_date_end_year)
        if summer_time_date_offset is not None:
            pulumi.set(__self__, "summer_time_date_offset", summer_time_date_offset)
        if summer_time_date_start_day is not None:
            pulumi.set(__self__, "summer_time_date_start_day", summer_time_date_start_day)
        if summer_time_date_start_month is not None:
            pulumi.set(__self__, "summer_time_date_start_month", summer_time_date_start_month)
        if summer_time_date_start_time is not None:
            pulumi.set(__self__, "summer_time_date_start_time", summer_time_date_start_time)
        if summer_time_date_start_year is not None:
            pulumi.set(__self__, "summer_time_date_start_year", summer_time_date_start_year)
        if summer_time_recurring is not None:
            pulumi.set(__self__, "summer_time_recurring", summer_time_recurring)
        if summer_time_recurring_end_month is not None:
            pulumi.set(__self__, "summer_time_recurring_end_month", summer_time_recurring_end_month)
        if summer_time_recurring_end_time is not None:
            pulumi.set(__self__, "summer_time_recurring_end_time", summer_time_recurring_end_time)
        if summer_time_recurring_end_week is not None:
            pulumi.set(__self__, "summer_time_recurring_end_week", summer_time_recurring_end_week)
        if summer_time_recurring_end_weekday is not None:
            pulumi.set(__self__, "summer_time_recurring_end_weekday", summer_time_recurring_end_weekday)
        if summer_time_recurring_offset is not None:
            pulumi.set(__self__, "summer_time_recurring_offset", summer_time_recurring_offset)
        if summer_time_recurring_start_month is not None:
            pulumi.set(__self__, "summer_time_recurring_start_month", summer_time_recurring_start_month)
        if summer_time_recurring_start_time is not None:
            pulumi.set(__self__, "summer_time_recurring_start_time", summer_time_recurring_start_time)
        if summer_time_recurring_start_week is not None:
            pulumi.set(__self__, "summer_time_recurring_start_week", summer_time_recurring_start_week)
        if summer_time_recurring_start_weekday is not None:
            pulumi.set(__self__, "summer_time_recurring_start_weekday", summer_time_recurring_start_weekday)
        if summer_time_zone is not None:
            pulumi.set(__self__, "summer_time_zone", summer_time_zone)

    @property
    @pulumi.getter(name="calendarValid")
    def calendar_valid(self) -> Optional[pulumi.Input[bool]]:
        """
        Calendar time is authoritative
        """
        return pulumi.get(self, "calendar_valid")

    @calendar_valid.setter
    def calendar_valid(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "calendar_valid", value)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="summerTimeDate")
    def summer_time_date(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure absolute summer time
        """
        return pulumi.get(self, "summer_time_date")

    @summer_time_date.setter
    def summer_time_date(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "summer_time_date", value)

    @property
    @pulumi.getter(name="summerTimeDateEndDay")
    def summer_time_date_end_day(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_end_day")

    @summer_time_date_end_day.setter
    def summer_time_date_end_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_end_day", value)

    @property
    @pulumi.getter(name="summerTimeDateEndMonth")
    def summer_time_date_end_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_end_month")

    @summer_time_date_end_month.setter
    def summer_time_date_end_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_end_month", value)

    @property
    @pulumi.getter(name="summerTimeDateEndTime")
    def summer_time_date_end_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_date_end_time")

    @summer_time_date_end_time.setter
    def summer_time_date_end_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_end_time", value)

    @property
    @pulumi.getter(name="summerTimeDateEndYear")
    def summer_time_date_end_year(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_end_year")

    @summer_time_date_end_year.setter
    def summer_time_date_end_year(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_end_year", value)

    @property
    @pulumi.getter(name="summerTimeDateOffset")
    def summer_time_date_offset(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_date_offset")

    @summer_time_date_offset.setter
    def summer_time_date_offset(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_offset", value)

    @property
    @pulumi.getter(name="summerTimeDateStartDay")
    def summer_time_date_start_day(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_start_day")

    @summer_time_date_start_day.setter
    def summer_time_date_start_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_start_day", value)

    @property
    @pulumi.getter(name="summerTimeDateStartMonth")
    def summer_time_date_start_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_start_month")

    @summer_time_date_start_month.setter
    def summer_time_date_start_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_start_month", value)

    @property
    @pulumi.getter(name="summerTimeDateStartTime")
    def summer_time_date_start_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_date_start_time")

    @summer_time_date_start_time.setter
    def summer_time_date_start_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_start_time", value)

    @property
    @pulumi.getter(name="summerTimeDateStartYear")
    def summer_time_date_start_year(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_start_year")

    @summer_time_date_start_year.setter
    def summer_time_date_start_year(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_start_year", value)

    @property
    @pulumi.getter(name="summerTimeRecurring")
    def summer_time_recurring(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure recurring summer time
        """
        return pulumi.get(self, "summer_time_recurring")

    @summer_time_recurring.setter
    def summer_time_recurring(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "summer_time_recurring", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndMonth")
    def summer_time_recurring_end_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_end_month")

    @summer_time_recurring_end_month.setter
    def summer_time_recurring_end_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_month", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndTime")
    def summer_time_recurring_end_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_end_time")

    @summer_time_recurring_end_time.setter
    def summer_time_recurring_end_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_time", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeek")
    def summer_time_recurring_end_week(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_end_week")

    @summer_time_recurring_end_week.setter
    def summer_time_recurring_end_week(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_week", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeekday")
    def summer_time_recurring_end_weekday(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_end_weekday")

    @summer_time_recurring_end_weekday.setter
    def summer_time_recurring_end_weekday(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_weekday", value)

    @property
    @pulumi.getter(name="summerTimeRecurringOffset")
    def summer_time_recurring_offset(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_recurring_offset")

    @summer_time_recurring_offset.setter
    def summer_time_recurring_offset(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_recurring_offset", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartMonth")
    def summer_time_recurring_start_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_start_month")

    @summer_time_recurring_start_month.setter
    def summer_time_recurring_start_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_month", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartTime")
    def summer_time_recurring_start_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_start_time")

    @summer_time_recurring_start_time.setter
    def summer_time_recurring_start_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_time", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeek")
    def summer_time_recurring_start_week(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_start_week")

    @summer_time_recurring_start_week.setter
    def summer_time_recurring_start_week(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_week", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeekday")
    def summer_time_recurring_start_weekday(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_start_weekday")

    @summer_time_recurring_start_weekday.setter
    def summer_time_recurring_start_weekday(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_weekday", value)

    @property
    @pulumi.getter(name="summerTimeZone")
    def summer_time_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Name of time zone in summer
        """
        return pulumi.get(self, "summer_time_zone")

    @summer_time_zone.setter
    def summer_time_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_zone", value)


@pulumi.input_type
class _ClockState:
    def __init__(__self__, *,
                 calendar_valid: Optional[pulumi.Input[bool]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 summer_time_date: Optional[pulumi.Input[bool]] = None,
                 summer_time_date_end_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_year: Optional[pulumi.Input[int]] = None,
                 summer_time_date_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_year: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring: Optional[pulumi.Input[bool]] = None,
                 summer_time_recurring_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_zone: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Clock resources.
        :param pulumi.Input[bool] calendar_valid: Calendar time is authoritative
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] summer_time_date: Configure absolute summer time
        :param pulumi.Input[int] summer_time_date_end_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_end_year: - Range: `1993`-`2035`
        :param pulumi.Input[int] summer_time_date_offset: - Range: `1`-`1440`
        :param pulumi.Input[int] summer_time_date_start_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_start_year: - Range: `1993`-`2035`
        :param pulumi.Input[bool] summer_time_recurring: Configure recurring summer time
        :param pulumi.Input[str] summer_time_recurring_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_end_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[int] summer_time_recurring_offset: - Range: `1`-`1440`
        :param pulumi.Input[str] summer_time_recurring_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_start_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[str] summer_time_zone: Name of time zone in summer
        """
        if calendar_valid is not None:
            pulumi.set(__self__, "calendar_valid", calendar_valid)
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if summer_time_date is not None:
            pulumi.set(__self__, "summer_time_date", summer_time_date)
        if summer_time_date_end_day is not None:
            pulumi.set(__self__, "summer_time_date_end_day", summer_time_date_end_day)
        if summer_time_date_end_month is not None:
            pulumi.set(__self__, "summer_time_date_end_month", summer_time_date_end_month)
        if summer_time_date_end_time is not None:
            pulumi.set(__self__, "summer_time_date_end_time", summer_time_date_end_time)
        if summer_time_date_end_year is not None:
            pulumi.set(__self__, "summer_time_date_end_year", summer_time_date_end_year)
        if summer_time_date_offset is not None:
            pulumi.set(__self__, "summer_time_date_offset", summer_time_date_offset)
        if summer_time_date_start_day is not None:
            pulumi.set(__self__, "summer_time_date_start_day", summer_time_date_start_day)
        if summer_time_date_start_month is not None:
            pulumi.set(__self__, "summer_time_date_start_month", summer_time_date_start_month)
        if summer_time_date_start_time is not None:
            pulumi.set(__self__, "summer_time_date_start_time", summer_time_date_start_time)
        if summer_time_date_start_year is not None:
            pulumi.set(__self__, "summer_time_date_start_year", summer_time_date_start_year)
        if summer_time_recurring is not None:
            pulumi.set(__self__, "summer_time_recurring", summer_time_recurring)
        if summer_time_recurring_end_month is not None:
            pulumi.set(__self__, "summer_time_recurring_end_month", summer_time_recurring_end_month)
        if summer_time_recurring_end_time is not None:
            pulumi.set(__self__, "summer_time_recurring_end_time", summer_time_recurring_end_time)
        if summer_time_recurring_end_week is not None:
            pulumi.set(__self__, "summer_time_recurring_end_week", summer_time_recurring_end_week)
        if summer_time_recurring_end_weekday is not None:
            pulumi.set(__self__, "summer_time_recurring_end_weekday", summer_time_recurring_end_weekday)
        if summer_time_recurring_offset is not None:
            pulumi.set(__self__, "summer_time_recurring_offset", summer_time_recurring_offset)
        if summer_time_recurring_start_month is not None:
            pulumi.set(__self__, "summer_time_recurring_start_month", summer_time_recurring_start_month)
        if summer_time_recurring_start_time is not None:
            pulumi.set(__self__, "summer_time_recurring_start_time", summer_time_recurring_start_time)
        if summer_time_recurring_start_week is not None:
            pulumi.set(__self__, "summer_time_recurring_start_week", summer_time_recurring_start_week)
        if summer_time_recurring_start_weekday is not None:
            pulumi.set(__self__, "summer_time_recurring_start_weekday", summer_time_recurring_start_weekday)
        if summer_time_zone is not None:
            pulumi.set(__self__, "summer_time_zone", summer_time_zone)

    @property
    @pulumi.getter(name="calendarValid")
    def calendar_valid(self) -> Optional[pulumi.Input[bool]]:
        """
        Calendar time is authoritative
        """
        return pulumi.get(self, "calendar_valid")

    @calendar_valid.setter
    def calendar_valid(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "calendar_valid", value)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="summerTimeDate")
    def summer_time_date(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure absolute summer time
        """
        return pulumi.get(self, "summer_time_date")

    @summer_time_date.setter
    def summer_time_date(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "summer_time_date", value)

    @property
    @pulumi.getter(name="summerTimeDateEndDay")
    def summer_time_date_end_day(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_end_day")

    @summer_time_date_end_day.setter
    def summer_time_date_end_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_end_day", value)

    @property
    @pulumi.getter(name="summerTimeDateEndMonth")
    def summer_time_date_end_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_end_month")

    @summer_time_date_end_month.setter
    def summer_time_date_end_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_end_month", value)

    @property
    @pulumi.getter(name="summerTimeDateEndTime")
    def summer_time_date_end_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_date_end_time")

    @summer_time_date_end_time.setter
    def summer_time_date_end_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_end_time", value)

    @property
    @pulumi.getter(name="summerTimeDateEndYear")
    def summer_time_date_end_year(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_end_year")

    @summer_time_date_end_year.setter
    def summer_time_date_end_year(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_end_year", value)

    @property
    @pulumi.getter(name="summerTimeDateOffset")
    def summer_time_date_offset(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_date_offset")

    @summer_time_date_offset.setter
    def summer_time_date_offset(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_offset", value)

    @property
    @pulumi.getter(name="summerTimeDateStartDay")
    def summer_time_date_start_day(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_start_day")

    @summer_time_date_start_day.setter
    def summer_time_date_start_day(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_start_day", value)

    @property
    @pulumi.getter(name="summerTimeDateStartMonth")
    def summer_time_date_start_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_start_month")

    @summer_time_date_start_month.setter
    def summer_time_date_start_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_start_month", value)

    @property
    @pulumi.getter(name="summerTimeDateStartTime")
    def summer_time_date_start_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_date_start_time")

    @summer_time_date_start_time.setter
    def summer_time_date_start_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_date_start_time", value)

    @property
    @pulumi.getter(name="summerTimeDateStartYear")
    def summer_time_date_start_year(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_start_year")

    @summer_time_date_start_year.setter
    def summer_time_date_start_year(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_date_start_year", value)

    @property
    @pulumi.getter(name="summerTimeRecurring")
    def summer_time_recurring(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure recurring summer time
        """
        return pulumi.get(self, "summer_time_recurring")

    @summer_time_recurring.setter
    def summer_time_recurring(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "summer_time_recurring", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndMonth")
    def summer_time_recurring_end_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_end_month")

    @summer_time_recurring_end_month.setter
    def summer_time_recurring_end_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_month", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndTime")
    def summer_time_recurring_end_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_end_time")

    @summer_time_recurring_end_time.setter
    def summer_time_recurring_end_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_time", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeek")
    def summer_time_recurring_end_week(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_end_week")

    @summer_time_recurring_end_week.setter
    def summer_time_recurring_end_week(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_week", value)

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeekday")
    def summer_time_recurring_end_weekday(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_end_weekday")

    @summer_time_recurring_end_weekday.setter
    def summer_time_recurring_end_weekday(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_end_weekday", value)

    @property
    @pulumi.getter(name="summerTimeRecurringOffset")
    def summer_time_recurring_offset(self) -> Optional[pulumi.Input[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_recurring_offset")

    @summer_time_recurring_offset.setter
    def summer_time_recurring_offset(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "summer_time_recurring_offset", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartMonth")
    def summer_time_recurring_start_month(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_start_month")

    @summer_time_recurring_start_month.setter
    def summer_time_recurring_start_month(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_month", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartTime")
    def summer_time_recurring_start_time(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_start_time")

    @summer_time_recurring_start_time.setter
    def summer_time_recurring_start_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_time", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeek")
    def summer_time_recurring_start_week(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "summer_time_recurring_start_week")

    @summer_time_recurring_start_week.setter
    def summer_time_recurring_start_week(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_week", value)

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeekday")
    def summer_time_recurring_start_weekday(self) -> Optional[pulumi.Input[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_start_weekday")

    @summer_time_recurring_start_weekday.setter
    def summer_time_recurring_start_weekday(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_recurring_start_weekday", value)

    @property
    @pulumi.getter(name="summerTimeZone")
    def summer_time_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Name of time zone in summer
        """
        return pulumi.get(self, "summer_time_zone")

    @summer_time_zone.setter
    def summer_time_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "summer_time_zone", value)


class Clock(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 calendar_valid: Optional[pulumi.Input[bool]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 summer_time_date: Optional[pulumi.Input[bool]] = None,
                 summer_time_date_end_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_year: Optional[pulumi.Input[int]] = None,
                 summer_time_date_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_year: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring: Optional[pulumi.Input[bool]] = None,
                 summer_time_recurring_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the Clock configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.iosxe.Clock("example",
            calendar_valid=True,
            summer_time_recurring=True,
            summer_time_recurring_end_month="Dec",
            summer_time_recurring_end_time="00:00",
            summer_time_recurring_end_week="1",
            summer_time_recurring_end_weekday="Mon",
            summer_time_recurring_offset=60,
            summer_time_recurring_start_month="Jan",
            summer_time_recurring_start_time="00:00",
            summer_time_recurring_start_week="1",
            summer_time_recurring_start_weekday="Mon",
            summer_time_zone="CET")
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:iosxe/clock:Clock example "Cisco-IOS-XE-native:native/clock"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] calendar_valid: Calendar time is authoritative
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] summer_time_date: Configure absolute summer time
        :param pulumi.Input[int] summer_time_date_end_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_end_year: - Range: `1993`-`2035`
        :param pulumi.Input[int] summer_time_date_offset: - Range: `1`-`1440`
        :param pulumi.Input[int] summer_time_date_start_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_start_year: - Range: `1993`-`2035`
        :param pulumi.Input[bool] summer_time_recurring: Configure recurring summer time
        :param pulumi.Input[str] summer_time_recurring_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_end_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[int] summer_time_recurring_offset: - Range: `1`-`1440`
        :param pulumi.Input[str] summer_time_recurring_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_start_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[str] summer_time_zone: Name of time zone in summer
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ClockArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the Clock configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.iosxe.Clock("example",
            calendar_valid=True,
            summer_time_recurring=True,
            summer_time_recurring_end_month="Dec",
            summer_time_recurring_end_time="00:00",
            summer_time_recurring_end_week="1",
            summer_time_recurring_end_weekday="Mon",
            summer_time_recurring_offset=60,
            summer_time_recurring_start_month="Jan",
            summer_time_recurring_start_time="00:00",
            summer_time_recurring_start_week="1",
            summer_time_recurring_start_weekday="Mon",
            summer_time_zone="CET")
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:iosxe/clock:Clock example "Cisco-IOS-XE-native:native/clock"
        ```

        :param str resource_name: The name of the resource.
        :param ClockArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClockArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 calendar_valid: Optional[pulumi.Input[bool]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 summer_time_date: Optional[pulumi.Input[bool]] = None,
                 summer_time_date_end_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_end_year: Optional[pulumi.Input[int]] = None,
                 summer_time_date_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_day: Optional[pulumi.Input[int]] = None,
                 summer_time_date_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_date_start_year: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring: Optional[pulumi.Input[bool]] = None,
                 summer_time_recurring_end_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_end_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_offset: Optional[pulumi.Input[int]] = None,
                 summer_time_recurring_start_month: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_time: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_week: Optional[pulumi.Input[str]] = None,
                 summer_time_recurring_start_weekday: Optional[pulumi.Input[str]] = None,
                 summer_time_zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClockArgs.__new__(ClockArgs)

            __props__.__dict__["calendar_valid"] = calendar_valid
            __props__.__dict__["delete_mode"] = delete_mode
            __props__.__dict__["device"] = device
            __props__.__dict__["summer_time_date"] = summer_time_date
            __props__.__dict__["summer_time_date_end_day"] = summer_time_date_end_day
            __props__.__dict__["summer_time_date_end_month"] = summer_time_date_end_month
            __props__.__dict__["summer_time_date_end_time"] = summer_time_date_end_time
            __props__.__dict__["summer_time_date_end_year"] = summer_time_date_end_year
            __props__.__dict__["summer_time_date_offset"] = summer_time_date_offset
            __props__.__dict__["summer_time_date_start_day"] = summer_time_date_start_day
            __props__.__dict__["summer_time_date_start_month"] = summer_time_date_start_month
            __props__.__dict__["summer_time_date_start_time"] = summer_time_date_start_time
            __props__.__dict__["summer_time_date_start_year"] = summer_time_date_start_year
            __props__.__dict__["summer_time_recurring"] = summer_time_recurring
            __props__.__dict__["summer_time_recurring_end_month"] = summer_time_recurring_end_month
            __props__.__dict__["summer_time_recurring_end_time"] = summer_time_recurring_end_time
            __props__.__dict__["summer_time_recurring_end_week"] = summer_time_recurring_end_week
            __props__.__dict__["summer_time_recurring_end_weekday"] = summer_time_recurring_end_weekday
            __props__.__dict__["summer_time_recurring_offset"] = summer_time_recurring_offset
            __props__.__dict__["summer_time_recurring_start_month"] = summer_time_recurring_start_month
            __props__.__dict__["summer_time_recurring_start_time"] = summer_time_recurring_start_time
            __props__.__dict__["summer_time_recurring_start_week"] = summer_time_recurring_start_week
            __props__.__dict__["summer_time_recurring_start_weekday"] = summer_time_recurring_start_weekday
            __props__.__dict__["summer_time_zone"] = summer_time_zone
        super(Clock, __self__).__init__(
            'iosxe:iosxe/clock:Clock',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            calendar_valid: Optional[pulumi.Input[bool]] = None,
            delete_mode: Optional[pulumi.Input[str]] = None,
            device: Optional[pulumi.Input[str]] = None,
            summer_time_date: Optional[pulumi.Input[bool]] = None,
            summer_time_date_end_day: Optional[pulumi.Input[int]] = None,
            summer_time_date_end_month: Optional[pulumi.Input[str]] = None,
            summer_time_date_end_time: Optional[pulumi.Input[str]] = None,
            summer_time_date_end_year: Optional[pulumi.Input[int]] = None,
            summer_time_date_offset: Optional[pulumi.Input[int]] = None,
            summer_time_date_start_day: Optional[pulumi.Input[int]] = None,
            summer_time_date_start_month: Optional[pulumi.Input[str]] = None,
            summer_time_date_start_time: Optional[pulumi.Input[str]] = None,
            summer_time_date_start_year: Optional[pulumi.Input[int]] = None,
            summer_time_recurring: Optional[pulumi.Input[bool]] = None,
            summer_time_recurring_end_month: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_end_time: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_end_week: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_end_weekday: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_offset: Optional[pulumi.Input[int]] = None,
            summer_time_recurring_start_month: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_start_time: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_start_week: Optional[pulumi.Input[str]] = None,
            summer_time_recurring_start_weekday: Optional[pulumi.Input[str]] = None,
            summer_time_zone: Optional[pulumi.Input[str]] = None) -> 'Clock':
        """
        Get an existing Clock resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] calendar_valid: Calendar time is authoritative
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] summer_time_date: Configure absolute summer time
        :param pulumi.Input[int] summer_time_date_end_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_end_year: - Range: `1993`-`2035`
        :param pulumi.Input[int] summer_time_date_offset: - Range: `1`-`1440`
        :param pulumi.Input[int] summer_time_date_start_day: - Range: `1`-`31`
        :param pulumi.Input[str] summer_time_date_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[int] summer_time_date_start_year: - Range: `1993`-`2035`
        :param pulumi.Input[bool] summer_time_recurring: Configure recurring summer time
        :param pulumi.Input[str] summer_time_recurring_end_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_end_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[int] summer_time_recurring_offset: - Range: `1`-`1440`
        :param pulumi.Input[str] summer_time_recurring_start_month: - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        :param pulumi.Input[str] summer_time_recurring_start_weekday: - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        :param pulumi.Input[str] summer_time_zone: Name of time zone in summer
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ClockState.__new__(_ClockState)

        __props__.__dict__["calendar_valid"] = calendar_valid
        __props__.__dict__["delete_mode"] = delete_mode
        __props__.__dict__["device"] = device
        __props__.__dict__["summer_time_date"] = summer_time_date
        __props__.__dict__["summer_time_date_end_day"] = summer_time_date_end_day
        __props__.__dict__["summer_time_date_end_month"] = summer_time_date_end_month
        __props__.__dict__["summer_time_date_end_time"] = summer_time_date_end_time
        __props__.__dict__["summer_time_date_end_year"] = summer_time_date_end_year
        __props__.__dict__["summer_time_date_offset"] = summer_time_date_offset
        __props__.__dict__["summer_time_date_start_day"] = summer_time_date_start_day
        __props__.__dict__["summer_time_date_start_month"] = summer_time_date_start_month
        __props__.__dict__["summer_time_date_start_time"] = summer_time_date_start_time
        __props__.__dict__["summer_time_date_start_year"] = summer_time_date_start_year
        __props__.__dict__["summer_time_recurring"] = summer_time_recurring
        __props__.__dict__["summer_time_recurring_end_month"] = summer_time_recurring_end_month
        __props__.__dict__["summer_time_recurring_end_time"] = summer_time_recurring_end_time
        __props__.__dict__["summer_time_recurring_end_week"] = summer_time_recurring_end_week
        __props__.__dict__["summer_time_recurring_end_weekday"] = summer_time_recurring_end_weekday
        __props__.__dict__["summer_time_recurring_offset"] = summer_time_recurring_offset
        __props__.__dict__["summer_time_recurring_start_month"] = summer_time_recurring_start_month
        __props__.__dict__["summer_time_recurring_start_time"] = summer_time_recurring_start_time
        __props__.__dict__["summer_time_recurring_start_week"] = summer_time_recurring_start_week
        __props__.__dict__["summer_time_recurring_start_weekday"] = summer_time_recurring_start_weekday
        __props__.__dict__["summer_time_zone"] = summer_time_zone
        return Clock(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="calendarValid")
    def calendar_valid(self) -> pulumi.Output[Optional[bool]]:
        """
        Calendar time is authoritative
        """
        return pulumi.get(self, "calendar_valid")

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="summerTimeDate")
    def summer_time_date(self) -> pulumi.Output[Optional[bool]]:
        """
        Configure absolute summer time
        """
        return pulumi.get(self, "summer_time_date")

    @property
    @pulumi.getter(name="summerTimeDateEndDay")
    def summer_time_date_end_day(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_end_day")

    @property
    @pulumi.getter(name="summerTimeDateEndMonth")
    def summer_time_date_end_month(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_end_month")

    @property
    @pulumi.getter(name="summerTimeDateEndTime")
    def summer_time_date_end_time(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_date_end_time")

    @property
    @pulumi.getter(name="summerTimeDateEndYear")
    def summer_time_date_end_year(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_end_year")

    @property
    @pulumi.getter(name="summerTimeDateOffset")
    def summer_time_date_offset(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_date_offset")

    @property
    @pulumi.getter(name="summerTimeDateStartDay")
    def summer_time_date_start_day(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1`-`31`
        """
        return pulumi.get(self, "summer_time_date_start_day")

    @property
    @pulumi.getter(name="summerTimeDateStartMonth")
    def summer_time_date_start_month(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_date_start_month")

    @property
    @pulumi.getter(name="summerTimeDateStartTime")
    def summer_time_date_start_time(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_date_start_time")

    @property
    @pulumi.getter(name="summerTimeDateStartYear")
    def summer_time_date_start_year(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1993`-`2035`
        """
        return pulumi.get(self, "summer_time_date_start_year")

    @property
    @pulumi.getter(name="summerTimeRecurring")
    def summer_time_recurring(self) -> pulumi.Output[Optional[bool]]:
        """
        Configure recurring summer time
        """
        return pulumi.get(self, "summer_time_recurring")

    @property
    @pulumi.getter(name="summerTimeRecurringEndMonth")
    def summer_time_recurring_end_month(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_end_month")

    @property
    @pulumi.getter(name="summerTimeRecurringEndTime")
    def summer_time_recurring_end_time(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_recurring_end_time")

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeek")
    def summer_time_recurring_end_week(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_recurring_end_week")

    @property
    @pulumi.getter(name="summerTimeRecurringEndWeekday")
    def summer_time_recurring_end_weekday(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_end_weekday")

    @property
    @pulumi.getter(name="summerTimeRecurringOffset")
    def summer_time_recurring_offset(self) -> pulumi.Output[Optional[int]]:
        """
        - Range: `1`-`1440`
        """
        return pulumi.get(self, "summer_time_recurring_offset")

    @property
    @pulumi.getter(name="summerTimeRecurringStartMonth")
    def summer_time_recurring_start_month(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`
        """
        return pulumi.get(self, "summer_time_recurring_start_month")

    @property
    @pulumi.getter(name="summerTimeRecurringStartTime")
    def summer_time_recurring_start_time(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_recurring_start_time")

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeek")
    def summer_time_recurring_start_week(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "summer_time_recurring_start_week")

    @property
    @pulumi.getter(name="summerTimeRecurringStartWeekday")
    def summer_time_recurring_start_weekday(self) -> pulumi.Output[Optional[str]]:
        """
        - Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`
        """
        return pulumi.get(self, "summer_time_recurring_start_weekday")

    @property
    @pulumi.getter(name="summerTimeZone")
    def summer_time_zone(self) -> pulumi.Output[Optional[str]]:
        """
        Name of time zone in summer
        """
        return pulumi.get(self, "summer_time_zone")

