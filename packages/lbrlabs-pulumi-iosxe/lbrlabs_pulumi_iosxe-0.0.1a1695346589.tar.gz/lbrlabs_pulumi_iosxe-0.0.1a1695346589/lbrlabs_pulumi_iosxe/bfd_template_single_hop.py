# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['BfdTemplateSingleHopArgs', 'BfdTemplateSingleHop']

@pulumi.input_type
class BfdTemplateSingleHopArgs:
    def __init__(__self__, *,
                 authentication_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 dampening_half_time: Optional[pulumi.Input[int]] = None,
                 dampening_max_suppressing_time: Optional[pulumi.Input[int]] = None,
                 dampening_suppress_time: Optional[pulumi.Input[int]] = None,
                 dampening_unsuppress_time: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 echo: Optional[pulumi.Input[bool]] = None,
                 interval_microseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_microseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_both: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_multiplier: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BfdTemplateSingleHop resource.
        :param pulumi.Input[str] authentication_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_sha1_keychain: keychain name
        :param pulumi.Input[str] authentication_sha1_keychain: keychain name
        :param pulumi.Input[int] dampening_half_time: Half-life time for the penalty - Range: `1`-`30`
        :param pulumi.Input[int] dampening_max_suppressing_time: Maximum duration to suppress a session - Range: `1`-`420`
        :param pulumi.Input[int] dampening_suppress_time: Value to start suppressing a session - Range: `1`-`18000`
        :param pulumi.Input[int] dampening_unsuppress_time: Value to unsuppress a session - Range: `1`-`18000`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] echo: Use echo adjunct as bfd detection mechanism
        :param pulumi.Input[int] interval_microseconds_min_rx: Minimum receive interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_microseconds_min_tx: Minimum transmit interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_milliseconds_both: Minimum transmit and receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_rx: Minimum receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_tx: Minimum transmit interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_multiplier: Multiplier value used to compute holddown - Range: `3`-`50`
        """
        if authentication_md5_keychain is not None:
            pulumi.set(__self__, "authentication_md5_keychain", authentication_md5_keychain)
        if authentication_meticulous_md5_keychain is not None:
            pulumi.set(__self__, "authentication_meticulous_md5_keychain", authentication_meticulous_md5_keychain)
        if authentication_meticulous_sha1_keychain is not None:
            pulumi.set(__self__, "authentication_meticulous_sha1_keychain", authentication_meticulous_sha1_keychain)
        if authentication_sha1_keychain is not None:
            pulumi.set(__self__, "authentication_sha1_keychain", authentication_sha1_keychain)
        if dampening_half_time is not None:
            pulumi.set(__self__, "dampening_half_time", dampening_half_time)
        if dampening_max_suppressing_time is not None:
            pulumi.set(__self__, "dampening_max_suppressing_time", dampening_max_suppressing_time)
        if dampening_suppress_time is not None:
            pulumi.set(__self__, "dampening_suppress_time", dampening_suppress_time)
        if dampening_unsuppress_time is not None:
            pulumi.set(__self__, "dampening_unsuppress_time", dampening_unsuppress_time)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if echo is not None:
            pulumi.set(__self__, "echo", echo)
        if interval_microseconds_min_rx is not None:
            pulumi.set(__self__, "interval_microseconds_min_rx", interval_microseconds_min_rx)
        if interval_microseconds_min_tx is not None:
            pulumi.set(__self__, "interval_microseconds_min_tx", interval_microseconds_min_tx)
        if interval_milliseconds_both is not None:
            pulumi.set(__self__, "interval_milliseconds_both", interval_milliseconds_both)
        if interval_milliseconds_min_rx is not None:
            pulumi.set(__self__, "interval_milliseconds_min_rx", interval_milliseconds_min_rx)
        if interval_milliseconds_min_tx is not None:
            pulumi.set(__self__, "interval_milliseconds_min_tx", interval_milliseconds_min_tx)
        if interval_milliseconds_multiplier is not None:
            pulumi.set(__self__, "interval_milliseconds_multiplier", interval_milliseconds_multiplier)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="authenticationMd5Keychain")
    def authentication_md5_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_md5_keychain")

    @authentication_md5_keychain.setter
    def authentication_md5_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_md5_keychain", value)

    @property
    @pulumi.getter(name="authenticationMeticulousMd5Keychain")
    def authentication_meticulous_md5_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_md5_keychain")

    @authentication_meticulous_md5_keychain.setter
    def authentication_meticulous_md5_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_meticulous_md5_keychain", value)

    @property
    @pulumi.getter(name="authenticationMeticulousSha1Keychain")
    def authentication_meticulous_sha1_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_sha1_keychain")

    @authentication_meticulous_sha1_keychain.setter
    def authentication_meticulous_sha1_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_meticulous_sha1_keychain", value)

    @property
    @pulumi.getter(name="authenticationSha1Keychain")
    def authentication_sha1_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_sha1_keychain")

    @authentication_sha1_keychain.setter
    def authentication_sha1_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_sha1_keychain", value)

    @property
    @pulumi.getter(name="dampeningHalfTime")
    def dampening_half_time(self) -> Optional[pulumi.Input[int]]:
        """
        Half-life time for the penalty - Range: `1`-`30`
        """
        return pulumi.get(self, "dampening_half_time")

    @dampening_half_time.setter
    def dampening_half_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_half_time", value)

    @property
    @pulumi.getter(name="dampeningMaxSuppressingTime")
    def dampening_max_suppressing_time(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum duration to suppress a session - Range: `1`-`420`
        """
        return pulumi.get(self, "dampening_max_suppressing_time")

    @dampening_max_suppressing_time.setter
    def dampening_max_suppressing_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_max_suppressing_time", value)

    @property
    @pulumi.getter(name="dampeningSuppressTime")
    def dampening_suppress_time(self) -> Optional[pulumi.Input[int]]:
        """
        Value to start suppressing a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_suppress_time")

    @dampening_suppress_time.setter
    def dampening_suppress_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_suppress_time", value)

    @property
    @pulumi.getter(name="dampeningUnsuppressTime")
    def dampening_unsuppress_time(self) -> Optional[pulumi.Input[int]]:
        """
        Value to unsuppress a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_unsuppress_time")

    @dampening_unsuppress_time.setter
    def dampening_unsuppress_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_unsuppress_time", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def echo(self) -> Optional[pulumi.Input[bool]]:
        """
        Use echo adjunct as bfd detection mechanism
        """
        return pulumi.get(self, "echo")

    @echo.setter
    def echo(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "echo", value)

    @property
    @pulumi.getter(name="intervalMicrosecondsMinRx")
    def interval_microseconds_min_rx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum receive interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_rx")

    @interval_microseconds_min_rx.setter
    def interval_microseconds_min_rx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_microseconds_min_rx", value)

    @property
    @pulumi.getter(name="intervalMicrosecondsMinTx")
    def interval_microseconds_min_tx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_tx")

    @interval_microseconds_min_tx.setter
    def interval_microseconds_min_tx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_microseconds_min_tx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsBoth")
    def interval_milliseconds_both(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit and receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_both")

    @interval_milliseconds_both.setter
    def interval_milliseconds_both(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_both", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMinRx")
    def interval_milliseconds_min_rx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_rx")

    @interval_milliseconds_min_rx.setter
    def interval_milliseconds_min_rx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_min_rx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMinTx")
    def interval_milliseconds_min_tx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_tx")

    @interval_milliseconds_min_tx.setter
    def interval_milliseconds_min_tx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_min_tx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMultiplier")
    def interval_milliseconds_multiplier(self) -> Optional[pulumi.Input[int]]:
        """
        Multiplier value used to compute holddown - Range: `3`-`50`
        """
        return pulumi.get(self, "interval_milliseconds_multiplier")

    @interval_milliseconds_multiplier.setter
    def interval_milliseconds_multiplier(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_multiplier", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _BfdTemplateSingleHopState:
    def __init__(__self__, *,
                 authentication_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 dampening_half_time: Optional[pulumi.Input[int]] = None,
                 dampening_max_suppressing_time: Optional[pulumi.Input[int]] = None,
                 dampening_suppress_time: Optional[pulumi.Input[int]] = None,
                 dampening_unsuppress_time: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 echo: Optional[pulumi.Input[bool]] = None,
                 interval_microseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_microseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_both: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_multiplier: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BfdTemplateSingleHop resources.
        :param pulumi.Input[str] authentication_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_sha1_keychain: keychain name
        :param pulumi.Input[str] authentication_sha1_keychain: keychain name
        :param pulumi.Input[int] dampening_half_time: Half-life time for the penalty - Range: `1`-`30`
        :param pulumi.Input[int] dampening_max_suppressing_time: Maximum duration to suppress a session - Range: `1`-`420`
        :param pulumi.Input[int] dampening_suppress_time: Value to start suppressing a session - Range: `1`-`18000`
        :param pulumi.Input[int] dampening_unsuppress_time: Value to unsuppress a session - Range: `1`-`18000`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] echo: Use echo adjunct as bfd detection mechanism
        :param pulumi.Input[int] interval_microseconds_min_rx: Minimum receive interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_microseconds_min_tx: Minimum transmit interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_milliseconds_both: Minimum transmit and receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_rx: Minimum receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_tx: Minimum transmit interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_multiplier: Multiplier value used to compute holddown - Range: `3`-`50`
        """
        if authentication_md5_keychain is not None:
            pulumi.set(__self__, "authentication_md5_keychain", authentication_md5_keychain)
        if authentication_meticulous_md5_keychain is not None:
            pulumi.set(__self__, "authentication_meticulous_md5_keychain", authentication_meticulous_md5_keychain)
        if authentication_meticulous_sha1_keychain is not None:
            pulumi.set(__self__, "authentication_meticulous_sha1_keychain", authentication_meticulous_sha1_keychain)
        if authentication_sha1_keychain is not None:
            pulumi.set(__self__, "authentication_sha1_keychain", authentication_sha1_keychain)
        if dampening_half_time is not None:
            pulumi.set(__self__, "dampening_half_time", dampening_half_time)
        if dampening_max_suppressing_time is not None:
            pulumi.set(__self__, "dampening_max_suppressing_time", dampening_max_suppressing_time)
        if dampening_suppress_time is not None:
            pulumi.set(__self__, "dampening_suppress_time", dampening_suppress_time)
        if dampening_unsuppress_time is not None:
            pulumi.set(__self__, "dampening_unsuppress_time", dampening_unsuppress_time)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if echo is not None:
            pulumi.set(__self__, "echo", echo)
        if interval_microseconds_min_rx is not None:
            pulumi.set(__self__, "interval_microseconds_min_rx", interval_microseconds_min_rx)
        if interval_microseconds_min_tx is not None:
            pulumi.set(__self__, "interval_microseconds_min_tx", interval_microseconds_min_tx)
        if interval_milliseconds_both is not None:
            pulumi.set(__self__, "interval_milliseconds_both", interval_milliseconds_both)
        if interval_milliseconds_min_rx is not None:
            pulumi.set(__self__, "interval_milliseconds_min_rx", interval_milliseconds_min_rx)
        if interval_milliseconds_min_tx is not None:
            pulumi.set(__self__, "interval_milliseconds_min_tx", interval_milliseconds_min_tx)
        if interval_milliseconds_multiplier is not None:
            pulumi.set(__self__, "interval_milliseconds_multiplier", interval_milliseconds_multiplier)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="authenticationMd5Keychain")
    def authentication_md5_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_md5_keychain")

    @authentication_md5_keychain.setter
    def authentication_md5_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_md5_keychain", value)

    @property
    @pulumi.getter(name="authenticationMeticulousMd5Keychain")
    def authentication_meticulous_md5_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_md5_keychain")

    @authentication_meticulous_md5_keychain.setter
    def authentication_meticulous_md5_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_meticulous_md5_keychain", value)

    @property
    @pulumi.getter(name="authenticationMeticulousSha1Keychain")
    def authentication_meticulous_sha1_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_sha1_keychain")

    @authentication_meticulous_sha1_keychain.setter
    def authentication_meticulous_sha1_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_meticulous_sha1_keychain", value)

    @property
    @pulumi.getter(name="authenticationSha1Keychain")
    def authentication_sha1_keychain(self) -> Optional[pulumi.Input[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_sha1_keychain")

    @authentication_sha1_keychain.setter
    def authentication_sha1_keychain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_sha1_keychain", value)

    @property
    @pulumi.getter(name="dampeningHalfTime")
    def dampening_half_time(self) -> Optional[pulumi.Input[int]]:
        """
        Half-life time for the penalty - Range: `1`-`30`
        """
        return pulumi.get(self, "dampening_half_time")

    @dampening_half_time.setter
    def dampening_half_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_half_time", value)

    @property
    @pulumi.getter(name="dampeningMaxSuppressingTime")
    def dampening_max_suppressing_time(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum duration to suppress a session - Range: `1`-`420`
        """
        return pulumi.get(self, "dampening_max_suppressing_time")

    @dampening_max_suppressing_time.setter
    def dampening_max_suppressing_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_max_suppressing_time", value)

    @property
    @pulumi.getter(name="dampeningSuppressTime")
    def dampening_suppress_time(self) -> Optional[pulumi.Input[int]]:
        """
        Value to start suppressing a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_suppress_time")

    @dampening_suppress_time.setter
    def dampening_suppress_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_suppress_time", value)

    @property
    @pulumi.getter(name="dampeningUnsuppressTime")
    def dampening_unsuppress_time(self) -> Optional[pulumi.Input[int]]:
        """
        Value to unsuppress a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_unsuppress_time")

    @dampening_unsuppress_time.setter
    def dampening_unsuppress_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "dampening_unsuppress_time", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def echo(self) -> Optional[pulumi.Input[bool]]:
        """
        Use echo adjunct as bfd detection mechanism
        """
        return pulumi.get(self, "echo")

    @echo.setter
    def echo(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "echo", value)

    @property
    @pulumi.getter(name="intervalMicrosecondsMinRx")
    def interval_microseconds_min_rx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum receive interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_rx")

    @interval_microseconds_min_rx.setter
    def interval_microseconds_min_rx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_microseconds_min_rx", value)

    @property
    @pulumi.getter(name="intervalMicrosecondsMinTx")
    def interval_microseconds_min_tx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_tx")

    @interval_microseconds_min_tx.setter
    def interval_microseconds_min_tx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_microseconds_min_tx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsBoth")
    def interval_milliseconds_both(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit and receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_both")

    @interval_milliseconds_both.setter
    def interval_milliseconds_both(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_both", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMinRx")
    def interval_milliseconds_min_rx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_rx")

    @interval_milliseconds_min_rx.setter
    def interval_milliseconds_min_rx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_min_rx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMinTx")
    def interval_milliseconds_min_tx(self) -> Optional[pulumi.Input[int]]:
        """
        Minimum transmit interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_tx")

    @interval_milliseconds_min_tx.setter
    def interval_milliseconds_min_tx(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_min_tx", value)

    @property
    @pulumi.getter(name="intervalMillisecondsMultiplier")
    def interval_milliseconds_multiplier(self) -> Optional[pulumi.Input[int]]:
        """
        Multiplier value used to compute holddown - Range: `3`-`50`
        """
        return pulumi.get(self, "interval_milliseconds_multiplier")

    @interval_milliseconds_multiplier.setter
    def interval_milliseconds_multiplier(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "interval_milliseconds_multiplier", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


class BfdTemplateSingleHop(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authentication_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 dampening_half_time: Optional[pulumi.Input[int]] = None,
                 dampening_max_suppressing_time: Optional[pulumi.Input[int]] = None,
                 dampening_suppress_time: Optional[pulumi.Input[int]] = None,
                 dampening_unsuppress_time: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 echo: Optional[pulumi.Input[bool]] = None,
                 interval_microseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_microseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_both: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_multiplier: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        This resource can manage the BFD Template Single Hop configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.BfdTemplateSingleHop("example",
            authentication_md5_keychain="KEYC1",
            dampening_half_time=30,
            dampening_max_suppressing_time=60,
            dampening_suppress_time=100,
            dampening_unsuppress_time=30,
            echo=True)
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop example "Cisco-IOS-XE-native:native/bfd-template/Cisco-IOS-XE-bfd:single-hop=SH-TEMPLATE-1"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] authentication_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_sha1_keychain: keychain name
        :param pulumi.Input[str] authentication_sha1_keychain: keychain name
        :param pulumi.Input[int] dampening_half_time: Half-life time for the penalty - Range: `1`-`30`
        :param pulumi.Input[int] dampening_max_suppressing_time: Maximum duration to suppress a session - Range: `1`-`420`
        :param pulumi.Input[int] dampening_suppress_time: Value to start suppressing a session - Range: `1`-`18000`
        :param pulumi.Input[int] dampening_unsuppress_time: Value to unsuppress a session - Range: `1`-`18000`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] echo: Use echo adjunct as bfd detection mechanism
        :param pulumi.Input[int] interval_microseconds_min_rx: Minimum receive interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_microseconds_min_tx: Minimum transmit interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_milliseconds_both: Minimum transmit and receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_rx: Minimum receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_tx: Minimum transmit interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_multiplier: Multiplier value used to compute holddown - Range: `3`-`50`
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[BfdTemplateSingleHopArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage the BFD Template Single Hop configuration.

        ## Example Usage

        ```python
        import pulumi
        import lbrlabs_pulumi_iosxe as iosxe

        example = iosxe.BfdTemplateSingleHop("example",
            authentication_md5_keychain="KEYC1",
            dampening_half_time=30,
            dampening_max_suppressing_time=60,
            dampening_suppress_time=100,
            dampening_unsuppress_time=30,
            echo=True)
        ```

        ## Import

        ```sh
         $ pulumi import iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop example "Cisco-IOS-XE-native:native/bfd-template/Cisco-IOS-XE-bfd:single-hop=SH-TEMPLATE-1"
        ```

        :param str resource_name: The name of the resource.
        :param BfdTemplateSingleHopArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BfdTemplateSingleHopArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authentication_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_md5_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_meticulous_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 authentication_sha1_keychain: Optional[pulumi.Input[str]] = None,
                 dampening_half_time: Optional[pulumi.Input[int]] = None,
                 dampening_max_suppressing_time: Optional[pulumi.Input[int]] = None,
                 dampening_suppress_time: Optional[pulumi.Input[int]] = None,
                 dampening_unsuppress_time: Optional[pulumi.Input[int]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 echo: Optional[pulumi.Input[bool]] = None,
                 interval_microseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_microseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_both: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_rx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_min_tx: Optional[pulumi.Input[int]] = None,
                 interval_milliseconds_multiplier: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BfdTemplateSingleHopArgs.__new__(BfdTemplateSingleHopArgs)

            __props__.__dict__["authentication_md5_keychain"] = authentication_md5_keychain
            __props__.__dict__["authentication_meticulous_md5_keychain"] = authentication_meticulous_md5_keychain
            __props__.__dict__["authentication_meticulous_sha1_keychain"] = authentication_meticulous_sha1_keychain
            __props__.__dict__["authentication_sha1_keychain"] = authentication_sha1_keychain
            __props__.__dict__["dampening_half_time"] = dampening_half_time
            __props__.__dict__["dampening_max_suppressing_time"] = dampening_max_suppressing_time
            __props__.__dict__["dampening_suppress_time"] = dampening_suppress_time
            __props__.__dict__["dampening_unsuppress_time"] = dampening_unsuppress_time
            __props__.__dict__["device"] = device
            __props__.__dict__["echo"] = echo
            __props__.__dict__["interval_microseconds_min_rx"] = interval_microseconds_min_rx
            __props__.__dict__["interval_microseconds_min_tx"] = interval_microseconds_min_tx
            __props__.__dict__["interval_milliseconds_both"] = interval_milliseconds_both
            __props__.__dict__["interval_milliseconds_min_rx"] = interval_milliseconds_min_rx
            __props__.__dict__["interval_milliseconds_min_tx"] = interval_milliseconds_min_tx
            __props__.__dict__["interval_milliseconds_multiplier"] = interval_milliseconds_multiplier
            __props__.__dict__["name"] = name
        super(BfdTemplateSingleHop, __self__).__init__(
            'iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            authentication_md5_keychain: Optional[pulumi.Input[str]] = None,
            authentication_meticulous_md5_keychain: Optional[pulumi.Input[str]] = None,
            authentication_meticulous_sha1_keychain: Optional[pulumi.Input[str]] = None,
            authentication_sha1_keychain: Optional[pulumi.Input[str]] = None,
            dampening_half_time: Optional[pulumi.Input[int]] = None,
            dampening_max_suppressing_time: Optional[pulumi.Input[int]] = None,
            dampening_suppress_time: Optional[pulumi.Input[int]] = None,
            dampening_unsuppress_time: Optional[pulumi.Input[int]] = None,
            device: Optional[pulumi.Input[str]] = None,
            echo: Optional[pulumi.Input[bool]] = None,
            interval_microseconds_min_rx: Optional[pulumi.Input[int]] = None,
            interval_microseconds_min_tx: Optional[pulumi.Input[int]] = None,
            interval_milliseconds_both: Optional[pulumi.Input[int]] = None,
            interval_milliseconds_min_rx: Optional[pulumi.Input[int]] = None,
            interval_milliseconds_min_tx: Optional[pulumi.Input[int]] = None,
            interval_milliseconds_multiplier: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None) -> 'BfdTemplateSingleHop':
        """
        Get an existing BfdTemplateSingleHop resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] authentication_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_md5_keychain: keychain name
        :param pulumi.Input[str] authentication_meticulous_sha1_keychain: keychain name
        :param pulumi.Input[str] authentication_sha1_keychain: keychain name
        :param pulumi.Input[int] dampening_half_time: Half-life time for the penalty - Range: `1`-`30`
        :param pulumi.Input[int] dampening_max_suppressing_time: Maximum duration to suppress a session - Range: `1`-`420`
        :param pulumi.Input[int] dampening_suppress_time: Value to start suppressing a session - Range: `1`-`18000`
        :param pulumi.Input[int] dampening_unsuppress_time: Value to unsuppress a session - Range: `1`-`18000`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] echo: Use echo adjunct as bfd detection mechanism
        :param pulumi.Input[int] interval_microseconds_min_rx: Minimum receive interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_microseconds_min_tx: Minimum transmit interval capability - Range: `3300`-`9999000`
        :param pulumi.Input[int] interval_milliseconds_both: Minimum transmit and receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_rx: Minimum receive interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_min_tx: Minimum transmit interval capability - Range: `4`-`9999`
        :param pulumi.Input[int] interval_milliseconds_multiplier: Multiplier value used to compute holddown - Range: `3`-`50`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BfdTemplateSingleHopState.__new__(_BfdTemplateSingleHopState)

        __props__.__dict__["authentication_md5_keychain"] = authentication_md5_keychain
        __props__.__dict__["authentication_meticulous_md5_keychain"] = authentication_meticulous_md5_keychain
        __props__.__dict__["authentication_meticulous_sha1_keychain"] = authentication_meticulous_sha1_keychain
        __props__.__dict__["authentication_sha1_keychain"] = authentication_sha1_keychain
        __props__.__dict__["dampening_half_time"] = dampening_half_time
        __props__.__dict__["dampening_max_suppressing_time"] = dampening_max_suppressing_time
        __props__.__dict__["dampening_suppress_time"] = dampening_suppress_time
        __props__.__dict__["dampening_unsuppress_time"] = dampening_unsuppress_time
        __props__.__dict__["device"] = device
        __props__.__dict__["echo"] = echo
        __props__.__dict__["interval_microseconds_min_rx"] = interval_microseconds_min_rx
        __props__.__dict__["interval_microseconds_min_tx"] = interval_microseconds_min_tx
        __props__.__dict__["interval_milliseconds_both"] = interval_milliseconds_both
        __props__.__dict__["interval_milliseconds_min_rx"] = interval_milliseconds_min_rx
        __props__.__dict__["interval_milliseconds_min_tx"] = interval_milliseconds_min_tx
        __props__.__dict__["interval_milliseconds_multiplier"] = interval_milliseconds_multiplier
        __props__.__dict__["name"] = name
        return BfdTemplateSingleHop(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="authenticationMd5Keychain")
    def authentication_md5_keychain(self) -> pulumi.Output[Optional[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_md5_keychain")

    @property
    @pulumi.getter(name="authenticationMeticulousMd5Keychain")
    def authentication_meticulous_md5_keychain(self) -> pulumi.Output[Optional[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_md5_keychain")

    @property
    @pulumi.getter(name="authenticationMeticulousSha1Keychain")
    def authentication_meticulous_sha1_keychain(self) -> pulumi.Output[Optional[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_meticulous_sha1_keychain")

    @property
    @pulumi.getter(name="authenticationSha1Keychain")
    def authentication_sha1_keychain(self) -> pulumi.Output[Optional[str]]:
        """
        keychain name
        """
        return pulumi.get(self, "authentication_sha1_keychain")

    @property
    @pulumi.getter(name="dampeningHalfTime")
    def dampening_half_time(self) -> pulumi.Output[Optional[int]]:
        """
        Half-life time for the penalty - Range: `1`-`30`
        """
        return pulumi.get(self, "dampening_half_time")

    @property
    @pulumi.getter(name="dampeningMaxSuppressingTime")
    def dampening_max_suppressing_time(self) -> pulumi.Output[Optional[int]]:
        """
        Maximum duration to suppress a session - Range: `1`-`420`
        """
        return pulumi.get(self, "dampening_max_suppressing_time")

    @property
    @pulumi.getter(name="dampeningSuppressTime")
    def dampening_suppress_time(self) -> pulumi.Output[Optional[int]]:
        """
        Value to start suppressing a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_suppress_time")

    @property
    @pulumi.getter(name="dampeningUnsuppressTime")
    def dampening_unsuppress_time(self) -> pulumi.Output[Optional[int]]:
        """
        Value to unsuppress a session - Range: `1`-`18000`
        """
        return pulumi.get(self, "dampening_unsuppress_time")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def echo(self) -> pulumi.Output[Optional[bool]]:
        """
        Use echo adjunct as bfd detection mechanism
        """
        return pulumi.get(self, "echo")

    @property
    @pulumi.getter(name="intervalMicrosecondsMinRx")
    def interval_microseconds_min_rx(self) -> pulumi.Output[Optional[int]]:
        """
        Minimum receive interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_rx")

    @property
    @pulumi.getter(name="intervalMicrosecondsMinTx")
    def interval_microseconds_min_tx(self) -> pulumi.Output[Optional[int]]:
        """
        Minimum transmit interval capability - Range: `3300`-`9999000`
        """
        return pulumi.get(self, "interval_microseconds_min_tx")

    @property
    @pulumi.getter(name="intervalMillisecondsBoth")
    def interval_milliseconds_both(self) -> pulumi.Output[Optional[int]]:
        """
        Minimum transmit and receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_both")

    @property
    @pulumi.getter(name="intervalMillisecondsMinRx")
    def interval_milliseconds_min_rx(self) -> pulumi.Output[Optional[int]]:
        """
        Minimum receive interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_rx")

    @property
    @pulumi.getter(name="intervalMillisecondsMinTx")
    def interval_milliseconds_min_tx(self) -> pulumi.Output[Optional[int]]:
        """
        Minimum transmit interval capability - Range: `4`-`9999`
        """
        return pulumi.get(self, "interval_milliseconds_min_tx")

    @property
    @pulumi.getter(name="intervalMillisecondsMultiplier")
    def interval_milliseconds_multiplier(self) -> pulumi.Output[Optional[int]]:
        """
        Multiplier value used to compute holddown - Range: `3`-`50`
        """
        return pulumi.get(self, "interval_milliseconds_multiplier")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

