# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AaaAccountingArgs', 'AaaAccounting']

@pulumi.input_type
class AaaAccountingArgs:
    def __init__(__self__, *,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 execs: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]] = None,
                 identity_default_start_stop_group1: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group2: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group3: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group4: Optional[pulumi.Input[str]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]] = None,
                 system_guarantee_first: Optional[pulumi.Input[bool]] = None,
                 update_newinfo_periodic: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a AaaAccounting resource.
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]] execs: For starting an exec (shell).
        :param pulumi.Input[str] identity_default_start_stop_group1: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group2: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group3: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group4: Use Server-group
        :param pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]] networks: For network services. (PPP, SLIP, ARAP)
        :param pulumi.Input[bool] system_guarantee_first: Guarantee system accounting as first record.
        :param pulumi.Input[int] update_newinfo_periodic: Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if execs is not None:
            pulumi.set(__self__, "execs", execs)
        if identity_default_start_stop_group1 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group1", identity_default_start_stop_group1)
        if identity_default_start_stop_group2 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group2", identity_default_start_stop_group2)
        if identity_default_start_stop_group3 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group3", identity_default_start_stop_group3)
        if identity_default_start_stop_group4 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group4", identity_default_start_stop_group4)
        if networks is not None:
            pulumi.set(__self__, "networks", networks)
        if system_guarantee_first is not None:
            pulumi.set(__self__, "system_guarantee_first", system_guarantee_first)
        if update_newinfo_periodic is not None:
            pulumi.set(__self__, "update_newinfo_periodic", update_newinfo_periodic)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def execs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]]:
        """
        For starting an exec (shell).
        """
        return pulumi.get(self, "execs")

    @execs.setter
    def execs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]]):
        pulumi.set(self, "execs", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup1")
    def identity_default_start_stop_group1(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group1")

    @identity_default_start_stop_group1.setter
    def identity_default_start_stop_group1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group1", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup2")
    def identity_default_start_stop_group2(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group2")

    @identity_default_start_stop_group2.setter
    def identity_default_start_stop_group2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group2", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup3")
    def identity_default_start_stop_group3(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group3")

    @identity_default_start_stop_group3.setter
    def identity_default_start_stop_group3(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group3", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup4")
    def identity_default_start_stop_group4(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group4")

    @identity_default_start_stop_group4.setter
    def identity_default_start_stop_group4(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group4", value)

    @property
    @pulumi.getter
    def networks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]]:
        """
        For network services. (PPP, SLIP, ARAP)
        """
        return pulumi.get(self, "networks")

    @networks.setter
    def networks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]]):
        pulumi.set(self, "networks", value)

    @property
    @pulumi.getter(name="systemGuaranteeFirst")
    def system_guarantee_first(self) -> Optional[pulumi.Input[bool]]:
        """
        Guarantee system accounting as first record.
        """
        return pulumi.get(self, "system_guarantee_first")

    @system_guarantee_first.setter
    def system_guarantee_first(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "system_guarantee_first", value)

    @property
    @pulumi.getter(name="updateNewinfoPeriodic")
    def update_newinfo_periodic(self) -> Optional[pulumi.Input[int]]:
        """
        Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        return pulumi.get(self, "update_newinfo_periodic")

    @update_newinfo_periodic.setter
    def update_newinfo_periodic(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "update_newinfo_periodic", value)


@pulumi.input_type
class _AaaAccountingState:
    def __init__(__self__, *,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 execs: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]] = None,
                 identity_default_start_stop_group1: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group2: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group3: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group4: Optional[pulumi.Input[str]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]] = None,
                 system_guarantee_first: Optional[pulumi.Input[bool]] = None,
                 update_newinfo_periodic: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering AaaAccounting resources.
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]] execs: For starting an exec (shell).
        :param pulumi.Input[str] identity_default_start_stop_group1: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group2: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group3: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group4: Use Server-group
        :param pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]] networks: For network services. (PPP, SLIP, ARAP)
        :param pulumi.Input[bool] system_guarantee_first: Guarantee system accounting as first record.
        :param pulumi.Input[int] update_newinfo_periodic: Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if execs is not None:
            pulumi.set(__self__, "execs", execs)
        if identity_default_start_stop_group1 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group1", identity_default_start_stop_group1)
        if identity_default_start_stop_group2 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group2", identity_default_start_stop_group2)
        if identity_default_start_stop_group3 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group3", identity_default_start_stop_group3)
        if identity_default_start_stop_group4 is not None:
            pulumi.set(__self__, "identity_default_start_stop_group4", identity_default_start_stop_group4)
        if networks is not None:
            pulumi.set(__self__, "networks", networks)
        if system_guarantee_first is not None:
            pulumi.set(__self__, "system_guarantee_first", system_guarantee_first)
        if update_newinfo_periodic is not None:
            pulumi.set(__self__, "update_newinfo_periodic", update_newinfo_periodic)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def execs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]]:
        """
        For starting an exec (shell).
        """
        return pulumi.get(self, "execs")

    @execs.setter
    def execs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingExecArgs']]]]):
        pulumi.set(self, "execs", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup1")
    def identity_default_start_stop_group1(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group1")

    @identity_default_start_stop_group1.setter
    def identity_default_start_stop_group1(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group1", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup2")
    def identity_default_start_stop_group2(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group2")

    @identity_default_start_stop_group2.setter
    def identity_default_start_stop_group2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group2", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup3")
    def identity_default_start_stop_group3(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group3")

    @identity_default_start_stop_group3.setter
    def identity_default_start_stop_group3(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group3", value)

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup4")
    def identity_default_start_stop_group4(self) -> Optional[pulumi.Input[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group4")

    @identity_default_start_stop_group4.setter
    def identity_default_start_stop_group4(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "identity_default_start_stop_group4", value)

    @property
    @pulumi.getter
    def networks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]]:
        """
        For network services. (PPP, SLIP, ARAP)
        """
        return pulumi.get(self, "networks")

    @networks.setter
    def networks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['AaaAccountingNetworkArgs']]]]):
        pulumi.set(self, "networks", value)

    @property
    @pulumi.getter(name="systemGuaranteeFirst")
    def system_guarantee_first(self) -> Optional[pulumi.Input[bool]]:
        """
        Guarantee system accounting as first record.
        """
        return pulumi.get(self, "system_guarantee_first")

    @system_guarantee_first.setter
    def system_guarantee_first(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "system_guarantee_first", value)

    @property
    @pulumi.getter(name="updateNewinfoPeriodic")
    def update_newinfo_periodic(self) -> Optional[pulumi.Input[int]]:
        """
        Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        return pulumi.get(self, "update_newinfo_periodic")

    @update_newinfo_periodic.setter
    def update_newinfo_periodic(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "update_newinfo_periodic", value)


class AaaAccounting(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 execs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingExecArgs']]]]] = None,
                 identity_default_start_stop_group1: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group2: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group3: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group4: Optional[pulumi.Input[str]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingNetworkArgs']]]]] = None,
                 system_guarantee_first: Optional[pulumi.Input[bool]] = None,
                 update_newinfo_periodic: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Create a AaaAccounting resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingExecArgs']]]] execs: For starting an exec (shell).
        :param pulumi.Input[str] identity_default_start_stop_group1: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group2: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group3: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group4: Use Server-group
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingNetworkArgs']]]] networks: For network services. (PPP, SLIP, ARAP)
        :param pulumi.Input[bool] system_guarantee_first: Guarantee system accounting as first record.
        :param pulumi.Input[int] update_newinfo_periodic: Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AaaAccountingArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a AaaAccounting resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param AaaAccountingArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AaaAccountingArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 execs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingExecArgs']]]]] = None,
                 identity_default_start_stop_group1: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group2: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group3: Optional[pulumi.Input[str]] = None,
                 identity_default_start_stop_group4: Optional[pulumi.Input[str]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingNetworkArgs']]]]] = None,
                 system_guarantee_first: Optional[pulumi.Input[bool]] = None,
                 update_newinfo_periodic: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AaaAccountingArgs.__new__(AaaAccountingArgs)

            __props__.__dict__["delete_mode"] = delete_mode
            __props__.__dict__["device"] = device
            __props__.__dict__["execs"] = execs
            __props__.__dict__["identity_default_start_stop_group1"] = identity_default_start_stop_group1
            __props__.__dict__["identity_default_start_stop_group2"] = identity_default_start_stop_group2
            __props__.__dict__["identity_default_start_stop_group3"] = identity_default_start_stop_group3
            __props__.__dict__["identity_default_start_stop_group4"] = identity_default_start_stop_group4
            __props__.__dict__["networks"] = networks
            __props__.__dict__["system_guarantee_first"] = system_guarantee_first
            __props__.__dict__["update_newinfo_periodic"] = update_newinfo_periodic
        super(AaaAccounting, __self__).__init__(
            'iosxe:iosxe/aaaAccounting:AaaAccounting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            delete_mode: Optional[pulumi.Input[str]] = None,
            device: Optional[pulumi.Input[str]] = None,
            execs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingExecArgs']]]]] = None,
            identity_default_start_stop_group1: Optional[pulumi.Input[str]] = None,
            identity_default_start_stop_group2: Optional[pulumi.Input[str]] = None,
            identity_default_start_stop_group3: Optional[pulumi.Input[str]] = None,
            identity_default_start_stop_group4: Optional[pulumi.Input[str]] = None,
            networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingNetworkArgs']]]]] = None,
            system_guarantee_first: Optional[pulumi.Input[bool]] = None,
            update_newinfo_periodic: Optional[pulumi.Input[int]] = None) -> 'AaaAccounting':
        """
        Get an existing AaaAccounting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingExecArgs']]]] execs: For starting an exec (shell).
        :param pulumi.Input[str] identity_default_start_stop_group1: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group2: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group3: Use Server-group
        :param pulumi.Input[str] identity_default_start_stop_group4: Use Server-group
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['AaaAccountingNetworkArgs']]]] networks: For network services. (PPP, SLIP, ARAP)
        :param pulumi.Input[bool] system_guarantee_first: Guarantee system accounting as first record.
        :param pulumi.Input[int] update_newinfo_periodic: Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AaaAccountingState.__new__(_AaaAccountingState)

        __props__.__dict__["delete_mode"] = delete_mode
        __props__.__dict__["device"] = device
        __props__.__dict__["execs"] = execs
        __props__.__dict__["identity_default_start_stop_group1"] = identity_default_start_stop_group1
        __props__.__dict__["identity_default_start_stop_group2"] = identity_default_start_stop_group2
        __props__.__dict__["identity_default_start_stop_group3"] = identity_default_start_stop_group3
        __props__.__dict__["identity_default_start_stop_group4"] = identity_default_start_stop_group4
        __props__.__dict__["networks"] = networks
        __props__.__dict__["system_guarantee_first"] = system_guarantee_first
        __props__.__dict__["update_newinfo_periodic"] = update_newinfo_periodic
        return AaaAccounting(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def execs(self) -> pulumi.Output[Optional[Sequence['outputs.AaaAccountingExec']]]:
        """
        For starting an exec (shell).
        """
        return pulumi.get(self, "execs")

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup1")
    def identity_default_start_stop_group1(self) -> pulumi.Output[Optional[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group1")

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup2")
    def identity_default_start_stop_group2(self) -> pulumi.Output[Optional[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group2")

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup3")
    def identity_default_start_stop_group3(self) -> pulumi.Output[Optional[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group3")

    @property
    @pulumi.getter(name="identityDefaultStartStopGroup4")
    def identity_default_start_stop_group4(self) -> pulumi.Output[Optional[str]]:
        """
        Use Server-group
        """
        return pulumi.get(self, "identity_default_start_stop_group4")

    @property
    @pulumi.getter
    def networks(self) -> pulumi.Output[Optional[Sequence['outputs.AaaAccountingNetwork']]]:
        """
        For network services. (PPP, SLIP, ARAP)
        """
        return pulumi.get(self, "networks")

    @property
    @pulumi.getter(name="systemGuaranteeFirst")
    def system_guarantee_first(self) -> pulumi.Output[Optional[bool]]:
        """
        Guarantee system accounting as first record.
        """
        return pulumi.get(self, "system_guarantee_first")

    @property
    @pulumi.getter(name="updateNewinfoPeriodic")
    def update_newinfo_periodic(self) -> pulumi.Output[Optional[int]]:
        """
        Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        """
        return pulumi.get(self, "update_newinfo_periodic")

