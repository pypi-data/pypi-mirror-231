# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['CryptoIkev2ProposalArgs', 'CryptoIkev2Proposal']

@pulumi.input_type
class CryptoIkev2ProposalArgs:
    def __init__(__self__, *,
                 device: Optional[pulumi.Input[str]] = None,
                 encryption_aes_cbc128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc192: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc256: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm256: Optional[pulumi.Input[bool]] = None,
                 encryption_en3des: Optional[pulumi.Input[bool]] = None,
                 group_fifteen: Optional[pulumi.Input[bool]] = None,
                 group_fourteen: Optional[pulumi.Input[bool]] = None,
                 group_nineteen: Optional[pulumi.Input[bool]] = None,
                 group_one: Optional[pulumi.Input[bool]] = None,
                 group_sixteen: Optional[pulumi.Input[bool]] = None,
                 group_twenty: Optional[pulumi.Input[bool]] = None,
                 group_twenty_four: Optional[pulumi.Input[bool]] = None,
                 group_twenty_one: Optional[pulumi.Input[bool]] = None,
                 group_two: Optional[pulumi.Input[bool]] = None,
                 integrity_md5: Optional[pulumi.Input[bool]] = None,
                 integrity_sha1: Optional[pulumi.Input[bool]] = None,
                 integrity_sha256: Optional[pulumi.Input[bool]] = None,
                 integrity_sha384: Optional[pulumi.Input[bool]] = None,
                 integrity_sha512: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prf_md5: Optional[pulumi.Input[bool]] = None,
                 prf_sha1: Optional[pulumi.Input[bool]] = None,
                 prf_sha256: Optional[pulumi.Input[bool]] = None,
                 prf_sha384: Optional[pulumi.Input[bool]] = None,
                 prf_sha512: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a CryptoIkev2Proposal resource.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] encryption_aes_cbc128: AES-CBC-128
        :param pulumi.Input[bool] encryption_aes_cbc192: AES-CBC-192
        :param pulumi.Input[bool] encryption_aes_cbc256: AES-CBC-256
        :param pulumi.Input[bool] encryption_aes_gcm128: Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_aes_gcm256: Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_en3des: 3DES
        :param pulumi.Input[bool] group_fifteen: DH 3072 MODP
        :param pulumi.Input[bool] group_fourteen: DH 2048 MODP
        :param pulumi.Input[bool] group_nineteen: DH 256 ECP
        :param pulumi.Input[bool] group_one: DH 768 MODP
        :param pulumi.Input[bool] group_sixteen: DH 4096 MODP
        :param pulumi.Input[bool] group_twenty: DH 384 ECP
        :param pulumi.Input[bool] group_twenty_four: DH 2048 (256 subgroup) MODP
        :param pulumi.Input[bool] group_twenty_one: DH 521 ECP
        :param pulumi.Input[bool] group_two: DH 1024 MODP
        :param pulumi.Input[bool] integrity_md5: Message Digest 5
        :param pulumi.Input[bool] integrity_sha1: Secure Hash Standard
        :param pulumi.Input[bool] integrity_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] integrity_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] integrity_sha512: Secure Hash Standard 2 (512 bit)
        :param pulumi.Input[bool] prf_md5: Message Digest 5
        :param pulumi.Input[bool] prf_sha1: Secure Hash Standard
        :param pulumi.Input[bool] prf_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] prf_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] prf_sha512: Secure Hash Standard 2 (512 bit)
        """
        if device is not None:
            pulumi.set(__self__, "device", device)
        if encryption_aes_cbc128 is not None:
            pulumi.set(__self__, "encryption_aes_cbc128", encryption_aes_cbc128)
        if encryption_aes_cbc192 is not None:
            pulumi.set(__self__, "encryption_aes_cbc192", encryption_aes_cbc192)
        if encryption_aes_cbc256 is not None:
            pulumi.set(__self__, "encryption_aes_cbc256", encryption_aes_cbc256)
        if encryption_aes_gcm128 is not None:
            pulumi.set(__self__, "encryption_aes_gcm128", encryption_aes_gcm128)
        if encryption_aes_gcm256 is not None:
            pulumi.set(__self__, "encryption_aes_gcm256", encryption_aes_gcm256)
        if encryption_en3des is not None:
            pulumi.set(__self__, "encryption_en3des", encryption_en3des)
        if group_fifteen is not None:
            pulumi.set(__self__, "group_fifteen", group_fifteen)
        if group_fourteen is not None:
            pulumi.set(__self__, "group_fourteen", group_fourteen)
        if group_nineteen is not None:
            pulumi.set(__self__, "group_nineteen", group_nineteen)
        if group_one is not None:
            pulumi.set(__self__, "group_one", group_one)
        if group_sixteen is not None:
            pulumi.set(__self__, "group_sixteen", group_sixteen)
        if group_twenty is not None:
            pulumi.set(__self__, "group_twenty", group_twenty)
        if group_twenty_four is not None:
            pulumi.set(__self__, "group_twenty_four", group_twenty_four)
        if group_twenty_one is not None:
            pulumi.set(__self__, "group_twenty_one", group_twenty_one)
        if group_two is not None:
            pulumi.set(__self__, "group_two", group_two)
        if integrity_md5 is not None:
            pulumi.set(__self__, "integrity_md5", integrity_md5)
        if integrity_sha1 is not None:
            pulumi.set(__self__, "integrity_sha1", integrity_sha1)
        if integrity_sha256 is not None:
            pulumi.set(__self__, "integrity_sha256", integrity_sha256)
        if integrity_sha384 is not None:
            pulumi.set(__self__, "integrity_sha384", integrity_sha384)
        if integrity_sha512 is not None:
            pulumi.set(__self__, "integrity_sha512", integrity_sha512)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if prf_md5 is not None:
            pulumi.set(__self__, "prf_md5", prf_md5)
        if prf_sha1 is not None:
            pulumi.set(__self__, "prf_sha1", prf_sha1)
        if prf_sha256 is not None:
            pulumi.set(__self__, "prf_sha256", prf_sha256)
        if prf_sha384 is not None:
            pulumi.set(__self__, "prf_sha384", prf_sha384)
        if prf_sha512 is not None:
            pulumi.set(__self__, "prf_sha512", prf_sha512)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="encryptionAesCbc128")
    def encryption_aes_cbc128(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-128
        """
        return pulumi.get(self, "encryption_aes_cbc128")

    @encryption_aes_cbc128.setter
    def encryption_aes_cbc128(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc128", value)

    @property
    @pulumi.getter(name="encryptionAesCbc192")
    def encryption_aes_cbc192(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-192
        """
        return pulumi.get(self, "encryption_aes_cbc192")

    @encryption_aes_cbc192.setter
    def encryption_aes_cbc192(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc192", value)

    @property
    @pulumi.getter(name="encryptionAesCbc256")
    def encryption_aes_cbc256(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-256
        """
        return pulumi.get(self, "encryption_aes_cbc256")

    @encryption_aes_cbc256.setter
    def encryption_aes_cbc256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc256", value)

    @property
    @pulumi.getter(name="encryptionAesGcm128")
    def encryption_aes_gcm128(self) -> Optional[pulumi.Input[bool]]:
        """
        Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm128")

    @encryption_aes_gcm128.setter
    def encryption_aes_gcm128(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_gcm128", value)

    @property
    @pulumi.getter(name="encryptionAesGcm256")
    def encryption_aes_gcm256(self) -> Optional[pulumi.Input[bool]]:
        """
        Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm256")

    @encryption_aes_gcm256.setter
    def encryption_aes_gcm256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_gcm256", value)

    @property
    @pulumi.getter(name="encryptionEn3des")
    def encryption_en3des(self) -> Optional[pulumi.Input[bool]]:
        """
        3DES
        """
        return pulumi.get(self, "encryption_en3des")

    @encryption_en3des.setter
    def encryption_en3des(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_en3des", value)

    @property
    @pulumi.getter(name="groupFifteen")
    def group_fifteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 3072 MODP
        """
        return pulumi.get(self, "group_fifteen")

    @group_fifteen.setter
    def group_fifteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_fifteen", value)

    @property
    @pulumi.getter(name="groupFourteen")
    def group_fourteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 2048 MODP
        """
        return pulumi.get(self, "group_fourteen")

    @group_fourteen.setter
    def group_fourteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_fourteen", value)

    @property
    @pulumi.getter(name="groupNineteen")
    def group_nineteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 256 ECP
        """
        return pulumi.get(self, "group_nineteen")

    @group_nineteen.setter
    def group_nineteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_nineteen", value)

    @property
    @pulumi.getter(name="groupOne")
    def group_one(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 768 MODP
        """
        return pulumi.get(self, "group_one")

    @group_one.setter
    def group_one(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_one", value)

    @property
    @pulumi.getter(name="groupSixteen")
    def group_sixteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 4096 MODP
        """
        return pulumi.get(self, "group_sixteen")

    @group_sixteen.setter
    def group_sixteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_sixteen", value)

    @property
    @pulumi.getter(name="groupTwenty")
    def group_twenty(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 384 ECP
        """
        return pulumi.get(self, "group_twenty")

    @group_twenty.setter
    def group_twenty(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty", value)

    @property
    @pulumi.getter(name="groupTwentyFour")
    def group_twenty_four(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 2048 (256 subgroup) MODP
        """
        return pulumi.get(self, "group_twenty_four")

    @group_twenty_four.setter
    def group_twenty_four(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty_four", value)

    @property
    @pulumi.getter(name="groupTwentyOne")
    def group_twenty_one(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 521 ECP
        """
        return pulumi.get(self, "group_twenty_one")

    @group_twenty_one.setter
    def group_twenty_one(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty_one", value)

    @property
    @pulumi.getter(name="groupTwo")
    def group_two(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 1024 MODP
        """
        return pulumi.get(self, "group_two")

    @group_two.setter
    def group_two(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_two", value)

    @property
    @pulumi.getter(name="integrityMd5")
    def integrity_md5(self) -> Optional[pulumi.Input[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "integrity_md5")

    @integrity_md5.setter
    def integrity_md5(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_md5", value)

    @property
    @pulumi.getter(name="integritySha1")
    def integrity_sha1(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "integrity_sha1")

    @integrity_sha1.setter
    def integrity_sha1(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha1", value)

    @property
    @pulumi.getter(name="integritySha256")
    def integrity_sha256(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "integrity_sha256")

    @integrity_sha256.setter
    def integrity_sha256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha256", value)

    @property
    @pulumi.getter(name="integritySha384")
    def integrity_sha384(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "integrity_sha384")

    @integrity_sha384.setter
    def integrity_sha384(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha384", value)

    @property
    @pulumi.getter(name="integritySha512")
    def integrity_sha512(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "integrity_sha512")

    @integrity_sha512.setter
    def integrity_sha512(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha512", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="prfMd5")
    def prf_md5(self) -> Optional[pulumi.Input[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "prf_md5")

    @prf_md5.setter
    def prf_md5(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_md5", value)

    @property
    @pulumi.getter(name="prfSha1")
    def prf_sha1(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "prf_sha1")

    @prf_sha1.setter
    def prf_sha1(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha1", value)

    @property
    @pulumi.getter(name="prfSha256")
    def prf_sha256(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "prf_sha256")

    @prf_sha256.setter
    def prf_sha256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha256", value)

    @property
    @pulumi.getter(name="prfSha384")
    def prf_sha384(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "prf_sha384")

    @prf_sha384.setter
    def prf_sha384(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha384", value)

    @property
    @pulumi.getter(name="prfSha512")
    def prf_sha512(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "prf_sha512")

    @prf_sha512.setter
    def prf_sha512(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha512", value)


@pulumi.input_type
class _CryptoIkev2ProposalState:
    def __init__(__self__, *,
                 device: Optional[pulumi.Input[str]] = None,
                 encryption_aes_cbc128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc192: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc256: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm256: Optional[pulumi.Input[bool]] = None,
                 encryption_en3des: Optional[pulumi.Input[bool]] = None,
                 group_fifteen: Optional[pulumi.Input[bool]] = None,
                 group_fourteen: Optional[pulumi.Input[bool]] = None,
                 group_nineteen: Optional[pulumi.Input[bool]] = None,
                 group_one: Optional[pulumi.Input[bool]] = None,
                 group_sixteen: Optional[pulumi.Input[bool]] = None,
                 group_twenty: Optional[pulumi.Input[bool]] = None,
                 group_twenty_four: Optional[pulumi.Input[bool]] = None,
                 group_twenty_one: Optional[pulumi.Input[bool]] = None,
                 group_two: Optional[pulumi.Input[bool]] = None,
                 integrity_md5: Optional[pulumi.Input[bool]] = None,
                 integrity_sha1: Optional[pulumi.Input[bool]] = None,
                 integrity_sha256: Optional[pulumi.Input[bool]] = None,
                 integrity_sha384: Optional[pulumi.Input[bool]] = None,
                 integrity_sha512: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prf_md5: Optional[pulumi.Input[bool]] = None,
                 prf_sha1: Optional[pulumi.Input[bool]] = None,
                 prf_sha256: Optional[pulumi.Input[bool]] = None,
                 prf_sha384: Optional[pulumi.Input[bool]] = None,
                 prf_sha512: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering CryptoIkev2Proposal resources.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] encryption_aes_cbc128: AES-CBC-128
        :param pulumi.Input[bool] encryption_aes_cbc192: AES-CBC-192
        :param pulumi.Input[bool] encryption_aes_cbc256: AES-CBC-256
        :param pulumi.Input[bool] encryption_aes_gcm128: Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_aes_gcm256: Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_en3des: 3DES
        :param pulumi.Input[bool] group_fifteen: DH 3072 MODP
        :param pulumi.Input[bool] group_fourteen: DH 2048 MODP
        :param pulumi.Input[bool] group_nineteen: DH 256 ECP
        :param pulumi.Input[bool] group_one: DH 768 MODP
        :param pulumi.Input[bool] group_sixteen: DH 4096 MODP
        :param pulumi.Input[bool] group_twenty: DH 384 ECP
        :param pulumi.Input[bool] group_twenty_four: DH 2048 (256 subgroup) MODP
        :param pulumi.Input[bool] group_twenty_one: DH 521 ECP
        :param pulumi.Input[bool] group_two: DH 1024 MODP
        :param pulumi.Input[bool] integrity_md5: Message Digest 5
        :param pulumi.Input[bool] integrity_sha1: Secure Hash Standard
        :param pulumi.Input[bool] integrity_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] integrity_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] integrity_sha512: Secure Hash Standard 2 (512 bit)
        :param pulumi.Input[bool] prf_md5: Message Digest 5
        :param pulumi.Input[bool] prf_sha1: Secure Hash Standard
        :param pulumi.Input[bool] prf_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] prf_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] prf_sha512: Secure Hash Standard 2 (512 bit)
        """
        if device is not None:
            pulumi.set(__self__, "device", device)
        if encryption_aes_cbc128 is not None:
            pulumi.set(__self__, "encryption_aes_cbc128", encryption_aes_cbc128)
        if encryption_aes_cbc192 is not None:
            pulumi.set(__self__, "encryption_aes_cbc192", encryption_aes_cbc192)
        if encryption_aes_cbc256 is not None:
            pulumi.set(__self__, "encryption_aes_cbc256", encryption_aes_cbc256)
        if encryption_aes_gcm128 is not None:
            pulumi.set(__self__, "encryption_aes_gcm128", encryption_aes_gcm128)
        if encryption_aes_gcm256 is not None:
            pulumi.set(__self__, "encryption_aes_gcm256", encryption_aes_gcm256)
        if encryption_en3des is not None:
            pulumi.set(__self__, "encryption_en3des", encryption_en3des)
        if group_fifteen is not None:
            pulumi.set(__self__, "group_fifteen", group_fifteen)
        if group_fourteen is not None:
            pulumi.set(__self__, "group_fourteen", group_fourteen)
        if group_nineteen is not None:
            pulumi.set(__self__, "group_nineteen", group_nineteen)
        if group_one is not None:
            pulumi.set(__self__, "group_one", group_one)
        if group_sixteen is not None:
            pulumi.set(__self__, "group_sixteen", group_sixteen)
        if group_twenty is not None:
            pulumi.set(__self__, "group_twenty", group_twenty)
        if group_twenty_four is not None:
            pulumi.set(__self__, "group_twenty_four", group_twenty_four)
        if group_twenty_one is not None:
            pulumi.set(__self__, "group_twenty_one", group_twenty_one)
        if group_two is not None:
            pulumi.set(__self__, "group_two", group_two)
        if integrity_md5 is not None:
            pulumi.set(__self__, "integrity_md5", integrity_md5)
        if integrity_sha1 is not None:
            pulumi.set(__self__, "integrity_sha1", integrity_sha1)
        if integrity_sha256 is not None:
            pulumi.set(__self__, "integrity_sha256", integrity_sha256)
        if integrity_sha384 is not None:
            pulumi.set(__self__, "integrity_sha384", integrity_sha384)
        if integrity_sha512 is not None:
            pulumi.set(__self__, "integrity_sha512", integrity_sha512)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if prf_md5 is not None:
            pulumi.set(__self__, "prf_md5", prf_md5)
        if prf_sha1 is not None:
            pulumi.set(__self__, "prf_sha1", prf_sha1)
        if prf_sha256 is not None:
            pulumi.set(__self__, "prf_sha256", prf_sha256)
        if prf_sha384 is not None:
            pulumi.set(__self__, "prf_sha384", prf_sha384)
        if prf_sha512 is not None:
            pulumi.set(__self__, "prf_sha512", prf_sha512)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="encryptionAesCbc128")
    def encryption_aes_cbc128(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-128
        """
        return pulumi.get(self, "encryption_aes_cbc128")

    @encryption_aes_cbc128.setter
    def encryption_aes_cbc128(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc128", value)

    @property
    @pulumi.getter(name="encryptionAesCbc192")
    def encryption_aes_cbc192(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-192
        """
        return pulumi.get(self, "encryption_aes_cbc192")

    @encryption_aes_cbc192.setter
    def encryption_aes_cbc192(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc192", value)

    @property
    @pulumi.getter(name="encryptionAesCbc256")
    def encryption_aes_cbc256(self) -> Optional[pulumi.Input[bool]]:
        """
        AES-CBC-256
        """
        return pulumi.get(self, "encryption_aes_cbc256")

    @encryption_aes_cbc256.setter
    def encryption_aes_cbc256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_cbc256", value)

    @property
    @pulumi.getter(name="encryptionAesGcm128")
    def encryption_aes_gcm128(self) -> Optional[pulumi.Input[bool]]:
        """
        Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm128")

    @encryption_aes_gcm128.setter
    def encryption_aes_gcm128(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_gcm128", value)

    @property
    @pulumi.getter(name="encryptionAesGcm256")
    def encryption_aes_gcm256(self) -> Optional[pulumi.Input[bool]]:
        """
        Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm256")

    @encryption_aes_gcm256.setter
    def encryption_aes_gcm256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_aes_gcm256", value)

    @property
    @pulumi.getter(name="encryptionEn3des")
    def encryption_en3des(self) -> Optional[pulumi.Input[bool]]:
        """
        3DES
        """
        return pulumi.get(self, "encryption_en3des")

    @encryption_en3des.setter
    def encryption_en3des(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "encryption_en3des", value)

    @property
    @pulumi.getter(name="groupFifteen")
    def group_fifteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 3072 MODP
        """
        return pulumi.get(self, "group_fifteen")

    @group_fifteen.setter
    def group_fifteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_fifteen", value)

    @property
    @pulumi.getter(name="groupFourteen")
    def group_fourteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 2048 MODP
        """
        return pulumi.get(self, "group_fourteen")

    @group_fourteen.setter
    def group_fourteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_fourteen", value)

    @property
    @pulumi.getter(name="groupNineteen")
    def group_nineteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 256 ECP
        """
        return pulumi.get(self, "group_nineteen")

    @group_nineteen.setter
    def group_nineteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_nineteen", value)

    @property
    @pulumi.getter(name="groupOne")
    def group_one(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 768 MODP
        """
        return pulumi.get(self, "group_one")

    @group_one.setter
    def group_one(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_one", value)

    @property
    @pulumi.getter(name="groupSixteen")
    def group_sixteen(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 4096 MODP
        """
        return pulumi.get(self, "group_sixteen")

    @group_sixteen.setter
    def group_sixteen(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_sixteen", value)

    @property
    @pulumi.getter(name="groupTwenty")
    def group_twenty(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 384 ECP
        """
        return pulumi.get(self, "group_twenty")

    @group_twenty.setter
    def group_twenty(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty", value)

    @property
    @pulumi.getter(name="groupTwentyFour")
    def group_twenty_four(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 2048 (256 subgroup) MODP
        """
        return pulumi.get(self, "group_twenty_four")

    @group_twenty_four.setter
    def group_twenty_four(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty_four", value)

    @property
    @pulumi.getter(name="groupTwentyOne")
    def group_twenty_one(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 521 ECP
        """
        return pulumi.get(self, "group_twenty_one")

    @group_twenty_one.setter
    def group_twenty_one(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_twenty_one", value)

    @property
    @pulumi.getter(name="groupTwo")
    def group_two(self) -> Optional[pulumi.Input[bool]]:
        """
        DH 1024 MODP
        """
        return pulumi.get(self, "group_two")

    @group_two.setter
    def group_two(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "group_two", value)

    @property
    @pulumi.getter(name="integrityMd5")
    def integrity_md5(self) -> Optional[pulumi.Input[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "integrity_md5")

    @integrity_md5.setter
    def integrity_md5(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_md5", value)

    @property
    @pulumi.getter(name="integritySha1")
    def integrity_sha1(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "integrity_sha1")

    @integrity_sha1.setter
    def integrity_sha1(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha1", value)

    @property
    @pulumi.getter(name="integritySha256")
    def integrity_sha256(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "integrity_sha256")

    @integrity_sha256.setter
    def integrity_sha256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha256", value)

    @property
    @pulumi.getter(name="integritySha384")
    def integrity_sha384(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "integrity_sha384")

    @integrity_sha384.setter
    def integrity_sha384(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha384", value)

    @property
    @pulumi.getter(name="integritySha512")
    def integrity_sha512(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "integrity_sha512")

    @integrity_sha512.setter
    def integrity_sha512(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "integrity_sha512", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="prfMd5")
    def prf_md5(self) -> Optional[pulumi.Input[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "prf_md5")

    @prf_md5.setter
    def prf_md5(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_md5", value)

    @property
    @pulumi.getter(name="prfSha1")
    def prf_sha1(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "prf_sha1")

    @prf_sha1.setter
    def prf_sha1(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha1", value)

    @property
    @pulumi.getter(name="prfSha256")
    def prf_sha256(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "prf_sha256")

    @prf_sha256.setter
    def prf_sha256(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha256", value)

    @property
    @pulumi.getter(name="prfSha384")
    def prf_sha384(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "prf_sha384")

    @prf_sha384.setter
    def prf_sha384(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha384", value)

    @property
    @pulumi.getter(name="prfSha512")
    def prf_sha512(self) -> Optional[pulumi.Input[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "prf_sha512")

    @prf_sha512.setter
    def prf_sha512(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "prf_sha512", value)


class CryptoIkev2Proposal(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 encryption_aes_cbc128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc192: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc256: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm256: Optional[pulumi.Input[bool]] = None,
                 encryption_en3des: Optional[pulumi.Input[bool]] = None,
                 group_fifteen: Optional[pulumi.Input[bool]] = None,
                 group_fourteen: Optional[pulumi.Input[bool]] = None,
                 group_nineteen: Optional[pulumi.Input[bool]] = None,
                 group_one: Optional[pulumi.Input[bool]] = None,
                 group_sixteen: Optional[pulumi.Input[bool]] = None,
                 group_twenty: Optional[pulumi.Input[bool]] = None,
                 group_twenty_four: Optional[pulumi.Input[bool]] = None,
                 group_twenty_one: Optional[pulumi.Input[bool]] = None,
                 group_two: Optional[pulumi.Input[bool]] = None,
                 integrity_md5: Optional[pulumi.Input[bool]] = None,
                 integrity_sha1: Optional[pulumi.Input[bool]] = None,
                 integrity_sha256: Optional[pulumi.Input[bool]] = None,
                 integrity_sha384: Optional[pulumi.Input[bool]] = None,
                 integrity_sha512: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prf_md5: Optional[pulumi.Input[bool]] = None,
                 prf_sha1: Optional[pulumi.Input[bool]] = None,
                 prf_sha256: Optional[pulumi.Input[bool]] = None,
                 prf_sha384: Optional[pulumi.Input[bool]] = None,
                 prf_sha512: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Create a CryptoIkev2Proposal resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] encryption_aes_cbc128: AES-CBC-128
        :param pulumi.Input[bool] encryption_aes_cbc192: AES-CBC-192
        :param pulumi.Input[bool] encryption_aes_cbc256: AES-CBC-256
        :param pulumi.Input[bool] encryption_aes_gcm128: Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_aes_gcm256: Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_en3des: 3DES
        :param pulumi.Input[bool] group_fifteen: DH 3072 MODP
        :param pulumi.Input[bool] group_fourteen: DH 2048 MODP
        :param pulumi.Input[bool] group_nineteen: DH 256 ECP
        :param pulumi.Input[bool] group_one: DH 768 MODP
        :param pulumi.Input[bool] group_sixteen: DH 4096 MODP
        :param pulumi.Input[bool] group_twenty: DH 384 ECP
        :param pulumi.Input[bool] group_twenty_four: DH 2048 (256 subgroup) MODP
        :param pulumi.Input[bool] group_twenty_one: DH 521 ECP
        :param pulumi.Input[bool] group_two: DH 1024 MODP
        :param pulumi.Input[bool] integrity_md5: Message Digest 5
        :param pulumi.Input[bool] integrity_sha1: Secure Hash Standard
        :param pulumi.Input[bool] integrity_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] integrity_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] integrity_sha512: Secure Hash Standard 2 (512 bit)
        :param pulumi.Input[bool] prf_md5: Message Digest 5
        :param pulumi.Input[bool] prf_sha1: Secure Hash Standard
        :param pulumi.Input[bool] prf_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] prf_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] prf_sha512: Secure Hash Standard 2 (512 bit)
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CryptoIkev2ProposalArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CryptoIkev2Proposal resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CryptoIkev2ProposalArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CryptoIkev2ProposalArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 encryption_aes_cbc128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc192: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_cbc256: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm128: Optional[pulumi.Input[bool]] = None,
                 encryption_aes_gcm256: Optional[pulumi.Input[bool]] = None,
                 encryption_en3des: Optional[pulumi.Input[bool]] = None,
                 group_fifteen: Optional[pulumi.Input[bool]] = None,
                 group_fourteen: Optional[pulumi.Input[bool]] = None,
                 group_nineteen: Optional[pulumi.Input[bool]] = None,
                 group_one: Optional[pulumi.Input[bool]] = None,
                 group_sixteen: Optional[pulumi.Input[bool]] = None,
                 group_twenty: Optional[pulumi.Input[bool]] = None,
                 group_twenty_four: Optional[pulumi.Input[bool]] = None,
                 group_twenty_one: Optional[pulumi.Input[bool]] = None,
                 group_two: Optional[pulumi.Input[bool]] = None,
                 integrity_md5: Optional[pulumi.Input[bool]] = None,
                 integrity_sha1: Optional[pulumi.Input[bool]] = None,
                 integrity_sha256: Optional[pulumi.Input[bool]] = None,
                 integrity_sha384: Optional[pulumi.Input[bool]] = None,
                 integrity_sha512: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prf_md5: Optional[pulumi.Input[bool]] = None,
                 prf_sha1: Optional[pulumi.Input[bool]] = None,
                 prf_sha256: Optional[pulumi.Input[bool]] = None,
                 prf_sha384: Optional[pulumi.Input[bool]] = None,
                 prf_sha512: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CryptoIkev2ProposalArgs.__new__(CryptoIkev2ProposalArgs)

            __props__.__dict__["device"] = device
            __props__.__dict__["encryption_aes_cbc128"] = encryption_aes_cbc128
            __props__.__dict__["encryption_aes_cbc192"] = encryption_aes_cbc192
            __props__.__dict__["encryption_aes_cbc256"] = encryption_aes_cbc256
            __props__.__dict__["encryption_aes_gcm128"] = encryption_aes_gcm128
            __props__.__dict__["encryption_aes_gcm256"] = encryption_aes_gcm256
            __props__.__dict__["encryption_en3des"] = encryption_en3des
            __props__.__dict__["group_fifteen"] = group_fifteen
            __props__.__dict__["group_fourteen"] = group_fourteen
            __props__.__dict__["group_nineteen"] = group_nineteen
            __props__.__dict__["group_one"] = group_one
            __props__.__dict__["group_sixteen"] = group_sixteen
            __props__.__dict__["group_twenty"] = group_twenty
            __props__.__dict__["group_twenty_four"] = group_twenty_four
            __props__.__dict__["group_twenty_one"] = group_twenty_one
            __props__.__dict__["group_two"] = group_two
            __props__.__dict__["integrity_md5"] = integrity_md5
            __props__.__dict__["integrity_sha1"] = integrity_sha1
            __props__.__dict__["integrity_sha256"] = integrity_sha256
            __props__.__dict__["integrity_sha384"] = integrity_sha384
            __props__.__dict__["integrity_sha512"] = integrity_sha512
            __props__.__dict__["name"] = name
            __props__.__dict__["prf_md5"] = prf_md5
            __props__.__dict__["prf_sha1"] = prf_sha1
            __props__.__dict__["prf_sha256"] = prf_sha256
            __props__.__dict__["prf_sha384"] = prf_sha384
            __props__.__dict__["prf_sha512"] = prf_sha512
        super(CryptoIkev2Proposal, __self__).__init__(
            'iosxe:iosxe/cryptoIkev2Proposal:CryptoIkev2Proposal',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            device: Optional[pulumi.Input[str]] = None,
            encryption_aes_cbc128: Optional[pulumi.Input[bool]] = None,
            encryption_aes_cbc192: Optional[pulumi.Input[bool]] = None,
            encryption_aes_cbc256: Optional[pulumi.Input[bool]] = None,
            encryption_aes_gcm128: Optional[pulumi.Input[bool]] = None,
            encryption_aes_gcm256: Optional[pulumi.Input[bool]] = None,
            encryption_en3des: Optional[pulumi.Input[bool]] = None,
            group_fifteen: Optional[pulumi.Input[bool]] = None,
            group_fourteen: Optional[pulumi.Input[bool]] = None,
            group_nineteen: Optional[pulumi.Input[bool]] = None,
            group_one: Optional[pulumi.Input[bool]] = None,
            group_sixteen: Optional[pulumi.Input[bool]] = None,
            group_twenty: Optional[pulumi.Input[bool]] = None,
            group_twenty_four: Optional[pulumi.Input[bool]] = None,
            group_twenty_one: Optional[pulumi.Input[bool]] = None,
            group_two: Optional[pulumi.Input[bool]] = None,
            integrity_md5: Optional[pulumi.Input[bool]] = None,
            integrity_sha1: Optional[pulumi.Input[bool]] = None,
            integrity_sha256: Optional[pulumi.Input[bool]] = None,
            integrity_sha384: Optional[pulumi.Input[bool]] = None,
            integrity_sha512: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            prf_md5: Optional[pulumi.Input[bool]] = None,
            prf_sha1: Optional[pulumi.Input[bool]] = None,
            prf_sha256: Optional[pulumi.Input[bool]] = None,
            prf_sha384: Optional[pulumi.Input[bool]] = None,
            prf_sha512: Optional[pulumi.Input[bool]] = None) -> 'CryptoIkev2Proposal':
        """
        Get an existing CryptoIkev2Proposal resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[bool] encryption_aes_cbc128: AES-CBC-128
        :param pulumi.Input[bool] encryption_aes_cbc192: AES-CBC-192
        :param pulumi.Input[bool] encryption_aes_cbc256: AES-CBC-256
        :param pulumi.Input[bool] encryption_aes_gcm128: Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_aes_gcm256: Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        :param pulumi.Input[bool] encryption_en3des: 3DES
        :param pulumi.Input[bool] group_fifteen: DH 3072 MODP
        :param pulumi.Input[bool] group_fourteen: DH 2048 MODP
        :param pulumi.Input[bool] group_nineteen: DH 256 ECP
        :param pulumi.Input[bool] group_one: DH 768 MODP
        :param pulumi.Input[bool] group_sixteen: DH 4096 MODP
        :param pulumi.Input[bool] group_twenty: DH 384 ECP
        :param pulumi.Input[bool] group_twenty_four: DH 2048 (256 subgroup) MODP
        :param pulumi.Input[bool] group_twenty_one: DH 521 ECP
        :param pulumi.Input[bool] group_two: DH 1024 MODP
        :param pulumi.Input[bool] integrity_md5: Message Digest 5
        :param pulumi.Input[bool] integrity_sha1: Secure Hash Standard
        :param pulumi.Input[bool] integrity_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] integrity_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] integrity_sha512: Secure Hash Standard 2 (512 bit)
        :param pulumi.Input[bool] prf_md5: Message Digest 5
        :param pulumi.Input[bool] prf_sha1: Secure Hash Standard
        :param pulumi.Input[bool] prf_sha256: Secure Hash Standard 2 (256 bit)
        :param pulumi.Input[bool] prf_sha384: Secure Hash Standard 2 (384 bit)
        :param pulumi.Input[bool] prf_sha512: Secure Hash Standard 2 (512 bit)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CryptoIkev2ProposalState.__new__(_CryptoIkev2ProposalState)

        __props__.__dict__["device"] = device
        __props__.__dict__["encryption_aes_cbc128"] = encryption_aes_cbc128
        __props__.__dict__["encryption_aes_cbc192"] = encryption_aes_cbc192
        __props__.__dict__["encryption_aes_cbc256"] = encryption_aes_cbc256
        __props__.__dict__["encryption_aes_gcm128"] = encryption_aes_gcm128
        __props__.__dict__["encryption_aes_gcm256"] = encryption_aes_gcm256
        __props__.__dict__["encryption_en3des"] = encryption_en3des
        __props__.__dict__["group_fifteen"] = group_fifteen
        __props__.__dict__["group_fourteen"] = group_fourteen
        __props__.__dict__["group_nineteen"] = group_nineteen
        __props__.__dict__["group_one"] = group_one
        __props__.__dict__["group_sixteen"] = group_sixteen
        __props__.__dict__["group_twenty"] = group_twenty
        __props__.__dict__["group_twenty_four"] = group_twenty_four
        __props__.__dict__["group_twenty_one"] = group_twenty_one
        __props__.__dict__["group_two"] = group_two
        __props__.__dict__["integrity_md5"] = integrity_md5
        __props__.__dict__["integrity_sha1"] = integrity_sha1
        __props__.__dict__["integrity_sha256"] = integrity_sha256
        __props__.__dict__["integrity_sha384"] = integrity_sha384
        __props__.__dict__["integrity_sha512"] = integrity_sha512
        __props__.__dict__["name"] = name
        __props__.__dict__["prf_md5"] = prf_md5
        __props__.__dict__["prf_sha1"] = prf_sha1
        __props__.__dict__["prf_sha256"] = prf_sha256
        __props__.__dict__["prf_sha384"] = prf_sha384
        __props__.__dict__["prf_sha512"] = prf_sha512
        return CryptoIkev2Proposal(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="encryptionAesCbc128")
    def encryption_aes_cbc128(self) -> pulumi.Output[Optional[bool]]:
        """
        AES-CBC-128
        """
        return pulumi.get(self, "encryption_aes_cbc128")

    @property
    @pulumi.getter(name="encryptionAesCbc192")
    def encryption_aes_cbc192(self) -> pulumi.Output[Optional[bool]]:
        """
        AES-CBC-192
        """
        return pulumi.get(self, "encryption_aes_cbc192")

    @property
    @pulumi.getter(name="encryptionAesCbc256")
    def encryption_aes_cbc256(self) -> pulumi.Output[Optional[bool]]:
        """
        AES-CBC-256
        """
        return pulumi.get(self, "encryption_aes_cbc256")

    @property
    @pulumi.getter(name="encryptionAesGcm128")
    def encryption_aes_gcm128(self) -> pulumi.Output[Optional[bool]]:
        """
        Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm128")

    @property
    @pulumi.getter(name="encryptionAesGcm256")
    def encryption_aes_gcm256(self) -> pulumi.Output[Optional[bool]]:
        """
        Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
        """
        return pulumi.get(self, "encryption_aes_gcm256")

    @property
    @pulumi.getter(name="encryptionEn3des")
    def encryption_en3des(self) -> pulumi.Output[Optional[bool]]:
        """
        3DES
        """
        return pulumi.get(self, "encryption_en3des")

    @property
    @pulumi.getter(name="groupFifteen")
    def group_fifteen(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 3072 MODP
        """
        return pulumi.get(self, "group_fifteen")

    @property
    @pulumi.getter(name="groupFourteen")
    def group_fourteen(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 2048 MODP
        """
        return pulumi.get(self, "group_fourteen")

    @property
    @pulumi.getter(name="groupNineteen")
    def group_nineteen(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 256 ECP
        """
        return pulumi.get(self, "group_nineteen")

    @property
    @pulumi.getter(name="groupOne")
    def group_one(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 768 MODP
        """
        return pulumi.get(self, "group_one")

    @property
    @pulumi.getter(name="groupSixteen")
    def group_sixteen(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 4096 MODP
        """
        return pulumi.get(self, "group_sixteen")

    @property
    @pulumi.getter(name="groupTwenty")
    def group_twenty(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 384 ECP
        """
        return pulumi.get(self, "group_twenty")

    @property
    @pulumi.getter(name="groupTwentyFour")
    def group_twenty_four(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 2048 (256 subgroup) MODP
        """
        return pulumi.get(self, "group_twenty_four")

    @property
    @pulumi.getter(name="groupTwentyOne")
    def group_twenty_one(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 521 ECP
        """
        return pulumi.get(self, "group_twenty_one")

    @property
    @pulumi.getter(name="groupTwo")
    def group_two(self) -> pulumi.Output[Optional[bool]]:
        """
        DH 1024 MODP
        """
        return pulumi.get(self, "group_two")

    @property
    @pulumi.getter(name="integrityMd5")
    def integrity_md5(self) -> pulumi.Output[Optional[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "integrity_md5")

    @property
    @pulumi.getter(name="integritySha1")
    def integrity_sha1(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "integrity_sha1")

    @property
    @pulumi.getter(name="integritySha256")
    def integrity_sha256(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "integrity_sha256")

    @property
    @pulumi.getter(name="integritySha384")
    def integrity_sha384(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "integrity_sha384")

    @property
    @pulumi.getter(name="integritySha512")
    def integrity_sha512(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "integrity_sha512")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="prfMd5")
    def prf_md5(self) -> pulumi.Output[Optional[bool]]:
        """
        Message Digest 5
        """
        return pulumi.get(self, "prf_md5")

    @property
    @pulumi.getter(name="prfSha1")
    def prf_sha1(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard
        """
        return pulumi.get(self, "prf_sha1")

    @property
    @pulumi.getter(name="prfSha256")
    def prf_sha256(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (256 bit)
        """
        return pulumi.get(self, "prf_sha256")

    @property
    @pulumi.getter(name="prfSha384")
    def prf_sha384(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (384 bit)
        """
        return pulumi.get(self, "prf_sha384")

    @property
    @pulumi.getter(name="prfSha512")
    def prf_sha512(self) -> pulumi.Output[Optional[bool]]:
        """
        Secure Hash Standard 2 (512 bit)
        """
        return pulumi.get(self, "prf_sha512")

