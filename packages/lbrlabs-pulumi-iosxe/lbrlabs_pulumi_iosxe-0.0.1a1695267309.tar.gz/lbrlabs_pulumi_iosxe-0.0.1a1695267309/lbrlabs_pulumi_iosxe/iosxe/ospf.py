# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OspfArgs', 'Ospf']

@pulumi.input_type
class OspfArgs:
    def __init__(__self__, *,
                 process_id: pulumi.Input[int],
                 areas: Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]] = None,
                 bfd_all_interfaces: Optional[pulumi.Input[bool]] = None,
                 default_information_originate: Optional[pulumi.Input[bool]] = None,
                 default_information_originate_always: Optional[pulumi.Input[bool]] = None,
                 default_metric: Optional[pulumi.Input[int]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 distance: Optional[pulumi.Input[int]] = None,
                 domain_tag: Optional[pulumi.Input[int]] = None,
                 mpls_ldp_autoconfig: Optional[pulumi.Input[bool]] = None,
                 mpls_ldp_sync: Optional[pulumi.Input[bool]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]] = None,
                 passive_interface_default: Optional[pulumi.Input[bool]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 router_id: Optional[pulumi.Input[str]] = None,
                 shutdown: Optional[pulumi.Input[bool]] = None,
                 summary_addresses: Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]] = None):
        """
        The set of arguments for constructing a Ospf resource.
        :param pulumi.Input[int] process_id: Process ID - Range: `1`-`65535`
        :param pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]] areas: OSPF area parameters
        :param pulumi.Input[bool] bfd_all_interfaces: Enable BFD on all interfaces
        :param pulumi.Input[bool] default_information_originate: Distribute a default route
        :param pulumi.Input[bool] default_information_originate_always: Always advertise default route
        :param pulumi.Input[int] default_metric: Set metric of redistributed routes - Range: `1`-`16777214`
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] distance: Administrative distance - Range: `1`-`255`
        :param pulumi.Input[int] domain_tag: OSPF domain-tag - Range: `1`-`4294967295`
        :param pulumi.Input[bool] mpls_ldp_autoconfig: Configure LDP automatic configuration
        :param pulumi.Input[bool] mpls_ldp_sync: Configure LDP-IGP Synchronization
        :param pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]] neighbors: Specify a neighbor router
        :param pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]] networks: Enable routing on an IP network
        :param pulumi.Input[bool] passive_interface_default: Suppress routing updates on all interfaces
        :param pulumi.Input[int] priority: OSPF topology priority - Range: `0`-`127`
        :param pulumi.Input[str] router_id: Override configured router identifier (peers will reset)
        :param pulumi.Input[bool] shutdown: Shutdown the OSPF protocol under the current instance
        :param pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]] summary_addresses: Configure IP address summaries
        """
        pulumi.set(__self__, "process_id", process_id)
        if areas is not None:
            pulumi.set(__self__, "areas", areas)
        if bfd_all_interfaces is not None:
            pulumi.set(__self__, "bfd_all_interfaces", bfd_all_interfaces)
        if default_information_originate is not None:
            pulumi.set(__self__, "default_information_originate", default_information_originate)
        if default_information_originate_always is not None:
            pulumi.set(__self__, "default_information_originate_always", default_information_originate_always)
        if default_metric is not None:
            pulumi.set(__self__, "default_metric", default_metric)
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if distance is not None:
            pulumi.set(__self__, "distance", distance)
        if domain_tag is not None:
            pulumi.set(__self__, "domain_tag", domain_tag)
        if mpls_ldp_autoconfig is not None:
            pulumi.set(__self__, "mpls_ldp_autoconfig", mpls_ldp_autoconfig)
        if mpls_ldp_sync is not None:
            pulumi.set(__self__, "mpls_ldp_sync", mpls_ldp_sync)
        if neighbors is not None:
            pulumi.set(__self__, "neighbors", neighbors)
        if networks is not None:
            pulumi.set(__self__, "networks", networks)
        if passive_interface_default is not None:
            pulumi.set(__self__, "passive_interface_default", passive_interface_default)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if router_id is not None:
            pulumi.set(__self__, "router_id", router_id)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if summary_addresses is not None:
            pulumi.set(__self__, "summary_addresses", summary_addresses)

    @property
    @pulumi.getter(name="processId")
    def process_id(self) -> pulumi.Input[int]:
        """
        Process ID - Range: `1`-`65535`
        """
        return pulumi.get(self, "process_id")

    @process_id.setter
    def process_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "process_id", value)

    @property
    @pulumi.getter
    def areas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]]:
        """
        OSPF area parameters
        """
        return pulumi.get(self, "areas")

    @areas.setter
    def areas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]]):
        pulumi.set(self, "areas", value)

    @property
    @pulumi.getter(name="bfdAllInterfaces")
    def bfd_all_interfaces(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable BFD on all interfaces
        """
        return pulumi.get(self, "bfd_all_interfaces")

    @bfd_all_interfaces.setter
    def bfd_all_interfaces(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bfd_all_interfaces", value)

    @property
    @pulumi.getter(name="defaultInformationOriginate")
    def default_information_originate(self) -> Optional[pulumi.Input[bool]]:
        """
        Distribute a default route
        """
        return pulumi.get(self, "default_information_originate")

    @default_information_originate.setter
    def default_information_originate(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default_information_originate", value)

    @property
    @pulumi.getter(name="defaultInformationOriginateAlways")
    def default_information_originate_always(self) -> Optional[pulumi.Input[bool]]:
        """
        Always advertise default route
        """
        return pulumi.get(self, "default_information_originate_always")

    @default_information_originate_always.setter
    def default_information_originate_always(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default_information_originate_always", value)

    @property
    @pulumi.getter(name="defaultMetric")
    def default_metric(self) -> Optional[pulumi.Input[int]]:
        """
        Set metric of redistributed routes - Range: `1`-`16777214`
        """
        return pulumi.get(self, "default_metric")

    @default_metric.setter
    def default_metric(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_metric", value)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def distance(self) -> Optional[pulumi.Input[int]]:
        """
        Administrative distance - Range: `1`-`255`
        """
        return pulumi.get(self, "distance")

    @distance.setter
    def distance(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "distance", value)

    @property
    @pulumi.getter(name="domainTag")
    def domain_tag(self) -> Optional[pulumi.Input[int]]:
        """
        OSPF domain-tag - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "domain_tag")

    @domain_tag.setter
    def domain_tag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "domain_tag", value)

    @property
    @pulumi.getter(name="mplsLdpAutoconfig")
    def mpls_ldp_autoconfig(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure LDP automatic configuration
        """
        return pulumi.get(self, "mpls_ldp_autoconfig")

    @mpls_ldp_autoconfig.setter
    def mpls_ldp_autoconfig(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mpls_ldp_autoconfig", value)

    @property
    @pulumi.getter(name="mplsLdpSync")
    def mpls_ldp_sync(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure LDP-IGP Synchronization
        """
        return pulumi.get(self, "mpls_ldp_sync")

    @mpls_ldp_sync.setter
    def mpls_ldp_sync(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mpls_ldp_sync", value)

    @property
    @pulumi.getter
    def neighbors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]]:
        """
        Specify a neighbor router
        """
        return pulumi.get(self, "neighbors")

    @neighbors.setter
    def neighbors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]]):
        pulumi.set(self, "neighbors", value)

    @property
    @pulumi.getter
    def networks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]]:
        """
        Enable routing on an IP network
        """
        return pulumi.get(self, "networks")

    @networks.setter
    def networks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]]):
        pulumi.set(self, "networks", value)

    @property
    @pulumi.getter(name="passiveInterfaceDefault")
    def passive_interface_default(self) -> Optional[pulumi.Input[bool]]:
        """
        Suppress routing updates on all interfaces
        """
        return pulumi.get(self, "passive_interface_default")

    @passive_interface_default.setter
    def passive_interface_default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "passive_interface_default", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        OSPF topology priority - Range: `0`-`127`
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="routerId")
    def router_id(self) -> Optional[pulumi.Input[str]]:
        """
        Override configured router identifier (peers will reset)
        """
        return pulumi.get(self, "router_id")

    @router_id.setter
    def router_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "router_id", value)

    @property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[bool]]:
        """
        Shutdown the OSPF protocol under the current instance
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "shutdown", value)

    @property
    @pulumi.getter(name="summaryAddresses")
    def summary_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]]:
        """
        Configure IP address summaries
        """
        return pulumi.get(self, "summary_addresses")

    @summary_addresses.setter
    def summary_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]]):
        pulumi.set(self, "summary_addresses", value)


@pulumi.input_type
class _OspfState:
    def __init__(__self__, *,
                 areas: Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]] = None,
                 bfd_all_interfaces: Optional[pulumi.Input[bool]] = None,
                 default_information_originate: Optional[pulumi.Input[bool]] = None,
                 default_information_originate_always: Optional[pulumi.Input[bool]] = None,
                 default_metric: Optional[pulumi.Input[int]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 distance: Optional[pulumi.Input[int]] = None,
                 domain_tag: Optional[pulumi.Input[int]] = None,
                 mpls_ldp_autoconfig: Optional[pulumi.Input[bool]] = None,
                 mpls_ldp_sync: Optional[pulumi.Input[bool]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]] = None,
                 passive_interface_default: Optional[pulumi.Input[bool]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 process_id: Optional[pulumi.Input[int]] = None,
                 router_id: Optional[pulumi.Input[str]] = None,
                 shutdown: Optional[pulumi.Input[bool]] = None,
                 summary_addresses: Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]] = None):
        """
        Input properties used for looking up and filtering Ospf resources.
        :param pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]] areas: OSPF area parameters
        :param pulumi.Input[bool] bfd_all_interfaces: Enable BFD on all interfaces
        :param pulumi.Input[bool] default_information_originate: Distribute a default route
        :param pulumi.Input[bool] default_information_originate_always: Always advertise default route
        :param pulumi.Input[int] default_metric: Set metric of redistributed routes - Range: `1`-`16777214`
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] distance: Administrative distance - Range: `1`-`255`
        :param pulumi.Input[int] domain_tag: OSPF domain-tag - Range: `1`-`4294967295`
        :param pulumi.Input[bool] mpls_ldp_autoconfig: Configure LDP automatic configuration
        :param pulumi.Input[bool] mpls_ldp_sync: Configure LDP-IGP Synchronization
        :param pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]] neighbors: Specify a neighbor router
        :param pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]] networks: Enable routing on an IP network
        :param pulumi.Input[bool] passive_interface_default: Suppress routing updates on all interfaces
        :param pulumi.Input[int] priority: OSPF topology priority - Range: `0`-`127`
        :param pulumi.Input[int] process_id: Process ID - Range: `1`-`65535`
        :param pulumi.Input[str] router_id: Override configured router identifier (peers will reset)
        :param pulumi.Input[bool] shutdown: Shutdown the OSPF protocol under the current instance
        :param pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]] summary_addresses: Configure IP address summaries
        """
        if areas is not None:
            pulumi.set(__self__, "areas", areas)
        if bfd_all_interfaces is not None:
            pulumi.set(__self__, "bfd_all_interfaces", bfd_all_interfaces)
        if default_information_originate is not None:
            pulumi.set(__self__, "default_information_originate", default_information_originate)
        if default_information_originate_always is not None:
            pulumi.set(__self__, "default_information_originate_always", default_information_originate_always)
        if default_metric is not None:
            pulumi.set(__self__, "default_metric", default_metric)
        if delete_mode is not None:
            pulumi.set(__self__, "delete_mode", delete_mode)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if distance is not None:
            pulumi.set(__self__, "distance", distance)
        if domain_tag is not None:
            pulumi.set(__self__, "domain_tag", domain_tag)
        if mpls_ldp_autoconfig is not None:
            pulumi.set(__self__, "mpls_ldp_autoconfig", mpls_ldp_autoconfig)
        if mpls_ldp_sync is not None:
            pulumi.set(__self__, "mpls_ldp_sync", mpls_ldp_sync)
        if neighbors is not None:
            pulumi.set(__self__, "neighbors", neighbors)
        if networks is not None:
            pulumi.set(__self__, "networks", networks)
        if passive_interface_default is not None:
            pulumi.set(__self__, "passive_interface_default", passive_interface_default)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)
        if process_id is not None:
            pulumi.set(__self__, "process_id", process_id)
        if router_id is not None:
            pulumi.set(__self__, "router_id", router_id)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if summary_addresses is not None:
            pulumi.set(__self__, "summary_addresses", summary_addresses)

    @property
    @pulumi.getter
    def areas(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]]:
        """
        OSPF area parameters
        """
        return pulumi.get(self, "areas")

    @areas.setter
    def areas(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfAreaArgs']]]]):
        pulumi.set(self, "areas", value)

    @property
    @pulumi.getter(name="bfdAllInterfaces")
    def bfd_all_interfaces(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable BFD on all interfaces
        """
        return pulumi.get(self, "bfd_all_interfaces")

    @bfd_all_interfaces.setter
    def bfd_all_interfaces(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "bfd_all_interfaces", value)

    @property
    @pulumi.getter(name="defaultInformationOriginate")
    def default_information_originate(self) -> Optional[pulumi.Input[bool]]:
        """
        Distribute a default route
        """
        return pulumi.get(self, "default_information_originate")

    @default_information_originate.setter
    def default_information_originate(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default_information_originate", value)

    @property
    @pulumi.getter(name="defaultInformationOriginateAlways")
    def default_information_originate_always(self) -> Optional[pulumi.Input[bool]]:
        """
        Always advertise default route
        """
        return pulumi.get(self, "default_information_originate_always")

    @default_information_originate_always.setter
    def default_information_originate_always(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default_information_originate_always", value)

    @property
    @pulumi.getter(name="defaultMetric")
    def default_metric(self) -> Optional[pulumi.Input[int]]:
        """
        Set metric of redistributed routes - Range: `1`-`16777214`
        """
        return pulumi.get(self, "default_metric")

    @default_metric.setter
    def default_metric(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "default_metric", value)

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @delete_mode.setter
    def delete_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_mode", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def distance(self) -> Optional[pulumi.Input[int]]:
        """
        Administrative distance - Range: `1`-`255`
        """
        return pulumi.get(self, "distance")

    @distance.setter
    def distance(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "distance", value)

    @property
    @pulumi.getter(name="domainTag")
    def domain_tag(self) -> Optional[pulumi.Input[int]]:
        """
        OSPF domain-tag - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "domain_tag")

    @domain_tag.setter
    def domain_tag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "domain_tag", value)

    @property
    @pulumi.getter(name="mplsLdpAutoconfig")
    def mpls_ldp_autoconfig(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure LDP automatic configuration
        """
        return pulumi.get(self, "mpls_ldp_autoconfig")

    @mpls_ldp_autoconfig.setter
    def mpls_ldp_autoconfig(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mpls_ldp_autoconfig", value)

    @property
    @pulumi.getter(name="mplsLdpSync")
    def mpls_ldp_sync(self) -> Optional[pulumi.Input[bool]]:
        """
        Configure LDP-IGP Synchronization
        """
        return pulumi.get(self, "mpls_ldp_sync")

    @mpls_ldp_sync.setter
    def mpls_ldp_sync(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mpls_ldp_sync", value)

    @property
    @pulumi.getter
    def neighbors(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]]:
        """
        Specify a neighbor router
        """
        return pulumi.get(self, "neighbors")

    @neighbors.setter
    def neighbors(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNeighborArgs']]]]):
        pulumi.set(self, "neighbors", value)

    @property
    @pulumi.getter
    def networks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]]:
        """
        Enable routing on an IP network
        """
        return pulumi.get(self, "networks")

    @networks.setter
    def networks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfNetworkArgs']]]]):
        pulumi.set(self, "networks", value)

    @property
    @pulumi.getter(name="passiveInterfaceDefault")
    def passive_interface_default(self) -> Optional[pulumi.Input[bool]]:
        """
        Suppress routing updates on all interfaces
        """
        return pulumi.get(self, "passive_interface_default")

    @passive_interface_default.setter
    def passive_interface_default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "passive_interface_default", value)

    @property
    @pulumi.getter
    def priority(self) -> Optional[pulumi.Input[int]]:
        """
        OSPF topology priority - Range: `0`-`127`
        """
        return pulumi.get(self, "priority")

    @priority.setter
    def priority(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "priority", value)

    @property
    @pulumi.getter(name="processId")
    def process_id(self) -> Optional[pulumi.Input[int]]:
        """
        Process ID - Range: `1`-`65535`
        """
        return pulumi.get(self, "process_id")

    @process_id.setter
    def process_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "process_id", value)

    @property
    @pulumi.getter(name="routerId")
    def router_id(self) -> Optional[pulumi.Input[str]]:
        """
        Override configured router identifier (peers will reset)
        """
        return pulumi.get(self, "router_id")

    @router_id.setter
    def router_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "router_id", value)

    @property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[bool]]:
        """
        Shutdown the OSPF protocol under the current instance
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "shutdown", value)

    @property
    @pulumi.getter(name="summaryAddresses")
    def summary_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]]:
        """
        Configure IP address summaries
        """
        return pulumi.get(self, "summary_addresses")

    @summary_addresses.setter
    def summary_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OspfSummaryAddressArgs']]]]):
        pulumi.set(self, "summary_addresses", value)


class Ospf(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 areas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfAreaArgs']]]]] = None,
                 bfd_all_interfaces: Optional[pulumi.Input[bool]] = None,
                 default_information_originate: Optional[pulumi.Input[bool]] = None,
                 default_information_originate_always: Optional[pulumi.Input[bool]] = None,
                 default_metric: Optional[pulumi.Input[int]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 distance: Optional[pulumi.Input[int]] = None,
                 domain_tag: Optional[pulumi.Input[int]] = None,
                 mpls_ldp_autoconfig: Optional[pulumi.Input[bool]] = None,
                 mpls_ldp_sync: Optional[pulumi.Input[bool]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNeighborArgs']]]]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNetworkArgs']]]]] = None,
                 passive_interface_default: Optional[pulumi.Input[bool]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 process_id: Optional[pulumi.Input[int]] = None,
                 router_id: Optional[pulumi.Input[str]] = None,
                 shutdown: Optional[pulumi.Input[bool]] = None,
                 summary_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfSummaryAddressArgs']]]]] = None,
                 __props__=None):
        """
        Create a Ospf resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfAreaArgs']]]] areas: OSPF area parameters
        :param pulumi.Input[bool] bfd_all_interfaces: Enable BFD on all interfaces
        :param pulumi.Input[bool] default_information_originate: Distribute a default route
        :param pulumi.Input[bool] default_information_originate_always: Always advertise default route
        :param pulumi.Input[int] default_metric: Set metric of redistributed routes - Range: `1`-`16777214`
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] distance: Administrative distance - Range: `1`-`255`
        :param pulumi.Input[int] domain_tag: OSPF domain-tag - Range: `1`-`4294967295`
        :param pulumi.Input[bool] mpls_ldp_autoconfig: Configure LDP automatic configuration
        :param pulumi.Input[bool] mpls_ldp_sync: Configure LDP-IGP Synchronization
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNeighborArgs']]]] neighbors: Specify a neighbor router
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNetworkArgs']]]] networks: Enable routing on an IP network
        :param pulumi.Input[bool] passive_interface_default: Suppress routing updates on all interfaces
        :param pulumi.Input[int] priority: OSPF topology priority - Range: `0`-`127`
        :param pulumi.Input[int] process_id: Process ID - Range: `1`-`65535`
        :param pulumi.Input[str] router_id: Override configured router identifier (peers will reset)
        :param pulumi.Input[bool] shutdown: Shutdown the OSPF protocol under the current instance
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfSummaryAddressArgs']]]] summary_addresses: Configure IP address summaries
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OspfArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Ospf resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OspfArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OspfArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 areas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfAreaArgs']]]]] = None,
                 bfd_all_interfaces: Optional[pulumi.Input[bool]] = None,
                 default_information_originate: Optional[pulumi.Input[bool]] = None,
                 default_information_originate_always: Optional[pulumi.Input[bool]] = None,
                 default_metric: Optional[pulumi.Input[int]] = None,
                 delete_mode: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 distance: Optional[pulumi.Input[int]] = None,
                 domain_tag: Optional[pulumi.Input[int]] = None,
                 mpls_ldp_autoconfig: Optional[pulumi.Input[bool]] = None,
                 mpls_ldp_sync: Optional[pulumi.Input[bool]] = None,
                 neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNeighborArgs']]]]] = None,
                 networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNetworkArgs']]]]] = None,
                 passive_interface_default: Optional[pulumi.Input[bool]] = None,
                 priority: Optional[pulumi.Input[int]] = None,
                 process_id: Optional[pulumi.Input[int]] = None,
                 router_id: Optional[pulumi.Input[str]] = None,
                 shutdown: Optional[pulumi.Input[bool]] = None,
                 summary_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfSummaryAddressArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OspfArgs.__new__(OspfArgs)

            __props__.__dict__["areas"] = areas
            __props__.__dict__["bfd_all_interfaces"] = bfd_all_interfaces
            __props__.__dict__["default_information_originate"] = default_information_originate
            __props__.__dict__["default_information_originate_always"] = default_information_originate_always
            __props__.__dict__["default_metric"] = default_metric
            __props__.__dict__["delete_mode"] = delete_mode
            __props__.__dict__["device"] = device
            __props__.__dict__["distance"] = distance
            __props__.__dict__["domain_tag"] = domain_tag
            __props__.__dict__["mpls_ldp_autoconfig"] = mpls_ldp_autoconfig
            __props__.__dict__["mpls_ldp_sync"] = mpls_ldp_sync
            __props__.__dict__["neighbors"] = neighbors
            __props__.__dict__["networks"] = networks
            __props__.__dict__["passive_interface_default"] = passive_interface_default
            __props__.__dict__["priority"] = priority
            if process_id is None and not opts.urn:
                raise TypeError("Missing required property 'process_id'")
            __props__.__dict__["process_id"] = process_id
            __props__.__dict__["router_id"] = router_id
            __props__.__dict__["shutdown"] = shutdown
            __props__.__dict__["summary_addresses"] = summary_addresses
        super(Ospf, __self__).__init__(
            'iosxe:iosxe/ospf:Ospf',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            areas: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfAreaArgs']]]]] = None,
            bfd_all_interfaces: Optional[pulumi.Input[bool]] = None,
            default_information_originate: Optional[pulumi.Input[bool]] = None,
            default_information_originate_always: Optional[pulumi.Input[bool]] = None,
            default_metric: Optional[pulumi.Input[int]] = None,
            delete_mode: Optional[pulumi.Input[str]] = None,
            device: Optional[pulumi.Input[str]] = None,
            distance: Optional[pulumi.Input[int]] = None,
            domain_tag: Optional[pulumi.Input[int]] = None,
            mpls_ldp_autoconfig: Optional[pulumi.Input[bool]] = None,
            mpls_ldp_sync: Optional[pulumi.Input[bool]] = None,
            neighbors: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNeighborArgs']]]]] = None,
            networks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNetworkArgs']]]]] = None,
            passive_interface_default: Optional[pulumi.Input[bool]] = None,
            priority: Optional[pulumi.Input[int]] = None,
            process_id: Optional[pulumi.Input[int]] = None,
            router_id: Optional[pulumi.Input[str]] = None,
            shutdown: Optional[pulumi.Input[bool]] = None,
            summary_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfSummaryAddressArgs']]]]] = None) -> 'Ospf':
        """
        Get an existing Ospf resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfAreaArgs']]]] areas: OSPF area parameters
        :param pulumi.Input[bool] bfd_all_interfaces: Enable BFD on all interfaces
        :param pulumi.Input[bool] default_information_originate: Distribute a default route
        :param pulumi.Input[bool] default_information_originate_always: Always advertise default route
        :param pulumi.Input[int] default_metric: Set metric of redistributed routes - Range: `1`-`16777214`
        :param pulumi.Input[str] delete_mode: Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
               managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
               Default value is `all`. - Choices: `all`, `attributes`
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[int] distance: Administrative distance - Range: `1`-`255`
        :param pulumi.Input[int] domain_tag: OSPF domain-tag - Range: `1`-`4294967295`
        :param pulumi.Input[bool] mpls_ldp_autoconfig: Configure LDP automatic configuration
        :param pulumi.Input[bool] mpls_ldp_sync: Configure LDP-IGP Synchronization
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNeighborArgs']]]] neighbors: Specify a neighbor router
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfNetworkArgs']]]] networks: Enable routing on an IP network
        :param pulumi.Input[bool] passive_interface_default: Suppress routing updates on all interfaces
        :param pulumi.Input[int] priority: OSPF topology priority - Range: `0`-`127`
        :param pulumi.Input[int] process_id: Process ID - Range: `1`-`65535`
        :param pulumi.Input[str] router_id: Override configured router identifier (peers will reset)
        :param pulumi.Input[bool] shutdown: Shutdown the OSPF protocol under the current instance
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OspfSummaryAddressArgs']]]] summary_addresses: Configure IP address summaries
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OspfState.__new__(_OspfState)

        __props__.__dict__["areas"] = areas
        __props__.__dict__["bfd_all_interfaces"] = bfd_all_interfaces
        __props__.__dict__["default_information_originate"] = default_information_originate
        __props__.__dict__["default_information_originate_always"] = default_information_originate_always
        __props__.__dict__["default_metric"] = default_metric
        __props__.__dict__["delete_mode"] = delete_mode
        __props__.__dict__["device"] = device
        __props__.__dict__["distance"] = distance
        __props__.__dict__["domain_tag"] = domain_tag
        __props__.__dict__["mpls_ldp_autoconfig"] = mpls_ldp_autoconfig
        __props__.__dict__["mpls_ldp_sync"] = mpls_ldp_sync
        __props__.__dict__["neighbors"] = neighbors
        __props__.__dict__["networks"] = networks
        __props__.__dict__["passive_interface_default"] = passive_interface_default
        __props__.__dict__["priority"] = priority
        __props__.__dict__["process_id"] = process_id
        __props__.__dict__["router_id"] = router_id
        __props__.__dict__["shutdown"] = shutdown
        __props__.__dict__["summary_addresses"] = summary_addresses
        return Ospf(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def areas(self) -> pulumi.Output[Optional[Sequence['outputs.OspfArea']]]:
        """
        OSPF area parameters
        """
        return pulumi.get(self, "areas")

    @property
    @pulumi.getter(name="bfdAllInterfaces")
    def bfd_all_interfaces(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable BFD on all interfaces
        """
        return pulumi.get(self, "bfd_all_interfaces")

    @property
    @pulumi.getter(name="defaultInformationOriginate")
    def default_information_originate(self) -> pulumi.Output[Optional[bool]]:
        """
        Distribute a default route
        """
        return pulumi.get(self, "default_information_originate")

    @property
    @pulumi.getter(name="defaultInformationOriginateAlways")
    def default_information_originate_always(self) -> pulumi.Output[Optional[bool]]:
        """
        Always advertise default route
        """
        return pulumi.get(self, "default_information_originate_always")

    @property
    @pulumi.getter(name="defaultMetric")
    def default_metric(self) -> pulumi.Output[Optional[int]]:
        """
        Set metric of redistributed routes - Range: `1`-`16777214`
        """
        return pulumi.get(self, "default_metric")

    @property
    @pulumi.getter(name="deleteMode")
    def delete_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        Default value is `all`. - Choices: `all`, `attributes`
        """
        return pulumi.get(self, "delete_mode")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def distance(self) -> pulumi.Output[Optional[int]]:
        """
        Administrative distance - Range: `1`-`255`
        """
        return pulumi.get(self, "distance")

    @property
    @pulumi.getter(name="domainTag")
    def domain_tag(self) -> pulumi.Output[Optional[int]]:
        """
        OSPF domain-tag - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "domain_tag")

    @property
    @pulumi.getter(name="mplsLdpAutoconfig")
    def mpls_ldp_autoconfig(self) -> pulumi.Output[Optional[bool]]:
        """
        Configure LDP automatic configuration
        """
        return pulumi.get(self, "mpls_ldp_autoconfig")

    @property
    @pulumi.getter(name="mplsLdpSync")
    def mpls_ldp_sync(self) -> pulumi.Output[Optional[bool]]:
        """
        Configure LDP-IGP Synchronization
        """
        return pulumi.get(self, "mpls_ldp_sync")

    @property
    @pulumi.getter
    def neighbors(self) -> pulumi.Output[Optional[Sequence['outputs.OspfNeighbor']]]:
        """
        Specify a neighbor router
        """
        return pulumi.get(self, "neighbors")

    @property
    @pulumi.getter
    def networks(self) -> pulumi.Output[Optional[Sequence['outputs.OspfNetwork']]]:
        """
        Enable routing on an IP network
        """
        return pulumi.get(self, "networks")

    @property
    @pulumi.getter(name="passiveInterfaceDefault")
    def passive_interface_default(self) -> pulumi.Output[Optional[bool]]:
        """
        Suppress routing updates on all interfaces
        """
        return pulumi.get(self, "passive_interface_default")

    @property
    @pulumi.getter
    def priority(self) -> pulumi.Output[Optional[int]]:
        """
        OSPF topology priority - Range: `0`-`127`
        """
        return pulumi.get(self, "priority")

    @property
    @pulumi.getter(name="processId")
    def process_id(self) -> pulumi.Output[int]:
        """
        Process ID - Range: `1`-`65535`
        """
        return pulumi.get(self, "process_id")

    @property
    @pulumi.getter(name="routerId")
    def router_id(self) -> pulumi.Output[Optional[str]]:
        """
        Override configured router identifier (peers will reset)
        """
        return pulumi.get(self, "router_id")

    @property
    @pulumi.getter
    def shutdown(self) -> pulumi.Output[Optional[bool]]:
        """
        Shutdown the OSPF protocol under the current instance
        """
        return pulumi.get(self, "shutdown")

    @property
    @pulumi.getter(name="summaryAddresses")
    def summary_addresses(self) -> pulumi.Output[Optional[Sequence['outputs.OspfSummaryAddress']]]:
        """
        Configure IP address summaries
        """
        return pulumi.get(self, "summary_addresses")

