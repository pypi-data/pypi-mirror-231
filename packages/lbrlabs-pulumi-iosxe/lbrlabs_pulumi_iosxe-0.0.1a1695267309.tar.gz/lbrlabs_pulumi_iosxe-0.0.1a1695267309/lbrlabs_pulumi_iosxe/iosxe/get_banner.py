# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetBannerResult',
    'AwaitableGetBannerResult',
    'get_banner',
    'get_banner_output',
]

@pulumi.output_type
class GetBannerResult:
    """
    A collection of values returned by getBanner.
    """
    def __init__(__self__, device=None, exec_banner=None, id=None, login_banner=None, motd_banner=None, prompt_timeout_banner=None):
        if device and not isinstance(device, str):
            raise TypeError("Expected argument 'device' to be a str")
        pulumi.set(__self__, "device", device)
        if exec_banner and not isinstance(exec_banner, str):
            raise TypeError("Expected argument 'exec_banner' to be a str")
        pulumi.set(__self__, "exec_banner", exec_banner)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if login_banner and not isinstance(login_banner, str):
            raise TypeError("Expected argument 'login_banner' to be a str")
        pulumi.set(__self__, "login_banner", login_banner)
        if motd_banner and not isinstance(motd_banner, str):
            raise TypeError("Expected argument 'motd_banner' to be a str")
        pulumi.set(__self__, "motd_banner", motd_banner)
        if prompt_timeout_banner and not isinstance(prompt_timeout_banner, str):
            raise TypeError("Expected argument 'prompt_timeout_banner' to be a str")
        pulumi.set(__self__, "prompt_timeout_banner", prompt_timeout_banner)

    @property
    @pulumi.getter
    def device(self) -> Optional[str]:
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="execBanner")
    def exec_banner(self) -> str:
        return pulumi.get(self, "exec_banner")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loginBanner")
    def login_banner(self) -> str:
        return pulumi.get(self, "login_banner")

    @property
    @pulumi.getter(name="motdBanner")
    def motd_banner(self) -> str:
        return pulumi.get(self, "motd_banner")

    @property
    @pulumi.getter(name="promptTimeoutBanner")
    def prompt_timeout_banner(self) -> str:
        return pulumi.get(self, "prompt_timeout_banner")


class AwaitableGetBannerResult(GetBannerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBannerResult(
            device=self.device,
            exec_banner=self.exec_banner,
            id=self.id,
            login_banner=self.login_banner,
            motd_banner=self.motd_banner,
            prompt_timeout_banner=self.prompt_timeout_banner)


def get_banner(device: Optional[str] = None,
               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBannerResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['device'] = device
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('iosxe:iosxe/getBanner:getBanner', __args__, opts=opts, typ=GetBannerResult).value

    return AwaitableGetBannerResult(
        device=pulumi.get(__ret__, 'device'),
        exec_banner=pulumi.get(__ret__, 'exec_banner'),
        id=pulumi.get(__ret__, 'id'),
        login_banner=pulumi.get(__ret__, 'login_banner'),
        motd_banner=pulumi.get(__ret__, 'motd_banner'),
        prompt_timeout_banner=pulumi.get(__ret__, 'prompt_timeout_banner'))


@_utilities.lift_output_func(get_banner)
def get_banner_output(device: Optional[pulumi.Input[Optional[str]]] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBannerResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
