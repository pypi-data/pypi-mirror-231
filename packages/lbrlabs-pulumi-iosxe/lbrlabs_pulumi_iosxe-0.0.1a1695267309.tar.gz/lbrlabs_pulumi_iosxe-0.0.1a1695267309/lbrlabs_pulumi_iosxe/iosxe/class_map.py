# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ClassMapArgs', 'ClassMap']

@pulumi.input_type
class ClassMapArgs:
    def __init__(__self__, *,
                 prematch: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 match_activated_service_templates: Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]] = None,
                 match_authorization_status_authorized: Optional[pulumi.Input[bool]] = None,
                 match_authorization_status_unauthorized: Optional[pulumi.Input[bool]] = None,
                 match_authorizing_method_priority_greater_thans: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 match_method_dot1x: Optional[pulumi.Input[bool]] = None,
                 match_method_mab: Optional[pulumi.Input[bool]] = None,
                 match_result_type_aaa_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_agent_not_found: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_authoritative: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_method_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_mab_authoritative: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 subscriber: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ClassMap resource.
        :param pulumi.Input[str] prematch: Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        :param pulumi.Input[str] description: Class-Map description
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]] match_activated_service_templates: match name of service template activated on session
        :param pulumi.Input[bool] match_authorization_status_authorized: authorized
        :param pulumi.Input[bool] match_authorization_status_unauthorized: unauthorized
        :param pulumi.Input[Sequence[pulumi.Input[int]]] match_authorizing_method_priority_greater_thans: greater than
        :param pulumi.Input[bool] match_method_dot1x: dot1x
        :param pulumi.Input[bool] match_method_mab: mab
        :param pulumi.Input[bool] match_result_type_aaa_timeout: aaa timeout type
        :param pulumi.Input[bool] match_result_type_method_dot1x_agent_not_found: agent not found type
        :param pulumi.Input[bool] match_result_type_method_dot1x_authoritative: failure type
        :param pulumi.Input[bool] match_result_type_method_dot1x_method_timeout: method_timeout type
        :param pulumi.Input[bool] match_result_type_method_mab_authoritative: failure type
        :param pulumi.Input[str] name: name of the class map
        :param pulumi.Input[bool] subscriber: Domain name of the class map
        :param pulumi.Input[str] type: type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
               `stack`, `traffic`
        """
        pulumi.set(__self__, "prematch", prematch)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if match_activated_service_templates is not None:
            pulumi.set(__self__, "match_activated_service_templates", match_activated_service_templates)
        if match_authorization_status_authorized is not None:
            pulumi.set(__self__, "match_authorization_status_authorized", match_authorization_status_authorized)
        if match_authorization_status_unauthorized is not None:
            pulumi.set(__self__, "match_authorization_status_unauthorized", match_authorization_status_unauthorized)
        if match_authorizing_method_priority_greater_thans is not None:
            pulumi.set(__self__, "match_authorizing_method_priority_greater_thans", match_authorizing_method_priority_greater_thans)
        if match_method_dot1x is not None:
            pulumi.set(__self__, "match_method_dot1x", match_method_dot1x)
        if match_method_mab is not None:
            pulumi.set(__self__, "match_method_mab", match_method_mab)
        if match_result_type_aaa_timeout is not None:
            pulumi.set(__self__, "match_result_type_aaa_timeout", match_result_type_aaa_timeout)
        if match_result_type_method_dot1x_agent_not_found is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_agent_not_found", match_result_type_method_dot1x_agent_not_found)
        if match_result_type_method_dot1x_authoritative is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_authoritative", match_result_type_method_dot1x_authoritative)
        if match_result_type_method_dot1x_method_timeout is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_method_timeout", match_result_type_method_dot1x_method_timeout)
        if match_result_type_method_mab_authoritative is not None:
            pulumi.set(__self__, "match_result_type_method_mab_authoritative", match_result_type_method_mab_authoritative)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if subscriber is not None:
            pulumi.set(__self__, "subscriber", subscriber)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def prematch(self) -> pulumi.Input[str]:
        """
        Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        """
        return pulumi.get(self, "prematch")

    @prematch.setter
    def prematch(self, value: pulumi.Input[str]):
        pulumi.set(self, "prematch", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Class-Map description
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="matchActivatedServiceTemplates")
    def match_activated_service_templates(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]]:
        """
        match name of service template activated on session
        """
        return pulumi.get(self, "match_activated_service_templates")

    @match_activated_service_templates.setter
    def match_activated_service_templates(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]]):
        pulumi.set(self, "match_activated_service_templates", value)

    @property
    @pulumi.getter(name="matchAuthorizationStatusAuthorized")
    def match_authorization_status_authorized(self) -> Optional[pulumi.Input[bool]]:
        """
        authorized
        """
        return pulumi.get(self, "match_authorization_status_authorized")

    @match_authorization_status_authorized.setter
    def match_authorization_status_authorized(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_authorization_status_authorized", value)

    @property
    @pulumi.getter(name="matchAuthorizationStatusUnauthorized")
    def match_authorization_status_unauthorized(self) -> Optional[pulumi.Input[bool]]:
        """
        unauthorized
        """
        return pulumi.get(self, "match_authorization_status_unauthorized")

    @match_authorization_status_unauthorized.setter
    def match_authorization_status_unauthorized(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_authorization_status_unauthorized", value)

    @property
    @pulumi.getter(name="matchAuthorizingMethodPriorityGreaterThans")
    def match_authorizing_method_priority_greater_thans(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]:
        """
        greater than
        """
        return pulumi.get(self, "match_authorizing_method_priority_greater_thans")

    @match_authorizing_method_priority_greater_thans.setter
    def match_authorizing_method_priority_greater_thans(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]):
        pulumi.set(self, "match_authorizing_method_priority_greater_thans", value)

    @property
    @pulumi.getter(name="matchMethodDot1x")
    def match_method_dot1x(self) -> Optional[pulumi.Input[bool]]:
        """
        dot1x
        """
        return pulumi.get(self, "match_method_dot1x")

    @match_method_dot1x.setter
    def match_method_dot1x(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_method_dot1x", value)

    @property
    @pulumi.getter(name="matchMethodMab")
    def match_method_mab(self) -> Optional[pulumi.Input[bool]]:
        """
        mab
        """
        return pulumi.get(self, "match_method_mab")

    @match_method_mab.setter
    def match_method_mab(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_method_mab", value)

    @property
    @pulumi.getter(name="matchResultTypeAaaTimeout")
    def match_result_type_aaa_timeout(self) -> Optional[pulumi.Input[bool]]:
        """
        aaa timeout type
        """
        return pulumi.get(self, "match_result_type_aaa_timeout")

    @match_result_type_aaa_timeout.setter
    def match_result_type_aaa_timeout(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_aaa_timeout", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAgentNotFound")
    def match_result_type_method_dot1x_agent_not_found(self) -> Optional[pulumi.Input[bool]]:
        """
        agent not found type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_agent_not_found")

    @match_result_type_method_dot1x_agent_not_found.setter
    def match_result_type_method_dot1x_agent_not_found(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_agent_not_found", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAuthoritative")
    def match_result_type_method_dot1x_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_authoritative")

    @match_result_type_method_dot1x_authoritative.setter
    def match_result_type_method_dot1x_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_authoritative", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xMethodTimeout")
    def match_result_type_method_dot1x_method_timeout(self) -> Optional[pulumi.Input[bool]]:
        """
        method_timeout type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_method_timeout")

    @match_result_type_method_dot1x_method_timeout.setter
    def match_result_type_method_dot1x_method_timeout(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_method_timeout", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodMabAuthoritative")
    def match_result_type_method_mab_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_mab_authoritative")

    @match_result_type_method_mab_authoritative.setter
    def match_result_type_method_mab_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_mab_authoritative", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        name of the class map
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def subscriber(self) -> Optional[pulumi.Input[bool]]:
        """
        Domain name of the class map
        """
        return pulumi.get(self, "subscriber")

    @subscriber.setter
    def subscriber(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "subscriber", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        `stack`, `traffic`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class _ClassMapState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 match_activated_service_templates: Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]] = None,
                 match_authorization_status_authorized: Optional[pulumi.Input[bool]] = None,
                 match_authorization_status_unauthorized: Optional[pulumi.Input[bool]] = None,
                 match_authorizing_method_priority_greater_thans: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 match_method_dot1x: Optional[pulumi.Input[bool]] = None,
                 match_method_mab: Optional[pulumi.Input[bool]] = None,
                 match_result_type_aaa_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_agent_not_found: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_authoritative: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_method_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_mab_authoritative: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prematch: Optional[pulumi.Input[str]] = None,
                 subscriber: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ClassMap resources.
        :param pulumi.Input[str] description: Class-Map description
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]] match_activated_service_templates: match name of service template activated on session
        :param pulumi.Input[bool] match_authorization_status_authorized: authorized
        :param pulumi.Input[bool] match_authorization_status_unauthorized: unauthorized
        :param pulumi.Input[Sequence[pulumi.Input[int]]] match_authorizing_method_priority_greater_thans: greater than
        :param pulumi.Input[bool] match_method_dot1x: dot1x
        :param pulumi.Input[bool] match_method_mab: mab
        :param pulumi.Input[bool] match_result_type_aaa_timeout: aaa timeout type
        :param pulumi.Input[bool] match_result_type_method_dot1x_agent_not_found: agent not found type
        :param pulumi.Input[bool] match_result_type_method_dot1x_authoritative: failure type
        :param pulumi.Input[bool] match_result_type_method_dot1x_method_timeout: method_timeout type
        :param pulumi.Input[bool] match_result_type_method_mab_authoritative: failure type
        :param pulumi.Input[str] name: name of the class map
        :param pulumi.Input[str] prematch: Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        :param pulumi.Input[bool] subscriber: Domain name of the class map
        :param pulumi.Input[str] type: type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
               `stack`, `traffic`
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if match_activated_service_templates is not None:
            pulumi.set(__self__, "match_activated_service_templates", match_activated_service_templates)
        if match_authorization_status_authorized is not None:
            pulumi.set(__self__, "match_authorization_status_authorized", match_authorization_status_authorized)
        if match_authorization_status_unauthorized is not None:
            pulumi.set(__self__, "match_authorization_status_unauthorized", match_authorization_status_unauthorized)
        if match_authorizing_method_priority_greater_thans is not None:
            pulumi.set(__self__, "match_authorizing_method_priority_greater_thans", match_authorizing_method_priority_greater_thans)
        if match_method_dot1x is not None:
            pulumi.set(__self__, "match_method_dot1x", match_method_dot1x)
        if match_method_mab is not None:
            pulumi.set(__self__, "match_method_mab", match_method_mab)
        if match_result_type_aaa_timeout is not None:
            pulumi.set(__self__, "match_result_type_aaa_timeout", match_result_type_aaa_timeout)
        if match_result_type_method_dot1x_agent_not_found is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_agent_not_found", match_result_type_method_dot1x_agent_not_found)
        if match_result_type_method_dot1x_authoritative is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_authoritative", match_result_type_method_dot1x_authoritative)
        if match_result_type_method_dot1x_method_timeout is not None:
            pulumi.set(__self__, "match_result_type_method_dot1x_method_timeout", match_result_type_method_dot1x_method_timeout)
        if match_result_type_method_mab_authoritative is not None:
            pulumi.set(__self__, "match_result_type_method_mab_authoritative", match_result_type_method_mab_authoritative)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if prematch is not None:
            pulumi.set(__self__, "prematch", prematch)
        if subscriber is not None:
            pulumi.set(__self__, "subscriber", subscriber)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Class-Map description
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter(name="matchActivatedServiceTemplates")
    def match_activated_service_templates(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]]:
        """
        match name of service template activated on session
        """
        return pulumi.get(self, "match_activated_service_templates")

    @match_activated_service_templates.setter
    def match_activated_service_templates(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ClassMapMatchActivatedServiceTemplateArgs']]]]):
        pulumi.set(self, "match_activated_service_templates", value)

    @property
    @pulumi.getter(name="matchAuthorizationStatusAuthorized")
    def match_authorization_status_authorized(self) -> Optional[pulumi.Input[bool]]:
        """
        authorized
        """
        return pulumi.get(self, "match_authorization_status_authorized")

    @match_authorization_status_authorized.setter
    def match_authorization_status_authorized(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_authorization_status_authorized", value)

    @property
    @pulumi.getter(name="matchAuthorizationStatusUnauthorized")
    def match_authorization_status_unauthorized(self) -> Optional[pulumi.Input[bool]]:
        """
        unauthorized
        """
        return pulumi.get(self, "match_authorization_status_unauthorized")

    @match_authorization_status_unauthorized.setter
    def match_authorization_status_unauthorized(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_authorization_status_unauthorized", value)

    @property
    @pulumi.getter(name="matchAuthorizingMethodPriorityGreaterThans")
    def match_authorizing_method_priority_greater_thans(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]:
        """
        greater than
        """
        return pulumi.get(self, "match_authorizing_method_priority_greater_thans")

    @match_authorizing_method_priority_greater_thans.setter
    def match_authorizing_method_priority_greater_thans(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]):
        pulumi.set(self, "match_authorizing_method_priority_greater_thans", value)

    @property
    @pulumi.getter(name="matchMethodDot1x")
    def match_method_dot1x(self) -> Optional[pulumi.Input[bool]]:
        """
        dot1x
        """
        return pulumi.get(self, "match_method_dot1x")

    @match_method_dot1x.setter
    def match_method_dot1x(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_method_dot1x", value)

    @property
    @pulumi.getter(name="matchMethodMab")
    def match_method_mab(self) -> Optional[pulumi.Input[bool]]:
        """
        mab
        """
        return pulumi.get(self, "match_method_mab")

    @match_method_mab.setter
    def match_method_mab(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_method_mab", value)

    @property
    @pulumi.getter(name="matchResultTypeAaaTimeout")
    def match_result_type_aaa_timeout(self) -> Optional[pulumi.Input[bool]]:
        """
        aaa timeout type
        """
        return pulumi.get(self, "match_result_type_aaa_timeout")

    @match_result_type_aaa_timeout.setter
    def match_result_type_aaa_timeout(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_aaa_timeout", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAgentNotFound")
    def match_result_type_method_dot1x_agent_not_found(self) -> Optional[pulumi.Input[bool]]:
        """
        agent not found type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_agent_not_found")

    @match_result_type_method_dot1x_agent_not_found.setter
    def match_result_type_method_dot1x_agent_not_found(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_agent_not_found", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAuthoritative")
    def match_result_type_method_dot1x_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_authoritative")

    @match_result_type_method_dot1x_authoritative.setter
    def match_result_type_method_dot1x_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_authoritative", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xMethodTimeout")
    def match_result_type_method_dot1x_method_timeout(self) -> Optional[pulumi.Input[bool]]:
        """
        method_timeout type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_method_timeout")

    @match_result_type_method_dot1x_method_timeout.setter
    def match_result_type_method_dot1x_method_timeout(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_dot1x_method_timeout", value)

    @property
    @pulumi.getter(name="matchResultTypeMethodMabAuthoritative")
    def match_result_type_method_mab_authoritative(self) -> Optional[pulumi.Input[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_mab_authoritative")

    @match_result_type_method_mab_authoritative.setter
    def match_result_type_method_mab_authoritative(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "match_result_type_method_mab_authoritative", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        name of the class map
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def prematch(self) -> Optional[pulumi.Input[str]]:
        """
        Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        """
        return pulumi.get(self, "prematch")

    @prematch.setter
    def prematch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "prematch", value)

    @property
    @pulumi.getter
    def subscriber(self) -> Optional[pulumi.Input[bool]]:
        """
        Domain name of the class map
        """
        return pulumi.get(self, "subscriber")

    @subscriber.setter
    def subscriber(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "subscriber", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        `stack`, `traffic`
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


class ClassMap(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 match_activated_service_templates: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ClassMapMatchActivatedServiceTemplateArgs']]]]] = None,
                 match_authorization_status_authorized: Optional[pulumi.Input[bool]] = None,
                 match_authorization_status_unauthorized: Optional[pulumi.Input[bool]] = None,
                 match_authorizing_method_priority_greater_thans: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 match_method_dot1x: Optional[pulumi.Input[bool]] = None,
                 match_method_mab: Optional[pulumi.Input[bool]] = None,
                 match_result_type_aaa_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_agent_not_found: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_authoritative: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_method_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_mab_authoritative: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prematch: Optional[pulumi.Input[str]] = None,
                 subscriber: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a ClassMap resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Class-Map description
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ClassMapMatchActivatedServiceTemplateArgs']]]] match_activated_service_templates: match name of service template activated on session
        :param pulumi.Input[bool] match_authorization_status_authorized: authorized
        :param pulumi.Input[bool] match_authorization_status_unauthorized: unauthorized
        :param pulumi.Input[Sequence[pulumi.Input[int]]] match_authorizing_method_priority_greater_thans: greater than
        :param pulumi.Input[bool] match_method_dot1x: dot1x
        :param pulumi.Input[bool] match_method_mab: mab
        :param pulumi.Input[bool] match_result_type_aaa_timeout: aaa timeout type
        :param pulumi.Input[bool] match_result_type_method_dot1x_agent_not_found: agent not found type
        :param pulumi.Input[bool] match_result_type_method_dot1x_authoritative: failure type
        :param pulumi.Input[bool] match_result_type_method_dot1x_method_timeout: method_timeout type
        :param pulumi.Input[bool] match_result_type_method_mab_authoritative: failure type
        :param pulumi.Input[str] name: name of the class map
        :param pulumi.Input[str] prematch: Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        :param pulumi.Input[bool] subscriber: Domain name of the class map
        :param pulumi.Input[str] type: type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
               `stack`, `traffic`
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ClassMapArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ClassMap resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ClassMapArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClassMapArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 device: Optional[pulumi.Input[str]] = None,
                 match_activated_service_templates: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ClassMapMatchActivatedServiceTemplateArgs']]]]] = None,
                 match_authorization_status_authorized: Optional[pulumi.Input[bool]] = None,
                 match_authorization_status_unauthorized: Optional[pulumi.Input[bool]] = None,
                 match_authorizing_method_priority_greater_thans: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 match_method_dot1x: Optional[pulumi.Input[bool]] = None,
                 match_method_mab: Optional[pulumi.Input[bool]] = None,
                 match_result_type_aaa_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_agent_not_found: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_authoritative: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_dot1x_method_timeout: Optional[pulumi.Input[bool]] = None,
                 match_result_type_method_mab_authoritative: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 prematch: Optional[pulumi.Input[str]] = None,
                 subscriber: Optional[pulumi.Input[bool]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClassMapArgs.__new__(ClassMapArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["device"] = device
            __props__.__dict__["match_activated_service_templates"] = match_activated_service_templates
            __props__.__dict__["match_authorization_status_authorized"] = match_authorization_status_authorized
            __props__.__dict__["match_authorization_status_unauthorized"] = match_authorization_status_unauthorized
            __props__.__dict__["match_authorizing_method_priority_greater_thans"] = match_authorizing_method_priority_greater_thans
            __props__.__dict__["match_method_dot1x"] = match_method_dot1x
            __props__.__dict__["match_method_mab"] = match_method_mab
            __props__.__dict__["match_result_type_aaa_timeout"] = match_result_type_aaa_timeout
            __props__.__dict__["match_result_type_method_dot1x_agent_not_found"] = match_result_type_method_dot1x_agent_not_found
            __props__.__dict__["match_result_type_method_dot1x_authoritative"] = match_result_type_method_dot1x_authoritative
            __props__.__dict__["match_result_type_method_dot1x_method_timeout"] = match_result_type_method_dot1x_method_timeout
            __props__.__dict__["match_result_type_method_mab_authoritative"] = match_result_type_method_mab_authoritative
            __props__.__dict__["name"] = name
            if prematch is None and not opts.urn:
                raise TypeError("Missing required property 'prematch'")
            __props__.__dict__["prematch"] = prematch
            __props__.__dict__["subscriber"] = subscriber
            __props__.__dict__["type"] = type
        super(ClassMap, __self__).__init__(
            'iosxe:iosxe/classMap:ClassMap',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            device: Optional[pulumi.Input[str]] = None,
            match_activated_service_templates: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ClassMapMatchActivatedServiceTemplateArgs']]]]] = None,
            match_authorization_status_authorized: Optional[pulumi.Input[bool]] = None,
            match_authorization_status_unauthorized: Optional[pulumi.Input[bool]] = None,
            match_authorizing_method_priority_greater_thans: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
            match_method_dot1x: Optional[pulumi.Input[bool]] = None,
            match_method_mab: Optional[pulumi.Input[bool]] = None,
            match_result_type_aaa_timeout: Optional[pulumi.Input[bool]] = None,
            match_result_type_method_dot1x_agent_not_found: Optional[pulumi.Input[bool]] = None,
            match_result_type_method_dot1x_authoritative: Optional[pulumi.Input[bool]] = None,
            match_result_type_method_dot1x_method_timeout: Optional[pulumi.Input[bool]] = None,
            match_result_type_method_mab_authoritative: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            prematch: Optional[pulumi.Input[str]] = None,
            subscriber: Optional[pulumi.Input[bool]] = None,
            type: Optional[pulumi.Input[str]] = None) -> 'ClassMap':
        """
        Get an existing ClassMap resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Class-Map description
        :param pulumi.Input[str] device: A device name from the provider configuration.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ClassMapMatchActivatedServiceTemplateArgs']]]] match_activated_service_templates: match name of service template activated on session
        :param pulumi.Input[bool] match_authorization_status_authorized: authorized
        :param pulumi.Input[bool] match_authorization_status_unauthorized: unauthorized
        :param pulumi.Input[Sequence[pulumi.Input[int]]] match_authorizing_method_priority_greater_thans: greater than
        :param pulumi.Input[bool] match_method_dot1x: dot1x
        :param pulumi.Input[bool] match_method_mab: mab
        :param pulumi.Input[bool] match_result_type_aaa_timeout: aaa timeout type
        :param pulumi.Input[bool] match_result_type_method_dot1x_agent_not_found: agent not found type
        :param pulumi.Input[bool] match_result_type_method_dot1x_authoritative: failure type
        :param pulumi.Input[bool] match_result_type_method_dot1x_method_timeout: method_timeout type
        :param pulumi.Input[bool] match_result_type_method_mab_authoritative: failure type
        :param pulumi.Input[str] name: name of the class map
        :param pulumi.Input[str] prematch: Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        :param pulumi.Input[bool] subscriber: Domain name of the class map
        :param pulumi.Input[str] type: type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
               `stack`, `traffic`
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ClassMapState.__new__(_ClassMapState)

        __props__.__dict__["description"] = description
        __props__.__dict__["device"] = device
        __props__.__dict__["match_activated_service_templates"] = match_activated_service_templates
        __props__.__dict__["match_authorization_status_authorized"] = match_authorization_status_authorized
        __props__.__dict__["match_authorization_status_unauthorized"] = match_authorization_status_unauthorized
        __props__.__dict__["match_authorizing_method_priority_greater_thans"] = match_authorizing_method_priority_greater_thans
        __props__.__dict__["match_method_dot1x"] = match_method_dot1x
        __props__.__dict__["match_method_mab"] = match_method_mab
        __props__.__dict__["match_result_type_aaa_timeout"] = match_result_type_aaa_timeout
        __props__.__dict__["match_result_type_method_dot1x_agent_not_found"] = match_result_type_method_dot1x_agent_not_found
        __props__.__dict__["match_result_type_method_dot1x_authoritative"] = match_result_type_method_dot1x_authoritative
        __props__.__dict__["match_result_type_method_dot1x_method_timeout"] = match_result_type_method_dot1x_method_timeout
        __props__.__dict__["match_result_type_method_mab_authoritative"] = match_result_type_method_mab_authoritative
        __props__.__dict__["name"] = name
        __props__.__dict__["prematch"] = prematch
        __props__.__dict__["subscriber"] = subscriber
        __props__.__dict__["type"] = type
        return ClassMap(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Class-Map description
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[str]]:
        """
        A device name from the provider configuration.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter(name="matchActivatedServiceTemplates")
    def match_activated_service_templates(self) -> pulumi.Output[Optional[Sequence['outputs.ClassMapMatchActivatedServiceTemplate']]]:
        """
        match name of service template activated on session
        """
        return pulumi.get(self, "match_activated_service_templates")

    @property
    @pulumi.getter(name="matchAuthorizationStatusAuthorized")
    def match_authorization_status_authorized(self) -> pulumi.Output[Optional[bool]]:
        """
        authorized
        """
        return pulumi.get(self, "match_authorization_status_authorized")

    @property
    @pulumi.getter(name="matchAuthorizationStatusUnauthorized")
    def match_authorization_status_unauthorized(self) -> pulumi.Output[Optional[bool]]:
        """
        unauthorized
        """
        return pulumi.get(self, "match_authorization_status_unauthorized")

    @property
    @pulumi.getter(name="matchAuthorizingMethodPriorityGreaterThans")
    def match_authorizing_method_priority_greater_thans(self) -> pulumi.Output[Optional[Sequence[int]]]:
        """
        greater than
        """
        return pulumi.get(self, "match_authorizing_method_priority_greater_thans")

    @property
    @pulumi.getter(name="matchMethodDot1x")
    def match_method_dot1x(self) -> pulumi.Output[Optional[bool]]:
        """
        dot1x
        """
        return pulumi.get(self, "match_method_dot1x")

    @property
    @pulumi.getter(name="matchMethodMab")
    def match_method_mab(self) -> pulumi.Output[Optional[bool]]:
        """
        mab
        """
        return pulumi.get(self, "match_method_mab")

    @property
    @pulumi.getter(name="matchResultTypeAaaTimeout")
    def match_result_type_aaa_timeout(self) -> pulumi.Output[Optional[bool]]:
        """
        aaa timeout type
        """
        return pulumi.get(self, "match_result_type_aaa_timeout")

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAgentNotFound")
    def match_result_type_method_dot1x_agent_not_found(self) -> pulumi.Output[Optional[bool]]:
        """
        agent not found type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_agent_not_found")

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xAuthoritative")
    def match_result_type_method_dot1x_authoritative(self) -> pulumi.Output[Optional[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_authoritative")

    @property
    @pulumi.getter(name="matchResultTypeMethodDot1xMethodTimeout")
    def match_result_type_method_dot1x_method_timeout(self) -> pulumi.Output[Optional[bool]]:
        """
        method_timeout type
        """
        return pulumi.get(self, "match_result_type_method_dot1x_method_timeout")

    @property
    @pulumi.getter(name="matchResultTypeMethodMabAuthoritative")
    def match_result_type_method_mab_authoritative(self) -> pulumi.Output[Optional[bool]]:
        """
        failure type
        """
        return pulumi.get(self, "match_result_type_method_mab_authoritative")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        name of the class map
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def prematch(self) -> pulumi.Output[str]:
        """
        Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        """
        return pulumi.get(self, "prematch")

    @property
    @pulumi.getter
    def subscriber(self) -> pulumi.Output[Optional[bool]]:
        """
        Domain name of the class map
        """
        return pulumi.get(self, "subscriber")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[Optional[str]]:
        """
        type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        `stack`, `traffic`
        """
        return pulumi.get(self, "type")

