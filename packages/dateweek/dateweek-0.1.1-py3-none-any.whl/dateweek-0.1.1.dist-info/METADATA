Metadata-Version: 2.1
Name: dateweek
Version: 0.1.1
Summary: Neste modulo são disponibilizadas funções de calendários.
Author-email: Arthur Harduim <arthur.harduim@rioenergy.com.br>, Tiago Alves <tiago.alves@rioenergy.com.br>
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: setuptools>=61.0
Requires-Dist: black ; extra == "dev"
Requires-Dist: isort ; extra == "dev"
Requires-Dist: flit ; extra == "dev"
Requires-Dist: pytest-forked ; extra == "unittest"
Requires-Dist: pytest ; extra == "unittest"
Requires-Dist: pytest-xdist ; extra == "unittest"
Project-URL: Documentation, https://github.com/Harduim/DateWeek
Project-URL: Home, https://github.com/Harduim/DateWeek
Project-URL: Source, https://github.com/Harduim/DateWeek
Provides-Extra: dev
Provides-Extra: unittest

# DateWeek

DateWeek is a Python package for working with w-sat weeks.

## Usage

```python
from dateweek import DateWeek
from datetime import datetime

# Creating a DateWeek object for the current week
current_week = DateWeek.current_week()

# Creating a DateWeek object for a specific week
week = DateWeek(2020, 1)

# Creating a DateWeek object from a datetime
week = DateWeek.from_datetime(datetime(2020, 1, 1))


# Creating a DateWeek object from a string
week = DateWeek.from_str("2020-01-01")

# Getting the first day and last day of the week
first_day, last_day = week.first_day, week.last_day


# Finding the previous week
previous_week = current_week - 1

# Finding the next week
next_week = current_week + 1

```

## Development

### Conda

```bash
conda env create -f environment.yml
conda activate dateweek
pip install -e .
pip install -e .[dev]
pip install -e .[unittest]
```

