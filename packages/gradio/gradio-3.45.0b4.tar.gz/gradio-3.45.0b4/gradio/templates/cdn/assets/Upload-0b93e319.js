import{S as N,e as P,s as Q,a8 as R,m as q,o as V,g as d,O as v,h as W,j as T,p as f,q as b,ah as m,aa as X,ab as Y,ac as Z,w as x,u as $,k as ee,B as ne,ar as le,as as ie,C as ae,E as y,T as te,a6 as re}from"./index-f52e647c.js";import{b as se,n as oe}from"./Button-8a9fa97c.js";function ue(l){let n,t,r,g,k,_,a,w,F;const A=l[14].default,s=R(A,l,l[13],null);return{c(){n=q("div"),s&&s.c(),t=V(),r=q("input"),d(r,"type","file"),d(r,"accept",l[0]),r.multiple=g=l[4]==="multiple"||void 0,d(r,"webkitdirectory",k=l[4]==="directory"||void 0),d(r,"mozdirectory",_=l[4]==="directory"||void 0),d(r,"class","svelte-116rqfv"),d(n,"class","svelte-116rqfv"),v(n,"center",l[2]),v(n,"boundedheight",l[1]),v(n,"flex",l[3])},m(i,o){W(i,n,o),s&&s.m(n,null),T(n,t),T(n,r),l[22](r),a=!0,w||(F=[f(r,"change",l[8]),f(n,"drag",b(m(l[15]))),f(n,"dragstart",b(m(l[16]))),f(n,"dragend",b(m(l[17]))),f(n,"dragover",b(m(l[18]))),f(n,"dragenter",b(m(l[19]))),f(n,"dragleave",b(m(l[20]))),f(n,"drop",b(m(l[21]))),f(n,"click",l[7]),f(n,"drop",l[9]),f(n,"dragenter",l[6]),f(n,"dragleave",l[6])],w=!0)},p(i,[o]){s&&s.p&&(!a||o&8192)&&X(s,A,i,i[13],a?Z(A,i[13],o,null):Y(i[13]),null),(!a||o&1)&&d(r,"accept",i[0]),(!a||o&16&&g!==(g=i[4]==="multiple"||void 0))&&(r.multiple=g),(!a||o&16&&k!==(k=i[4]==="directory"||void 0))&&d(r,"webkitdirectory",k),(!a||o&16&&_!==(_=i[4]==="directory"||void 0))&&d(r,"mozdirectory",_),(!a||o&4)&&v(n,"center",i[2]),(!a||o&2)&&v(n,"boundedheight",i[1]),(!a||o&8)&&v(n,"flex",i[3])},i(i){a||(x(s,i),a=!0)},o(i){$(s,i),a=!1},d(i){i&&ee(n),s&&s.d(i),l[22](null),w=!1,ne(F)}}}function fe(l,n,t){let{$$slots:r={},$$scope:g}=n;const k=le("upload_files")??ie;let{filetype:_=null}=n,{dragging:a=!1}=n,{boundedheight:w=!0}=n,{center:F=!0}=n,{flex:A=!0}=n,{file_count:s="single"}=n,{disable_click:i=!1}=n,{root:o}=n,p;const U=ae();function C(){t(10,a=!a)}function D(){i||(t(5,p.value="",p),p.click())}async function B(e){await re();let h=(Array.isArray(e)?e:[e]).map(c=>c.blob);await k(o,h).then(async c=>{c.error?(Array.isArray(e)?e:[e]).forEach(async(u,z)=>{u.data=await se(u.blob),u.blob=void 0}):(Array.isArray(e)?e:[e]).forEach((u,z)=>{c.files&&(u.orig_name=u.name,u.name=c.files[z],u.is_file=!0,u.blob=void 0,oe(u,o,null))})}),U("load",s==="single"?e[0]:e)}async function E(e){let h=Array.from(e);if(e.length){s==="single"&&(h=[e[0]]);var c=[];h.forEach((u,z)=>{c[z]={name:u.name,size:u.size,data:"",blob:u}}),await B(c)}}async function S(e){const h=e.target;h.files&&await E(h.files)}async function j(e){t(10,a=!1),e.dataTransfer?.files&&await E(e.dataTransfer.files)}function O(e){y.call(this,l,e)}function G(e){y.call(this,l,e)}function H(e){y.call(this,l,e)}function I(e){y.call(this,l,e)}function J(e){y.call(this,l,e)}function K(e){y.call(this,l,e)}function L(e){y.call(this,l,e)}function M(e){te[e?"unshift":"push"](()=>{p=e,t(5,p)})}return l.$$set=e=>{"filetype"in e&&t(0,_=e.filetype),"dragging"in e&&t(10,a=e.dragging),"boundedheight"in e&&t(1,w=e.boundedheight),"center"in e&&t(2,F=e.center),"flex"in e&&t(3,A=e.flex),"file_count"in e&&t(4,s=e.file_count),"disable_click"in e&&t(11,i=e.disable_click),"root"in e&&t(12,o=e.root),"$$scope"in e&&t(13,g=e.$$scope)},[_,w,F,A,s,p,C,D,S,j,a,i,o,g,r,O,G,H,I,J,K,L,M]}class ge extends N{constructor(n){super(),P(this,n,fe,ue,Q,{filetype:0,dragging:10,boundedheight:1,center:2,flex:3,file_count:4,disable_click:11,root:12})}}export{ge as U};
//# sourceMappingURL=Upload-0b93e319.js.map
