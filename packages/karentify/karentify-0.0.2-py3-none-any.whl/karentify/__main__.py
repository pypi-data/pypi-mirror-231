import sys
import argparse

from random import choice, random
from karentify import karentify


# FIXME: this would probably better be generated by combining emotions and
# actions, but I lack the english to find a proper pattern that works.
REACTIONS = ['inaudible', 'incomprehensible', 'enraged hairflip',
             'angry fingerpointing', 'attention seeking room scan',
             'fake-storming-out double turn', 'angry foot stomp',
             'hammer punching the counter', 'judging up-down scan',
             'glaring at by-stander', 'offended lip pressing',
             'nervous eye twitching']

ACTING_OUT_CHANCE = 1 / 3


def main(args):
    cmdline = argparse.ArgumentParser(description='Unleash your inner Karen, demanding entitlements')
    cmdline.add_argument('--dEmAnD-MaNaGeR', '-D', action='store_true', help='Demand to speak to somebody with actual authority')
    cmdline.add_argument('--aCtInG-OuT', '-V', action='count', default=0, help='Make visually clear that this issue is serious')
    cmdline.add_argument('entitlement', type=str, nargs='*', help='Your important message')
    opts = cmdline.parse_args(args)

    def wrangle_demand(s):
        s = s.strip().rstrip('.!?,')
        demand = karentify(s) + '!!!' if s else ''

        if random() < min(1, ACTING_OUT_CHANCE * opts.aCtInG_OuT):
            demand += f'[{choice(REACTIONS)}]!!!'

        return demand

    if len(opts.entitlement) > 0:
        print(wrangle_demand(' '.join(opts.entitlement)))
    else:
        if sys.stdin.isatty():
            print('Hello, how can I help you?')

        for s in sys.stdin:
            print(wrangle_demand(s))

    if opts.dEmAnD_MaNaGeR:
        print(wrangle_demand('and I would like to talk to your manager'))


def run():
    # if this is not split up, the cli can't be tested by injecting args
    try:
        main(sys.argv[1:])
    except KeyboardInterrupt:
        pass


if __name__ == "__main__":
    run()
