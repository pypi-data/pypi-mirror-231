Metadata-Version: 2.1
Name: mogussort
Version: 1.0.3
Summary: 
Home-page: https://github.com/9-FS/2023-04-10-Mogussort
License: MIT
Author: 9FS
Author-email: pray4spam@googlemail.com
Requires-Python: >=3.11.0,<4.0.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Project-URL: Repository, https://github.com/9-FS/2023-04-10-Mogussort
Description-Content-Type: text/markdown

---
Topic: "Mogussort"
Author: "Íµ¨FS"
---
<link href="./doc_templates/md_style.css" rel="stylesheet"></link>
<body>

# <p style="text-align: center">Mogussort</p>
<br>
<br>

<div class="img_right_30">
    <img alt="Error: Could not load image source."
    src="https://media.tenor.com/1iSARWJr-TEAAAAC/among-us-twerk.gif"/>
    <p class=img_caption>üò§üò©üò©üí¶üí¶üí¶</p>
</div>

- [1. üìÆMogussort](#1-mogussort)
- [2. üìÆLoreüìÆ](#2-lore)
- [3. Installation](#3-installation)
- [4. üìÆHow it worksüìÆ](#4-how-it-works)
- [5. üìÆPerformanceüìÆ](#5-performance)
- [6. üìÆSusüìÆ](#6-sus)
- [7. Language](#7-language)

## 1. üìÆMogussort

World's (üìÆ)SUSSIEST sorting algorithm

## 2. üìÆLoreüìÆ

<div class="img_right_30">
    <img alt="Error: Could not load image source."
    src="https://i.imgflip.com/5y6poi.jpg"/>
    <p class=img_caption>sussy</p>
</div>

Your normal and boring sorting algorithms are just too fast? You want to introduce some sussy code to your programs?  
Then you have come to the right place.

Inspired by the fantastic [Csussus version](https://github.com/sam-k0/Mogussort/) and certified üìÆextra sussyüìÆ by the original author!

## 3. Installation

You can install üìÆMogussortüìÆ from PyPi with `pip install Mogussort`.

<div style="page-break-after: always;"></div>

## 4. üìÆHow it worksüìÆ

There are 2 (two, 2üìÆ) lists, `crew_in` and `crew_out`.

- `crew_in` contains all crewmates at the start of the game.
- `crew_out` is empty.

The algorithm will vote out one random crewmate and put it in `crew_out` That crewmate is then removed from `crew_in`. Then, it checks if `crew_out` is correctly sorted (ascending).

If it is correnct, it will continue to vote and populate `crew_out`.

If the crewmates are not in the right order an üìÆImpostorüìÆ (sus, baka) has been spotted. This means that the game is lost, and `crew_out` will be cleared, and `crew_in` will be reset to the original form.

The algorithm will stop once all crewmates are in the right order.

<div style="page-break-after: always;"></div>

## 5. üìÆPerformanceüìÆ

<div class="img_right_30">
    <img alt="Error: Could not load image source."
    src="https://repository-images.githubusercontent.com/468220029/dfe7cf55-8b30-4c65-8e9f-b2245b9e8bcb"/>
    <p class=img_caption></p>
</div>

The üìÆmogussort solves all of your sorting problems with an incredible, luck based runtime. You might ask "how fast is it exactly?".

Well, having $c$ crew mates the probability $p$ of ~~sorting~~ voting correctly in $1$ ~~attempts to sort~~ emergency meeting is:

$$
\begin{align}
p&=\frac{1}{c} \cdot \frac{1}{c-1} \cdot \frac{1}{c-2} \cdot ... \cdot \frac{1}{1} \\
&=\frac{1}{c!}
\end{align}
$$

That means the probability to fail in $1$ emergency meeting is:

$$
\begin{align}
1-p=1- \frac{1}{c!}
\end{align}
$$

If we make $n$ emergency meetings, the chance $P$ of $1$ success is:

$$
\begin{align}
P&=1-(1-p)^{n} \\
&=1-(1- \frac{1}{c!})^{n}
\end{align}
$$

So, how many meetings do we need until we have a chance of $P$ to have them sorted correctly once?

$$
\begin{align}
P &= 1-(1- \frac{1}{c!})^{n}\\
(1- \frac{1}{c!})^{n} &= 1-P \\
n &= \text{log}_{1- \frac{1}{c!}}(1-P) \\
n &= \frac{\text{lg}(1-P)}{\text{lg}(1- \frac{1}{c!})}
\end{align}
$$

So if we manage $m$ meetings per second, mogussort will finish with a probability $P$ within time $t_{P}$:

$$
\begin{align}
t_{P} &= \frac{n}{m} \\
&= \frac{\text{lg}(1-P)}{\text{lg}(1- \frac{1}{c!})} \cdot \frac{1}{m}
\end{align}
$$

<div style="page-break-after: always;"></div>

Let's assume we manage $m=60 \text{k} \frac{\text{meeting}}{\text{s}}$ , which is a value I roughly get on my computer (Intel Core i7-8550U). Then mogussort will finish with a probability $P$ of $0,50$ and $0,95$ within:

<div align="center">

| Crew Mates $c$ |   Time $t_{0,50}$ |    Time $t_{0,50}$ |   Time $t_{0,95}$ |     Time $t_{0,95}$ |
| -------------: | ----------------: | -----------------: | ----------------: | ------------------: |
|            $2$ | $16,67 \text{¬µs}$ |                    | $72,03 \text{¬µs}$ |
|            $3$ | $63,36 \text{¬µs}$ |                    | $273,9 \text{¬µs}$ |
|            $4$ | $271,4 \text{¬µs}$ |                    | $1,173 \text{ms}$ |
|            $5$ | $1,381 \text{ms}$ |                    | $5,966 \text{ms}$ |
|            $6$ | $8,312 \text{ms}$ |                    | $35,92 \text{ms}$ |
|            $7$ | $58,22 \text{ms}$ |                    | $251,6 \text{ms}$ |
|            $8$ | $465,8 \text{ms}$ |                    |  $2,013 \text{s}$ |
|            $9$ |  $4,192 \text{s}$ |                    |  $18,12 \text{s}$ |
|           $10$ |  $41,92 \text{s}$ |                    |  $181,2 \text{s}$ |  $(3,0 \text{min})$ |
|           $11$ |  $461,1 \text{s}$ | $(7,7 \text{min})$ | $1,993 \text{ks}$ |   $(33 \text{min})$ |
|           $12$ | $5,534 \text{ks}$ |   $(1,5 \text{h})$ | $23,92 \text{ks}$ |    $(6,6 \text{h})$ |
|           $13$ | $71,94 \text{ks}$ |    $(20 \text{h})$ | $310,9 \text{ks}$ |    $(3,6 \text{d})$ |
|           $14$ | $1,007 \text{Ms}$ |    $(12 \text{d})$ | $4,353 \text{Ms}$ |     $(50 \text{d})$ |
|           $15$ | $15,11 \text{Ms}$ |   $(170 \text{d})$ | $65,29 \text{Ms}$ |    $(2,1 \text{a})$ |
|           $16$ | $242,0 \text{Ms}$ |   $(7,7 \text{a})$ | $1,046 \text{Gs}$ |     $(33 \text{a})$ |
|           $17$ | $4,162 \text{Gs}$ |   $(132 \text{a})$ | $17,99 \text{Gs}$ |    $(570 \text{a})$ |
|           $18$ | $104,1 \text{Gs}$ | $(3.297 \text{a})$ | $449,7 \text{Gs}$ | $(14.251 \text{a})$ |

</div>

This even means you might be able to play a game of Among Us while you wait for the algorithm to finish (now isn't that fantastic?).

<div style="page-break-after: always;"></div>

## 6. üìÆSusüìÆ

```python
‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ
‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£Ä‚£Ä‚£ê‚°Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ
‚†Ñ‚†Ñ‚¢†‚†Ñ‚£†‚£∂‚£ø‚£ø‚£ø‚†ø‚†ø‚£õ‚£Ç‚£Ä‚£Ä‚°í‚†∂‚£∂‚£§‚£§‚£¨‚£Ä‚°Ä‚†Ñ‚¢Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ
‚†Ñ‚†Ñ‚¢Ä‚£æ‚£ø‚£ø‚£ø‚°ü‚¢°‚¢æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£å‚†ª‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ñ‚°Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ
‚†Ñ‚†Ñ‚£à‚£â‚°õ‚£ø‚£ø‚£ø‚°å‚¢á‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚£°‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ñ‚†Ñ‚†Ñ‚†Ñ
‚†Ñ‚†∫‚†ü‚£â‚£¥‚°ø‚†õ‚£©‚£æ‚£é‚†≥‚†ø‚†õ‚£ã‚£©‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ñ‚†Ñ
‚†Ñ‚†Ñ‚†Ñ‚†ò‚¢ã‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†Ñ
‚†Ñ‚†Ñ‚¢Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ñ
‚†Ñ‚†Ñ‚†Ñ‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚£Ä
‚†Ñ‚†Ñ‚†Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†É‚†ò‚†õ
‚†Ñ‚†Ñ‚†Ñ‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ã‚£Ä‚£Ä‚£†‚£§
‚†Ñ‚†Ñ‚£Ä‚£Ä‚°ô‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚¢õ‚£©‚†§‚†æ‚†Ñ‚†õ‚†ã‚†â‚¢â
‚†Ñ‚†∫‚†ø‚†õ‚†õ‚†É‚†Ñ‚†â‚†ô‚†õ‚†õ‚†ª‚†ø‚†ø‚†ø‚†ü‚†õ‚†õ‚†õ‚†â‚†Å‚†Ñ‚†Ñ‚£Ä‚£Ä‚£†‚£§‚£†‚£¥‚£∂‚£º‚£ø
```

```python
‚†Ä‚†Ä‚†Ä‚°Ø‚°Ø‚°æ‚†ù‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ä‚†ò‚°Æ‚££‚†™‚†¢‚°ë‚°å 
‚†Ä‚†Ä‚†ü‚†ù‚†à‚†Ä‚†Ä‚†Ä‚†°‚†Ä‚††‚¢à‚††‚¢ê‚¢†‚¢Ç‚¢î‚£ê‚¢Ñ‚°Ç‚¢î‚†Ä‚°Å‚¢â‚†∏‚¢®‚¢ë‚†ï‚°å
‚†Ä‚†Ä‚°Ä‚†Å‚†Ä‚†Ä‚†Ä‚°Ä‚¢Ç‚†°‚†à‚°î‚£ï‚¢Æ‚£≥‚¢Ø‚£ø‚£ª‚£ü‚£Ø‚£Ø‚¢∑‚£´‚£Ü‚°Ç‚†Ä‚†Ä‚¢ê‚†ë‚°å 
‚¢Ä‚††‚†ê‚†à‚†Ä‚¢Ä‚¢Ç‚†¢‚°Ç‚†ï‚°Å‚£ù‚¢Æ‚£≥‚¢Ω‚°Ω‚£æ‚£ª‚£ø‚£Ø‚°Ø‚£ü‚£û‚¢æ‚¢ú‚¢Ü‚†Ä‚°Ä‚†Ä‚†™
‚£¨‚†Ç‚†Ä‚†Ä‚¢Ä‚¢Ç‚¢™‚†®‚¢Ç‚†•‚£∫‚°™‚£ó‚¢ó‚£Ω‚¢Ω‚°Ø‚£ø‚£Ω‚£∑‚¢ø‚°Ω‚°æ‚°Ω‚£ù‚¢é‚†Ä‚†Ä‚†Ä‚¢° 
‚£ø‚†Ä‚†Ä‚†Ä‚¢Ç‚†¢‚¢Ç‚¢•‚¢±‚°π‚£™‚¢û‚°µ‚£ª‚°™‚°Ø‚°Ø‚£ü‚°æ‚£ø‚£ª‚°Ω‚£Ø‚°ª‚£™‚†ß‚†ë‚†Ä‚†Å‚¢ê
‚£ø‚†Ä‚†Ä‚†Ä‚†¢‚¢ë‚††‚†ë‚†ï‚°ù‚°é‚°ó‚°ù‚°é‚£û‚¢Ω‚°π‚£ï‚¢Ø‚¢ª‚†π‚°π‚¢ö‚†ù‚°∑‚°Ω‚°®‚†Ä‚†Ä‚¢î 
‚£ø‚°Ø‚†Ä‚¢à‚†à‚¢Ñ‚†Ç‚†Ç‚†ê‚†Ä‚†å‚††‚¢ë‚†±‚°±‚°±‚°ë‚¢î‚†Å‚†Ä‚°Ä‚†ê‚†ê‚†ê‚°°‚°π‚£™‚†Ä‚†Ä‚¢ò
‚£ø‚£Ω‚†Ä‚°Ä‚°ä‚†Ä‚†ê‚†®‚†à‚°Å‚†Ç‚¢à‚††‚°±‚°Ω‚£∑‚°ë‚†Å‚††‚†ë‚†Ä‚¢â‚¢á‚£§‚¢ò‚£™‚¢Ω‚†Ä‚¢å‚¢é
‚£ø‚¢æ‚†Ä‚¢å‚†å‚†Ä‚°Å‚†¢‚†Ç‚†ê‚°Ä‚†Ä‚¢Ä‚¢≥‚¢Ω‚£Ω‚°∫‚£®‚¢Ñ‚£ë‚¢â‚¢É‚¢≠‚°≤‚£ï‚°≠‚£π‚††‚¢ê‚¢ó
‚£ø‚°ó‚†Ä‚†¢‚†°‚°±‚°∏‚£î‚¢µ‚¢±‚¢∏‚†à‚†Ä‚°™‚£≥‚£≥‚¢π‚¢ú‚°µ‚£±‚¢±‚°±‚£≥‚°π‚£µ‚£ª‚¢î‚¢Ö‚¢¨‚°∑
‚£∑‚°á‚°Ç‚†°‚°ë‚¢ï‚¢ï‚†ï‚°ë‚†°‚¢Ç‚¢ä‚¢ê‚¢ï‚°ù‚°Æ‚°ß‚°≥‚£ù‚¢¥‚°ê‚£Å‚†É‚°´‚°í‚£ï‚¢è‚°Æ‚£∑‚°ü
‚£∑‚£ª‚£Ö‚†ë‚¢å‚†¢‚†Å‚¢ê‚††‚†ë‚°ê‚†ê‚†å‚°™‚†Æ‚°´‚†™‚°™‚°™‚£∫‚¢∏‚†∞‚†°‚††‚†ê‚¢±‚†®‚°™‚°™‚°∞ 
‚£Ø‚¢∑‚£ü‚£á‚°Ç‚°Ç‚°å‚°Ä‚†Ä‚†Å‚°Ç‚†Ö‚†Ç‚†Ä‚°ë‚°Ñ‚¢á‚†á‚¢ù‚°®‚°†‚°Å‚¢ê‚††‚¢Ä‚¢™‚°ê‚°ú‚°™‚°ä
‚£ø‚¢Ω‚°æ‚¢π‚°Ñ‚†ï‚°Ö‚¢á‚†Ç‚†ë‚£¥‚°¨‚£¨‚£¨‚£Ü‚¢Æ‚£¶‚£∑‚£µ‚£∑‚°ó‚¢É‚¢Æ‚†±‚°∏‚¢∞‚¢±‚¢∏‚¢®‚¢å 
‚£Ø‚¢Ø‚£ü‚†∏‚£≥‚°Ö‚†ú‚†î‚°å‚°ê‚†à‚†ª‚†ü‚£ø‚¢ø‚£ø‚£ø‚†ø‚°ª‚£É‚†¢‚£±‚°≥‚°±‚°©‚¢¢‚†£‚°É‚†¢‚†Å
‚°Ø‚£ü‚£û‚°á‚°ø‚£Ω‚°™‚°ò‚°∞‚†®‚¢ê‚¢Ä‚†¢‚¢¢‚¢Ñ‚¢§‚£∞‚†º‚°æ‚¢ï‚¢ï‚°µ‚£ù‚†é‚¢å‚¢™‚†™‚°ò‚°å
‚°Ø‚£≥‚†Ø‚†ö‚¢ä‚†°‚°Ç‚¢Ç‚†®‚†ä‚†î‚°ë‚†¨‚°∏‚£ò‚¢¨‚¢™‚£™‚°∫‚°º‚£ï‚¢Ø‚¢û‚¢ï‚¢ù‚†é‚¢ª‚¢º‚£Ä
‚†Å‚°Ç‚†î‚°Å‚°¢‚†£‚¢Ä‚†¢‚†Ä‚†Ö‚†±‚°ê‚°±‚°ò‚°î‚°ï‚°ï‚£≤‚°π‚£é‚°Æ‚°è‚°ë‚¢ú‚¢º‚°±‚¢©‚£ó‚£Ø‚£ü 
```

## 7. Language

<div class="img_right_30">
    <img alt="Error: Could not load image source."
    src="https://d112y698adiu2z.cloudfront.net/photos/production/software_photos/001/465/847/datas/original.png"/>
    <p class=img_caption>pysus</p>
</div>

Made in pyüìÆsusüìÆ to improve performance in comparison to the original [Csussus version](https://github.com/sam-k0/Mogussort/).

</body>
