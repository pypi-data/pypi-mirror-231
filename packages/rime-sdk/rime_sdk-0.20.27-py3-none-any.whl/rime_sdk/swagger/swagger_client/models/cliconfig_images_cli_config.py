# coding: utf-8

"""
    RIME Rest API

    API methods for RIME. Must be authenticated with `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CliconfigImagesCLIConfig(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data_info': 'CliconfigImagesDataInfo',
        'model_profiling_info': 'str',
        'model_info': 'str',
        'data_profiling_info': 'str',
        'subset_profiling_info': 'str',
        'prediction_info': 'str'
    }

    attribute_map = {
        'data_info': 'dataInfo',
        'model_profiling_info': 'modelProfilingInfo',
        'model_info': 'modelInfo',
        'data_profiling_info': 'dataProfilingInfo',
        'subset_profiling_info': 'subsetProfilingInfo',
        'prediction_info': 'predictionInfo'
    }

    def __init__(self, data_info=None, model_profiling_info=None, model_info=None, data_profiling_info=None, subset_profiling_info=None, prediction_info=None):  # noqa: E501
        """CliconfigImagesCLIConfig - a model defined in Swagger"""  # noqa: E501
        self._data_info = None
        self._model_profiling_info = None
        self._model_info = None
        self._data_profiling_info = None
        self._subset_profiling_info = None
        self._prediction_info = None
        self.discriminator = None
        if data_info is not None:
            self.data_info = data_info
        if model_profiling_info is not None:
            self.model_profiling_info = model_profiling_info
        if model_info is not None:
            self.model_info = model_info
        if data_profiling_info is not None:
            self.data_profiling_info = data_profiling_info
        if subset_profiling_info is not None:
            self.subset_profiling_info = subset_profiling_info
        if prediction_info is not None:
            self.prediction_info = prediction_info

    @property
    def data_info(self):
        """Gets the data_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The data_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: CliconfigImagesDataInfo
        """
        return self._data_info

    @data_info.setter
    def data_info(self, data_info):
        """Sets the data_info of this CliconfigImagesCLIConfig.


        :param data_info: The data_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: CliconfigImagesDataInfo
        """

        self._data_info = data_info

    @property
    def model_profiling_info(self):
        """Gets the model_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The model_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: str
        """
        return self._model_profiling_info

    @model_profiling_info.setter
    def model_profiling_info(self, model_profiling_info):
        """Sets the model_profiling_info of this CliconfigImagesCLIConfig.


        :param model_profiling_info: The model_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: str
        """

        self._model_profiling_info = model_profiling_info

    @property
    def model_info(self):
        """Gets the model_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The model_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: str
        """
        return self._model_info

    @model_info.setter
    def model_info(self, model_info):
        """Sets the model_info of this CliconfigImagesCLIConfig.


        :param model_info: The model_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: str
        """

        self._model_info = model_info

    @property
    def data_profiling_info(self):
        """Gets the data_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The data_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: str
        """
        return self._data_profiling_info

    @data_profiling_info.setter
    def data_profiling_info(self, data_profiling_info):
        """Sets the data_profiling_info of this CliconfigImagesCLIConfig.


        :param data_profiling_info: The data_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: str
        """

        self._data_profiling_info = data_profiling_info

    @property
    def subset_profiling_info(self):
        """Gets the subset_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The subset_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: str
        """
        return self._subset_profiling_info

    @subset_profiling_info.setter
    def subset_profiling_info(self, subset_profiling_info):
        """Sets the subset_profiling_info of this CliconfigImagesCLIConfig.


        :param subset_profiling_info: The subset_profiling_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: str
        """

        self._subset_profiling_info = subset_profiling_info

    @property
    def prediction_info(self):
        """Gets the prediction_info of this CliconfigImagesCLIConfig.  # noqa: E501


        :return: The prediction_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :rtype: str
        """
        return self._prediction_info

    @prediction_info.setter
    def prediction_info(self, prediction_info):
        """Sets the prediction_info of this CliconfigImagesCLIConfig.


        :param prediction_info: The prediction_info of this CliconfigImagesCLIConfig.  # noqa: E501
        :type: str
        """

        self._prediction_info = prediction_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CliconfigImagesCLIConfig, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CliconfigImagesCLIConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
