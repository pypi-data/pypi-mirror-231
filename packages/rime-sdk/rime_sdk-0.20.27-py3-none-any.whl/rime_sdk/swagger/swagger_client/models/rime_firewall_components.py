# coding: utf-8

"""
    RIME Rest API

    API methods for RIME. Must be authenticated with `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RimeFirewallComponents(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cli_config': 'RimeCLIConfig',
        'firewall_rules': 'RimeFirewallRules',
        'threshold_infos': 'list[RimeThresholdInfo]',
        'typed_cli_config': 'CliconfigTypedCLIConfig'
    }

    attribute_map = {
        'cli_config': 'cliConfig',
        'firewall_rules': 'firewallRules',
        'threshold_infos': 'thresholdInfos',
        'typed_cli_config': 'typedCliConfig'
    }

    def __init__(self, cli_config=None, firewall_rules=None, threshold_infos=None, typed_cli_config=None):  # noqa: E501
        """RimeFirewallComponents - a model defined in Swagger"""  # noqa: E501
        self._cli_config = None
        self._firewall_rules = None
        self._threshold_infos = None
        self._typed_cli_config = None
        self.discriminator = None
        if cli_config is not None:
            self.cli_config = cli_config
        if firewall_rules is not None:
            self.firewall_rules = firewall_rules
        if threshold_infos is not None:
            self.threshold_infos = threshold_infos
        if typed_cli_config is not None:
            self.typed_cli_config = typed_cli_config

    @property
    def cli_config(self):
        """Gets the cli_config of this RimeFirewallComponents.  # noqa: E501


        :return: The cli_config of this RimeFirewallComponents.  # noqa: E501
        :rtype: RimeCLIConfig
        """
        return self._cli_config

    @cli_config.setter
    def cli_config(self, cli_config):
        """Sets the cli_config of this RimeFirewallComponents.


        :param cli_config: The cli_config of this RimeFirewallComponents.  # noqa: E501
        :type: RimeCLIConfig
        """

        self._cli_config = cli_config

    @property
    def firewall_rules(self):
        """Gets the firewall_rules of this RimeFirewallComponents.  # noqa: E501


        :return: The firewall_rules of this RimeFirewallComponents.  # noqa: E501
        :rtype: RimeFirewallRules
        """
        return self._firewall_rules

    @firewall_rules.setter
    def firewall_rules(self, firewall_rules):
        """Sets the firewall_rules of this RimeFirewallComponents.


        :param firewall_rules: The firewall_rules of this RimeFirewallComponents.  # noqa: E501
        :type: RimeFirewallRules
        """

        self._firewall_rules = firewall_rules

    @property
    def threshold_infos(self):
        """Gets the threshold_infos of this RimeFirewallComponents.  # noqa: E501

        The `threshold_infos` is a list where each element represents a threshold for a metric.  # noqa: E501

        :return: The threshold_infos of this RimeFirewallComponents.  # noqa: E501
        :rtype: list[RimeThresholdInfo]
        """
        return self._threshold_infos

    @threshold_infos.setter
    def threshold_infos(self, threshold_infos):
        """Sets the threshold_infos of this RimeFirewallComponents.

        The `threshold_infos` is a list where each element represents a threshold for a metric.  # noqa: E501

        :param threshold_infos: The threshold_infos of this RimeFirewallComponents.  # noqa: E501
        :type: list[RimeThresholdInfo]
        """

        self._threshold_infos = threshold_infos

    @property
    def typed_cli_config(self):
        """Gets the typed_cli_config of this RimeFirewallComponents.  # noqa: E501


        :return: The typed_cli_config of this RimeFirewallComponents.  # noqa: E501
        :rtype: CliconfigTypedCLIConfig
        """
        return self._typed_cli_config

    @typed_cli_config.setter
    def typed_cli_config(self, typed_cli_config):
        """Sets the typed_cli_config of this RimeFirewallComponents.


        :param typed_cli_config: The typed_cli_config of this RimeFirewallComponents.  # noqa: E501
        :type: CliconfigTypedCLIConfig
        """

        self._typed_cli_config = typed_cli_config

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RimeFirewallComponents, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RimeFirewallComponents):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
