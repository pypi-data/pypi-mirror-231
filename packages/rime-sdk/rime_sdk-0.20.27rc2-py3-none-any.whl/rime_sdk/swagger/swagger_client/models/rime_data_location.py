# coding: utf-8

"""
    RIME Rest API

    API methods for RIME. Must be authenticated with `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RimeDataLocation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'location_type': 'RimeDataLocationType',
        'delta_lake_args': 'RimeDeltaLakeArgs',
        'custom_loader_args': 'RimeCustomLoaderArgs',
        'data_params': 'CliconfigDataParams'
    }

    attribute_map = {
        'location_type': 'locationType',
        'delta_lake_args': 'deltaLakeArgs',
        'custom_loader_args': 'customLoaderArgs',
        'data_params': 'dataParams'
    }

    def __init__(self, location_type=None, delta_lake_args=None, custom_loader_args=None, data_params=None):  # noqa: E501
        """RimeDataLocation - a model defined in Swagger"""  # noqa: E501
        self._location_type = None
        self._delta_lake_args = None
        self._custom_loader_args = None
        self._data_params = None
        self.discriminator = None
        if location_type is not None:
            self.location_type = location_type
        if delta_lake_args is not None:
            self.delta_lake_args = delta_lake_args
        if custom_loader_args is not None:
            self.custom_loader_args = custom_loader_args
        if data_params is not None:
            self.data_params = data_params

    @property
    def location_type(self):
        """Gets the location_type of this RimeDataLocation.  # noqa: E501


        :return: The location_type of this RimeDataLocation.  # noqa: E501
        :rtype: RimeDataLocationType
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type):
        """Sets the location_type of this RimeDataLocation.


        :param location_type: The location_type of this RimeDataLocation.  # noqa: E501
        :type: RimeDataLocationType
        """

        self._location_type = location_type

    @property
    def delta_lake_args(self):
        """Gets the delta_lake_args of this RimeDataLocation.  # noqa: E501


        :return: The delta_lake_args of this RimeDataLocation.  # noqa: E501
        :rtype: RimeDeltaLakeArgs
        """
        return self._delta_lake_args

    @delta_lake_args.setter
    def delta_lake_args(self, delta_lake_args):
        """Sets the delta_lake_args of this RimeDataLocation.


        :param delta_lake_args: The delta_lake_args of this RimeDataLocation.  # noqa: E501
        :type: RimeDeltaLakeArgs
        """

        self._delta_lake_args = delta_lake_args

    @property
    def custom_loader_args(self):
        """Gets the custom_loader_args of this RimeDataLocation.  # noqa: E501


        :return: The custom_loader_args of this RimeDataLocation.  # noqa: E501
        :rtype: RimeCustomLoaderArgs
        """
        return self._custom_loader_args

    @custom_loader_args.setter
    def custom_loader_args(self, custom_loader_args):
        """Sets the custom_loader_args of this RimeDataLocation.


        :param custom_loader_args: The custom_loader_args of this RimeDataLocation.  # noqa: E501
        :type: RimeCustomLoaderArgs
        """

        self._custom_loader_args = custom_loader_args

    @property
    def data_params(self):
        """Gets the data_params of this RimeDataLocation.  # noqa: E501


        :return: The data_params of this RimeDataLocation.  # noqa: E501
        :rtype: CliconfigDataParams
        """
        return self._data_params

    @data_params.setter
    def data_params(self, data_params):
        """Sets the data_params of this RimeDataLocation.


        :param data_params: The data_params of this RimeDataLocation.  # noqa: E501
        :type: CliconfigDataParams
        """

        self._data_params = data_params

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RimeDataLocation, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RimeDataLocation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
