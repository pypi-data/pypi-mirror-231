# coding: utf-8

"""
    RIME Rest API

    API methods for RIME. Must be authenticated with `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RimeGetSummaryTimesRequestMask(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'earliest_batch': 'bool',
        'latest_batch': 'bool',
        'earliest_datapoint': 'bool',
        'latest_datapoint': 'bool'
    }

    attribute_map = {
        'earliest_batch': 'earliestBatch',
        'latest_batch': 'latestBatch',
        'earliest_datapoint': 'earliestDatapoint',
        'latest_datapoint': 'latestDatapoint'
    }

    def __init__(self, earliest_batch=None, latest_batch=None, earliest_datapoint=None, latest_datapoint=None):  # noqa: E501
        """RimeGetSummaryTimesRequestMask - a model defined in Swagger"""  # noqa: E501
        self._earliest_batch = None
        self._latest_batch = None
        self._earliest_datapoint = None
        self._latest_datapoint = None
        self.discriminator = None
        if earliest_batch is not None:
            self.earliest_batch = earliest_batch
        if latest_batch is not None:
            self.latest_batch = latest_batch
        if earliest_datapoint is not None:
            self.earliest_datapoint = earliest_datapoint
        if latest_datapoint is not None:
            self.latest_datapoint = latest_datapoint

    @property
    def earliest_batch(self):
        """Gets the earliest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501


        :return: The earliest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :rtype: bool
        """
        return self._earliest_batch

    @earliest_batch.setter
    def earliest_batch(self, earliest_batch):
        """Sets the earliest_batch of this RimeGetSummaryTimesRequestMask.


        :param earliest_batch: The earliest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :type: bool
        """

        self._earliest_batch = earliest_batch

    @property
    def latest_batch(self):
        """Gets the latest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501


        :return: The latest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :rtype: bool
        """
        return self._latest_batch

    @latest_batch.setter
    def latest_batch(self, latest_batch):
        """Sets the latest_batch of this RimeGetSummaryTimesRequestMask.


        :param latest_batch: The latest_batch of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :type: bool
        """

        self._latest_batch = latest_batch

    @property
    def earliest_datapoint(self):
        """Gets the earliest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501


        :return: The earliest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :rtype: bool
        """
        return self._earliest_datapoint

    @earliest_datapoint.setter
    def earliest_datapoint(self, earliest_datapoint):
        """Sets the earliest_datapoint of this RimeGetSummaryTimesRequestMask.


        :param earliest_datapoint: The earliest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :type: bool
        """

        self._earliest_datapoint = earliest_datapoint

    @property
    def latest_datapoint(self):
        """Gets the latest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501


        :return: The latest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :rtype: bool
        """
        return self._latest_datapoint

    @latest_datapoint.setter
    def latest_datapoint(self, latest_datapoint):
        """Sets the latest_datapoint of this RimeGetSummaryTimesRequestMask.


        :param latest_datapoint: The latest_datapoint of this RimeGetSummaryTimesRequestMask.  # noqa: E501
        :type: bool
        """

        self._latest_datapoint = latest_datapoint

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RimeGetSummaryTimesRequestMask, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RimeGetSummaryTimesRequestMask):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
