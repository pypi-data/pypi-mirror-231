[tool.poetry]
name = "rath"
version = "0.4.7"
description = "async transport-agnostic graphql client"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
readme = "README.md"
packages = [{ include = "rath" }]

[tool.poetry.dependencies]
python = "^3.7"
koil = ">=0.3.5"
graphql-core = "^3.2.0"
pydantic = "^1.9.0"
websockets = { version = "^10.2", optional = true }
aiohttp = { version = "^3.8.2", optional = true }
certifi = { version = ">2021", optional = true }
httpx = { version = "^0.23.0", optional = true }
cryptography = { version = "^41.0.3", optional = true }

[tool.poetry.extras]
websockets = ["websockets"]
aiohttp = ["aiohttp", "certifi"]
httpx = ["httpx"]
signing = ["cryptography"]


[tool.poetry.group.dev.dependencies]
httpx = "^0.23.0"
autoflake = "^1.7.7"
pytest = "^7.2.0"
testcontainers = "^3.7.0"
pytest-qt = "^4.2.0"
pytest-asyncio = "^0.20.2"
turms = { version = ">=0.2.3", python = "^3.9" }
aiohttp = "^3.8.3"
websockets = "^10.4"
black = "^22.10.0"
pytest-cov = "^4.0.0"
ruff = "^0.0.282"
cryptography = "^41.0.3"
pyjwt = "^2.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["rath"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
    "public: marks tests that require a public api",
]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"
