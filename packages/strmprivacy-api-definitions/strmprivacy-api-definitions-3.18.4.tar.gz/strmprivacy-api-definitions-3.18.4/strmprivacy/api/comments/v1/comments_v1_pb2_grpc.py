# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from strmprivacy.api.comments.v1 import comments_v1_pb2 as strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2


class CommentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateComment = channel.unary_unary(
                '/strmprivacy.api.comments.v1.CommentsService/CreateComment',
                request_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentResponse.FromString,
                )
        self.ListComments = channel.unary_unary(
                '/strmprivacy.api.comments.v1.CommentsService/ListComments',
                request_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsResponse.FromString,
                )
        self.DeleteComment = channel.unary_unary(
                '/strmprivacy.api.comments.v1.CommentsService/DeleteComment',
                request_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentResponse.FromString,
                )


class CommentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListComments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateComment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateComment,
                    request_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentResponse.SerializeToString,
            ),
            'ListComments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListComments,
                    request_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsResponse.SerializeToString,
            ),
            'DeleteComment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteComment,
                    request_deserializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'strmprivacy.api.comments.v1.CommentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.comments.v1.CommentsService/CreateComment',
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentRequest.SerializeToString,
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.CreateCommentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListComments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.comments.v1.CommentsService/ListComments',
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsRequest.SerializeToString,
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.ListCommentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.comments.v1.CommentsService/DeleteComment',
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentRequest.SerializeToString,
            strmprivacy_dot_api_dot_comments_dot_v1_dot_comments__v1__pb2.DeleteCommentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
