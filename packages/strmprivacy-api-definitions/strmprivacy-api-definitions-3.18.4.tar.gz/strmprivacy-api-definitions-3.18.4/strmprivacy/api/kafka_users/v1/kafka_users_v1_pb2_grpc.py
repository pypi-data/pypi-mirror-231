# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from strmprivacy.api.kafka_users.v1 import kafka_users_v1_pb2 as strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2


class KafkaUsersServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListKafkaUsers = channel.unary_unary(
                '/strmprivacy.api.kafka_users.v1.KafkaUsersService/ListKafkaUsers',
                request_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersResponse.FromString,
                )
        self.GetKafkaUser = channel.unary_unary(
                '/strmprivacy.api.kafka_users.v1.KafkaUsersService/GetKafkaUser',
                request_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserResponse.FromString,
                )
        self.DeleteKafkaUser = channel.unary_unary(
                '/strmprivacy.api.kafka_users.v1.KafkaUsersService/DeleteKafkaUser',
                request_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserResponse.FromString,
                )
        self.CreateKafkaUser = channel.unary_unary(
                '/strmprivacy.api.kafka_users.v1.KafkaUsersService/CreateKafkaUser',
                request_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserResponse.FromString,
                )


class KafkaUsersServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListKafkaUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKafkaUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKafkaUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateKafkaUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KafkaUsersServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListKafkaUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKafkaUsers,
                    request_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersResponse.SerializeToString,
            ),
            'GetKafkaUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKafkaUser,
                    request_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserResponse.SerializeToString,
            ),
            'DeleteKafkaUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKafkaUser,
                    request_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserResponse.SerializeToString,
            ),
            'CreateKafkaUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateKafkaUser,
                    request_deserializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'strmprivacy.api.kafka_users.v1.KafkaUsersService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KafkaUsersService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListKafkaUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.kafka_users.v1.KafkaUsersService/ListKafkaUsers',
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersRequest.SerializeToString,
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.ListKafkaUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKafkaUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.kafka_users.v1.KafkaUsersService/GetKafkaUser',
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserRequest.SerializeToString,
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.GetKafkaUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKafkaUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.kafka_users.v1.KafkaUsersService/DeleteKafkaUser',
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserRequest.SerializeToString,
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.DeleteKafkaUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateKafkaUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.kafka_users.v1.KafkaUsersService/CreateKafkaUser',
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserRequest.SerializeToString,
            strmprivacy_dot_api_dot_kafka__users_dot_v1_dot_kafka__users__v1__pb2.CreateKafkaUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
