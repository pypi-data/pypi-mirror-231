# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from strmprivacy.api.purpose_mapping.v1 import purpose_mapping_v1_pb2 as strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2


class PurposeMappingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPurposeMappings = channel.unary_unary(
                '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/ListPurposeMappings',
                request_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsResponse.FromString,
                )
        self.GetPurposeMapping = channel.unary_unary(
                '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/GetPurposeMapping',
                request_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingResponse.FromString,
                )
        self.CreatePurposeMapping = channel.unary_unary(
                '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/CreatePurposeMapping',
                request_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingResponse.FromString,
                )


class PurposeMappingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListPurposeMappings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPurposeMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePurposeMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PurposeMappingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPurposeMappings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPurposeMappings,
                    request_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsResponse.SerializeToString,
            ),
            'GetPurposeMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPurposeMapping,
                    request_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingResponse.SerializeToString,
            ),
            'CreatePurposeMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePurposeMapping,
                    request_deserializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'strmprivacy.api.purpose_mapping.v1.PurposeMappingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PurposeMappingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListPurposeMappings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/ListPurposeMappings',
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsRequest.SerializeToString,
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.ListPurposeMappingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPurposeMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/GetPurposeMapping',
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingRequest.SerializeToString,
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.GetPurposeMappingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePurposeMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.purpose_mapping.v1.PurposeMappingService/CreatePurposeMapping',
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingRequest.SerializeToString,
            strmprivacy_dot_api_dot_purpose__mapping_dot_v1_dot_purpose__mapping__v1__pb2.CreatePurposeMappingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
