# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from strmprivacy.api.batch_jobs.v1 import batch_jobs_v1_pb2 as strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2


class BatchJobsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBatchJob = channel.unary_unary(
                '/strmprivacy.api.batch_jobs.v1.BatchJobsService/GetBatchJob',
                request_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobResponse.FromString,
                )
        self.ListBatchJobs = channel.unary_unary(
                '/strmprivacy.api.batch_jobs.v1.BatchJobsService/ListBatchJobs',
                request_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsResponse.FromString,
                )
        self.CreateBatchJob = channel.unary_unary(
                '/strmprivacy.api.batch_jobs.v1.BatchJobsService/CreateBatchJob',
                request_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobResponse.FromString,
                )
        self.DeleteBatchJob = channel.unary_unary(
                '/strmprivacy.api.batch_jobs.v1.BatchJobsService/DeleteBatchJob',
                request_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobResponse.FromString,
                )
        self.UpdateBatchJobState = channel.unary_unary(
                '/strmprivacy.api.batch_jobs.v1.BatchJobsService/UpdateBatchJobState',
                request_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateRequest.SerializeToString,
                response_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateResponse.FromString,
                )


class BatchJobsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBatchJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBatchJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBatchJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBatchJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBatchJobState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BatchJobsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBatchJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatchJob,
                    request_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobResponse.SerializeToString,
            ),
            'ListBatchJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBatchJobs,
                    request_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsResponse.SerializeToString,
            ),
            'CreateBatchJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBatchJob,
                    request_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobResponse.SerializeToString,
            ),
            'DeleteBatchJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBatchJob,
                    request_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobResponse.SerializeToString,
            ),
            'UpdateBatchJobState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBatchJobState,
                    request_deserializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateRequest.FromString,
                    response_serializer=strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'strmprivacy.api.batch_jobs.v1.BatchJobsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BatchJobsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBatchJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.batch_jobs.v1.BatchJobsService/GetBatchJob',
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobRequest.SerializeToString,
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.GetBatchJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBatchJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.batch_jobs.v1.BatchJobsService/ListBatchJobs',
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsRequest.SerializeToString,
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.ListBatchJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBatchJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.batch_jobs.v1.BatchJobsService/CreateBatchJob',
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobRequest.SerializeToString,
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.CreateBatchJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBatchJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.batch_jobs.v1.BatchJobsService/DeleteBatchJob',
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobRequest.SerializeToString,
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.DeleteBatchJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBatchJobState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/strmprivacy.api.batch_jobs.v1.BatchJobsService/UpdateBatchJobState',
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateRequest.SerializeToString,
            strmprivacy_dot_api_dot_batch__jobs_dot_v1_dot_batch__jobs__v1__pb2.UpdateBatchJobStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
