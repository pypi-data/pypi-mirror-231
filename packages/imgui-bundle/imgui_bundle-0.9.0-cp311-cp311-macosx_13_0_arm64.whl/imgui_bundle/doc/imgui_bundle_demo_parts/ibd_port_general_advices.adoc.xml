<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>General advices</title>
<date>2023-02-23</date>
</info>
<section xml:id="_general_advices">
<title>General advices</title>
<simpara>ImGui is a C&#43;&#43; library that was ported to Python. In order to work with it, you will often refer to its <link xl:href="https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html">manual</link>, which shows example code in C&#43;&#43;.</simpara>
<simpara>In order to translate from C&#43;&#43; to Python:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Change the function names and parameters' names from <literal>CamelCase</literal> to <literal>snake_case</literal></simpara>
</listitem>
<listitem>
<simpara>Change the way the output are handled.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>in C&#43;&#43; <literal>ImGui::RadioButton</literal> modifies its second parameter (which is passed by address) and returns true if the user clicked the radio button.</simpara>
</listitem>
<listitem>
<simpara>In python, the (possibly modified) value is transmitted via the return: <literal>imgui.radio_button</literal> returns a <literal>Tuple[bool, str]</literal> which contains <literal>(user_clicked, new_value)</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>if porting some code that uses static variables, use the <literal>@immapp.static</literal> decorator.
 In this case, this decorator simply adds a variable <literal>value</literal> at  the function scope. It is preserved between calls.
Normally, this variable should be accessed via <literal>demo_radio_button.value</literal>, however the first line of the function adds a synonym named static for more clarity.
Do not overuse them! Static variable suffer from almost the same shortcomings as global variables, so you should prefer to modify an application state.</simpara>
</listitem>
</orderedlist>
<section xml:id="_example">
<title>Example:</title>
<simpara>C&#43;&#43;</simpara>
<programlisting language="cpp" linenumbering="unnumbered">void DemoRadioButton()
{
    static int value = 0;
    ImGui::RadioButton("radio a", &amp;value, 0); ImGui::SameLine();
    ImGui::RadioButton("radio b", &amp;value, 1); ImGui::SameLine();
    ImGui::RadioButton("radio c", &amp;value, 2);
}</programlisting>
<simpara>Python</simpara>
<programlisting language="python" linenumbering="unnumbered">@immapp.static(value=0)
def demo_radio_button():
    static = demo_radio_button
    clicked, static.value = imgui.radio_button("radio a", static.value, 0)
    imgui.same_line()
    clicked, static.value = imgui.radio_button("radio b", static.value, 1)
    imgui.same_line()
    clicked, static.value = imgui.radio_button("radio c", static.value, 2)</programlisting>
</section>
</section>
</article>