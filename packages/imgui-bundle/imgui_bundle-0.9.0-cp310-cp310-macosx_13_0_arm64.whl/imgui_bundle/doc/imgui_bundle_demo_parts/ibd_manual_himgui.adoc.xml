<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Hello ImGui - Starter pack</title>
<date>2023-02-23</date>
</info>
<section xml:id="_hello_imgui_starter_pack">
<title>Hello ImGui - Starter pack</title>
<simpara>Dear ImGui Bundle includes <link xl:href="https://github.com/pthom/hello_imgui">Hello ImGui</link>, which is itself based on ImGui. "Hello ImGui" can be compared to a starter pack that enables to easily write cross-platform Gui apps for Windows, macOS, Linux,  iOS,  and <link xl:href="https://en.wikipedia.org/wiki/Emscripten">emscripten</link>.</simpara>
<section xml:id="_api">
<title>API</title>
<simpara>See the "Hello ImGui" <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/hello_imgui_api.md">API doc</link>. Also consult the doc on how to build <link xl:href="https://github.com/pthom/hello_imgui/tree/master/src/hello_imgui/dpi_aware.h">DPI aware</link> applications.</simpara>
</section>
<section xml:id="_features">
<title>Features</title>
<itemizedlist>
<listitem>
<simpara>Full multiplatform support: Windows, Linux, OSX, iOS, Emscripten, Android (poorly supported). See demo <link xl:href="https://traineq.org/HelloImGui_6_Platforms.mp4">video</link></simpara>
</listitem>
<listitem>
<simpara>Advanced layout handling</simpara>
</listitem>
<listitem>
<simpara>Power Save mode: reduce FPS when application is idle (see <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/runner_params.h">RunnerParams.fpsIdle</link>)</simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://github.com/pthom/hello_imgui/tree/master/src/hello_imgui/dpi_aware.h">DPI aware</link> applications (widget placement, window size, font loading and scaling)</simpara>
</listitem>
<listitem>
<simpara>Theme tweaking (see <link xl:href="https://www.youtube.com/watch?v=4f_-3DDcAZk">demo video</link>, and <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/imgui_theme.h">API</link> )</simpara>
</listitem>
<listitem>
<simpara>Window geometry utilities: autosize, restore window position, full screen, etc. (see <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/app_window_params.h">WindowGeometry</link>)</simpara>
</listitem>
<listitem>
<simpara>Multiplatform <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/hello_imgui_assets.h">assets embedding</link></simpara>
</listitem>
<listitem>
<simpara>Switch between Glfw or Sdl backend (see <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/runner_params.h">RunnerParams.backendType</link>)</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>The usage of <literal>Hello ImGui</literal> is optional. You can also build an imgui application from scratch, in C&#43;&#43; or in python (see <link xl:href="https://github.com/pthom/imgui_bundle/tree/doc/bindings/imgui_bundle/demos_python/demos_immapp/imgui_example_glfw_opengl3.py">python example</link>)</simpara>
</note>
<tip>
<simpara>HelloImGui is fully configurable by POD (plain old data) structures. See <link xl:href="https://github.com/pthom/hello_imgui/blob/master/src/hello_imgui/hello_imgui_api.md">their description</link></simpara>
</tip>
</section>
<section xml:id="_advanced_layout_and_theming_with_hello_imgui">
<title>Advanced layout and theming with Hello ImGui:</title>
<simpara>See the demo named "demo_docking", which demonstrates:</simpara>
<itemizedlist>
<listitem>
<simpara>How to handle complex layouts: you can define several layouts and switch between them:  each layout which will remember the user modifications and the list of opened windows</simpara>
</listitem>
<listitem>
<simpara>How to use theming</simpara>
</listitem>
<listitem>
<simpara>How to store you own user settings in the app ini file</simpara>
</listitem>
<listitem>
<simpara>How to add a status bar and a log window</simpara>
</listitem>
<listitem>
<simpara>How to reduce the FPS when idling (to reduce CPU usage)</simpara>
</listitem>
</itemizedlist>
<simpara>Links:</simpara>
<itemizedlist>
<listitem>
<simpara>see <link xl:href="https://github.com/pthom/imgui_bundle//blob/main/bindings/imgui_bundle/demos_python/demos_immapp/demo_docking.py">demo_docking.py</link></simpara>
</listitem>
<listitem>
<simpara>see <link xl:href="https://github.com/pthom/imgui_bundle//blob/main/bindings/imgui_bundle/demos_cpp/demos_immapp/demo_docking.cpp">demo_docking.cpp</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://traineq.org/ImGuiBundle/emscripten/bin/demo_docking.html">Run this demo online</link></simpara>
</listitem>
<listitem>
<simpara>see <link xl:href="https://www.youtube.com/watch?v=XKxmz__F4ow">a short video explanation about layouts</link> on YouTube</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</article>