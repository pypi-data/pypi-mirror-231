{"version":3,"file":"704.aca4fb92e9cb80541247.js?v=aca4fb92e9cb80541247","mappings":"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","sources":["webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/style/index.css","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/css-loader/dist/runtime/api.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/style/index.css?1059","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/types.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/about.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".lsp-completer-themes .lsp-licence {\\n  display: inline;\\n}\\n\\n.lsp-completer-themes ul {\\n  list-style: none;\\n  padding-left: 10px;\\n}\\n\\n.lsp-completer-theme-icons {\\n  margin-left: 10px;\\n}\\n\\n.lsp-completer-icon-row {\\n  width: 50%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n/* a workaround for scrollbars being always on in the completer documentation panel, see\\n https://github.com/jupyter-lsp/jupyterlab-lsp/pull/322#issuecomment-682724175\\n */\\n.lsp-completer .jp-Completer-docpanel {\\n  overflow: auto;\\n}\\n\\n.lsp-completer.jp-Completer {\\n  --lsp-completer-max-label-width: 350px;\\n  --lsp-completer-max-detail-width: 200px;\\n}\\n\\n.lsp-completer .jp-Completer-match {\\n  max-width: var(--lsp-completer-max-label-width);\\n  overflow-x: hidden;\\n  white-space: nowrap;\\n  display: block;\\n  text-overflow: ellipsis;\\n}\\n\\n.lsp-completer .jp-mod-active .jp-Completer-match {\\n  text-overflow: clip;\\n}\\n\\n.lsp-completer-placeholder:after {\\n  content: 'Loading...';\\n  color: #7f7f7f;\\n}\\n\\n/* a workaround for code being larger font size than text in markdown-rendered panel */\\n.lsp-completer .jp-Completer-docpanel pre code {\\n  font-size: 90%;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\\n  --lsp-completer-label-height: 24px;\\n  --lsp-completer-detail-height: 20px;\\n  --lsp-completer-icon-width: 16px;\\n  height: var(--lsp-completer-label-height);\\n  display: grid;\\n  grid-template-areas:\\n    'icon label'\\n    'detail detail';\\n  grid-template-columns: min-content 1fr;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active {\\n  height: calc(\\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\\n  grid-area: icon;\\n  width: var(--lsp-completer-icon-width);\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  grid-area: label;\\n  overflow: hidden;\\n  height: var(--lsp-completer-label-height);\\n}\\n\\n.lsp-completer .jp-Completer-item .jp-Completer-typeExtended {\\n  max-width: var(--lsp-completer-max-detail-width);\\n  min-height: 50px;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.lsp-completer .jp-mod-active .jp-Completer-typeExtended {\\n  text-overflow: clip;\\n}\\n\\n.lsp-completer mark.lsp-elide:first-child {\\n  display: inline-block;\\n  overflow-x: clip;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  direction: rtl;\\n  /* stretch to as much space as possible */\\n  flex-shrink: 1;\\n  /* always reserve small space to fit the ellipsis */\\n  min-width: 20px;\\n}\\n\\n.lsp-completer .lsp-elide-wrapper {\\n  display: flex;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\\n  grid-area: detail;\\n  text-align: left;\\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\\n  height: var(--lsp-completer-detail-height);\\n  line-height: var(--lsp-completer-detail-height);\\n  display: none;\\n  position: relative;\\n  top: -2px;\\n  overflow: hidden;\\n  max-width: calc(\\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  overflow: hidden;\\n  max-width: calc(\\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active\\n  .jp-Completer-typeExtended {\\n  display: block;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../completion-theme/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,8BAA8B;AAChC;;AAEA;;EAEE;AACF;EACE,cAAc;AAChB;;AAEA;EACE,sCAAsC;EACtC,uCAAuC;AACzC;;AAEA;EACE,+CAA+C;EAC/C,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA,sFAAsF;AACtF;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,mCAAmC;EACnC,gCAAgC;EAChC,yCAAyC;EACzC,aAAa;EACb;;mBAEiB;EACjB,sCAAsC;AACxC;;AAEA;;EAEE;;GAEC;AACH;;AAEA;EACE,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,yCAAyC;AAC3C;;AAEA;EACE,gDAAgD;EAChD,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;EACd,yCAAyC;EACzC,cAAc;EACd,mDAAmD;EACnD,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,yDAAyD;EACzD,0CAA0C;EAC1C,+CAA+C;EAC/C,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB;;GAEC;AACH;;AAEA;EACE,gBAAgB;EAChB;;GAEC;AACH;;AAEA;;;EAGE,cAAc;AAChB\",\"sourcesContent\":[\".lsp-completer-themes .lsp-licence {\\n  display: inline;\\n}\\n\\n.lsp-completer-themes ul {\\n  list-style: none;\\n  padding-left: 10px;\\n}\\n\\n.lsp-completer-theme-icons {\\n  margin-left: 10px;\\n}\\n\\n.lsp-completer-icon-row {\\n  width: 50%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n/* a workaround for scrollbars being always on in the completer documentation panel, see\\n https://github.com/jupyter-lsp/jupyterlab-lsp/pull/322#issuecomment-682724175\\n */\\n.lsp-completer .jp-Completer-docpanel {\\n  overflow: auto;\\n}\\n\\n.lsp-completer.jp-Completer {\\n  --lsp-completer-max-label-width: 350px;\\n  --lsp-completer-max-detail-width: 200px;\\n}\\n\\n.lsp-completer .jp-Completer-match {\\n  max-width: var(--lsp-completer-max-label-width);\\n  overflow-x: hidden;\\n  white-space: nowrap;\\n  display: block;\\n  text-overflow: ellipsis;\\n}\\n\\n.lsp-completer .jp-mod-active .jp-Completer-match {\\n  text-overflow: clip;\\n}\\n\\n.lsp-completer-placeholder:after {\\n  content: 'Loading...';\\n  color: #7f7f7f;\\n}\\n\\n/* a workaround for code being larger font size than text in markdown-rendered panel */\\n.lsp-completer .jp-Completer-docpanel pre code {\\n  font-size: 90%;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\\n  --lsp-completer-label-height: 24px;\\n  --lsp-completer-detail-height: 20px;\\n  --lsp-completer-icon-width: 16px;\\n  height: var(--lsp-completer-label-height);\\n  display: grid;\\n  grid-template-areas:\\n    'icon label'\\n    'detail detail';\\n  grid-template-columns: min-content 1fr;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active {\\n  height: calc(\\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\\n  grid-area: icon;\\n  width: var(--lsp-completer-icon-width);\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  grid-area: label;\\n  overflow: hidden;\\n  height: var(--lsp-completer-label-height);\\n}\\n\\n.lsp-completer .jp-Completer-item .jp-Completer-typeExtended {\\n  max-width: var(--lsp-completer-max-detail-width);\\n  min-height: 50px;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.lsp-completer .jp-mod-active .jp-Completer-typeExtended {\\n  text-overflow: clip;\\n}\\n\\n.lsp-completer mark.lsp-elide:first-child {\\n  display: inline-block;\\n  overflow-x: clip;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  direction: rtl;\\n  /* stretch to as much space as possible */\\n  flex-shrink: 1;\\n  /* always reserve small space to fit the ellipsis */\\n  min-width: 20px;\\n}\\n\\n.lsp-completer .lsp-elide-wrapper {\\n  display: flex;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\\n  grid-area: detail;\\n  text-align: left;\\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\\n  height: var(--lsp-completer-detail-height);\\n  line-height: var(--lsp-completer-detail-height);\\n  display: none;\\n  position: relative;\\n  top: -2px;\\n  overflow: hidden;\\n  max-width: calc(\\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  overflow: hidden;\\n  max-width: calc(\\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active\\n  .jp-Completer-typeExtended {\\n  display: block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { LabIcon } from '@jupyterlab/ui-components';\nimport { Token } from '@lumino/coreutils';\n\nexport const COMPLETER_THEME_PREFIX = 'lsp-completer-theme-';\n\n// TODO, once features are extracted to standalone packages,\n//  import the CompletionItemKindStrings from @feature-completer\nenum CompletionItemKind {\n  Text = 1,\n  Method = 2,\n  Function = 3,\n  Constructor = 4,\n  Field = 5,\n  Variable = 6,\n  Class = 7,\n  Interface = 8,\n  Module = 9,\n  Property = 10,\n  Unit = 11,\n  Value = 12,\n  Enum = 13,\n  Keyword = 14,\n  Snippet = 15,\n  Color = 16,\n  File = 17,\n  Reference = 18,\n  Folder = 19,\n  EnumMember = 20,\n  Constant = 21,\n  Struct = 22,\n  Event = 23,\n  Operator = 24,\n  TypeParameter = 25\n}\n\nexport type CompletionItemKindStrings = keyof typeof CompletionItemKind;\n\nexport const PLUGIN_ID = '@jupyter-lsp/completion-manager';\n\nexport type SvgString = string;\n\ntype requiredIcons = {\n  [key in CompletionItemKindStrings]: SvgString;\n};\n\nexport const KernelKind = 'Kernel';\n\nexport interface ICompletionIconSet extends requiredIcons {\n  [KernelKind]?: SvgString;\n}\n\nexport interface ILicenseInfo {\n  /**\n   * Licence name.\n   */\n  name: string;\n  /**\n   * Abbreviation of the licence name;\n   */\n  abbreviation: string;\n  /**\n   * The copyright holder/owner name.\n   */\n  licensor: string;\n  /**\n   * Link to the full licence text.\n   */\n  link: string;\n}\n\nexport interface ICompletionTheme {\n  /**\n   * Theme identifier (which can be part of a valid HTML class name).\n   */\n  id: string;\n  /**\n   * Name of the theme.\n   */\n  name: string;\n  /**\n   * Provides object mapping completion item kind name to a string with an SVG icon,\n   * as well as icons options and metadata.\n   */\n  icons: {\n    /**\n     * Short name of the license of the icons included.\n     */\n    licence: ILicenseInfo;\n    /**\n     * The version to be used in the light mode.\n     */\n    light: ICompletionIconSet;\n    /**\n     * The version to be used in the dark mode.\n     */\n    dark?: ICompletionIconSet;\n    /**\n     * Icon properties to be set on each of the icons.\n     * NOTE: setting className here will not work, as\n     * it would be overwritten in the completer.\n     * In order to style the icons use:\n     * `.lsp-completer-theme-{id} .jp-Completer-icon svg`\n     * instead, where {id} is the identifier of your theme.\n     */\n    options?: LabIcon.IProps;\n  };\n}\n\nexport interface ILSPCompletionThemeManager {\n  get_icon(type: string): LabIcon.ILabIcon | null;\n\n  set_theme(theme_id: string | null): void;\n\n  register_theme(theme: ICompletionTheme): void;\n\n  get_iconset(\n    theme: ICompletionTheme\n  ): Map<keyof ICompletionIconSet, LabIcon.ILabIcon>;\n\n  set_icons_overrides(\n    map: Record<string, CompletionItemKindStrings | 'Kernel'>\n  ): void;\n}\n\nexport const ILSPCompletionThemeManager = new Token<ILSPCompletionThemeManager>(\n  PLUGIN_ID + ':ILSPCompletionThemeManager'\n);\n","import { TranslationBundle } from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport React, { ReactElement } from 'react';\n\nimport {\n  COMPLETER_THEME_PREFIX,\n  ICompletionTheme,\n  ILicenseInfo\n} from './types';\n\nfunction render_licence(licence: ILicenseInfo): ReactElement {\n  return (\n    <div className={'lsp-licence'}>\n      <a href={licence.link} title={licence.name}>\n        {licence.abbreviation}\n      </a>{' '}\n      {licence.licensor}\n    </div>\n  );\n}\n\ntype IconSetGetter = (theme: ICompletionTheme) => Map<string, LabIcon>;\n\nfunction render_theme(\n  trans: TranslationBundle,\n  theme: ICompletionTheme,\n  get_set: IconSetGetter,\n  is_current: boolean\n): ReactElement {\n  let icons: ReactElement[] = [];\n  for (let [name, icon] of get_set(theme)) {\n    icons.push(\n      <div className={'lsp-completer-icon-row'}>\n        <div>{name}</div>\n        <div className={'jp-Completer-icon'}>\n          <icon.react />\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div\n      className={'lsp-completer-themes ' + COMPLETER_THEME_PREFIX + theme.id}\n    >\n      <h4>\n        {theme.name}\n        {is_current ? trans.__(' (current)') : ''}\n      </h4>\n      <ul>\n        <li key={'id'}>\n          ID: <code>{theme.id}</code>\n        </li>\n        <li key={'licence'}>\n          {trans.__('Licence: ')}\n          {render_licence(theme.icons.licence)}\n        </li>\n        <li key={'dark'}>\n          {typeof theme.icons.dark === 'undefined'\n            ? ''\n            : trans.__('Includes dedicated dark mode icons set')}\n        </li>\n      </ul>\n      <div className={'lsp-completer-theme-icons'}>{icons}</div>\n    </div>\n  );\n}\n\nexport function render_themes_list(\n  trans: TranslationBundle,\n  props: {\n    themes: ICompletionTheme[];\n    current: ICompletionTheme | null;\n    get_set: IconSetGetter;\n  }\n): React.ReactElement {\n  let themes = props.themes.map(theme =>\n    render_theme(trans, theme, props.get_set, theme == props.current)\n  );\n  return <div>{themes}</div>;\n}\n","import '../style/index.css';\nimport { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport {\n  Dialog,\n  ICommandPalette,\n  IThemeManager,\n  showDialog\n} from '@jupyterlab/apputils';\nimport { ITranslator, TranslationBundle } from '@jupyterlab/translation';\nimport { LabIcon, kernelIcon } from '@jupyterlab/ui-components';\n\nimport { render_themes_list } from './about';\nimport {\n  COMPLETER_THEME_PREFIX,\n  CompletionItemKindStrings,\n  ICompletionIconSet,\n  ICompletionTheme,\n  ILSPCompletionThemeManager,\n  KernelKind,\n  PLUGIN_ID\n} from './types';\nexport * from './types';\n\nexport class CompletionThemeManager implements ILSPCompletionThemeManager {\n  protected current_icons: Map<string, LabIcon>;\n  protected themes: Map<string, ICompletionTheme>;\n  private current_theme_id: string | null = null;\n  private icons_cache: Map<string, LabIcon>;\n  private icon_overrides: Map<string, CompletionItemKindStrings>;\n  private trans: TranslationBundle;\n\n  constructor(protected themeManager: IThemeManager, trans: TranslationBundle) {\n    this.themes = new Map();\n    this.icons_cache = new Map();\n    this.icon_overrides = new Map();\n    themeManager.themeChanged.connect(this.update_icons_set, this);\n    this.trans = trans;\n  }\n\n  protected is_theme_light() {\n    const current = this.themeManager.theme;\n    if (!current) {\n      // assume true by default\n      return true;\n    }\n    return this.themeManager.isLight(current);\n  }\n\n  get_iconset(theme: ICompletionTheme): Map<keyof ICompletionIconSet, LabIcon> {\n    const icons_sets = theme.icons;\n    const dark_mode_and_dark_supported =\n      !this.is_theme_light() && typeof icons_sets.dark !== 'undefined';\n    const set: ICompletionIconSet = dark_mode_and_dark_supported\n      ? icons_sets.dark!\n      : icons_sets.light;\n    const icons: Map<keyof ICompletionIconSet, LabIcon> = new Map();\n    let options = this.current_theme?.icons?.options || {};\n    const mode = this.is_theme_light() ? 'light' : 'dark';\n    for (let [completion_kind, svg] of Object.entries(set)) {\n      let name =\n        'lsp:' + theme.id + '-' + completion_kind.toLowerCase() + '-' + mode;\n      let icon: LabIcon;\n      if (this.icons_cache.has(name)) {\n        icon = this.icons_cache.get(name)!;\n      } else {\n        icon = new LabIcon({\n          name: name,\n          svgstr: svg\n        });\n        this.icons_cache.set(name, icon);\n      }\n      icons.set(\n        completion_kind as keyof ICompletionIconSet,\n        icon.bindprops(options)\n      );\n    }\n    return icons;\n  }\n\n  protected update_icons_set() {\n    if (this.current_theme === null) {\n      return;\n    }\n    this.current_icons = this.get_iconset(this.current_theme);\n  }\n\n  get_icon(type: string): LabIcon | null {\n    if (this.current_theme === null) {\n      return null;\n    }\n    if (type) {\n      if (this.icon_overrides.has(type.toLowerCase())) {\n        type = this.icon_overrides.get(type.toLowerCase())!;\n      }\n      type =\n        type.substring(0, 1).toUpperCase() + type.substring(1).toLowerCase();\n    }\n    if (this.current_icons.has(type)) {\n      return this.current_icons.get(type)!;\n    }\n\n    if (type === KernelKind) {\n      return kernelIcon;\n    }\n    return null;\n  }\n\n  protected get current_theme_class() {\n    return COMPLETER_THEME_PREFIX + this.current_theme_id;\n  }\n\n  set_theme(id: string | null) {\n    if (this.current_theme_id) {\n      document.body.classList.remove(this.current_theme_class);\n    }\n    if (id && !this.themes.has(id)) {\n      console.warn(\n        `[LSP][Completer] Icons theme ${id} cannot be set yet (it may be loaded later).`\n      );\n    }\n    this.current_theme_id = id;\n    if (id !== null) {\n      document.body.classList.add(this.current_theme_class);\n    }\n    this.update_icons_set();\n  }\n\n  protected get current_theme(): ICompletionTheme | null {\n    if (this.current_theme_id && this.themes.has(this.current_theme_id)) {\n      return this.themes.get(this.current_theme_id)!;\n    }\n    return null;\n  }\n\n  register_theme(theme: ICompletionTheme) {\n    if (this.themes.has(theme.id)) {\n      console.warn(\n        'Theme with name',\n        theme.id,\n        'was already registered, overwriting.'\n      );\n    }\n    this.themes.set(theme.id, theme);\n    this.update_icons_set();\n  }\n\n  /**\n   * Display the registered themes in a dialog,\n   * both for the user to know what they can choose from,\n   * and for the developer to quickly check how the icons\n   * from each theme would look rendered.\n   */\n  display_themes() {\n    showDialog({\n      title: this.trans.__('LSP Completer Themes'),\n      body: render_themes_list(this.trans, {\n        themes: [...this.themes.values()],\n        current: this.current_theme,\n        get_set: this.get_iconset.bind(this)\n      }),\n      buttons: [Dialog.okButton({ label: this.trans.__('OK') })]\n    }).catch(console.warn);\n  }\n\n  set_icons_overrides(\n    iconOverrides: Record<string, CompletionItemKindStrings>\n  ) {\n    this.icon_overrides = new Map(\n      Object.keys(iconOverrides).map(kernelType => [\n        kernelType.toLowerCase(),\n        iconOverrides[kernelType]\n      ])\n    );\n  }\n}\n\nexport const COMPLETION_THEME_MANAGER: JupyterFrontEndPlugin<ILSPCompletionThemeManager> =\n  {\n    id: PLUGIN_ID,\n    requires: [IThemeManager, ICommandPalette, ITranslator],\n    activate: (\n      app,\n      themeManager: IThemeManager,\n      commandPalette: ICommandPalette,\n      translator: ITranslator\n    ) => {\n      const trans = translator.load('jupyterlab_lsp');\n      let manager = new CompletionThemeManager(themeManager, trans);\n      const command_id = 'lsp:completer-about-themes';\n      app.commands.addCommand(command_id, {\n        label: trans.__('Display the completer themes'),\n        execute: () => {\n          manager.display_themes();\n        }\n      });\n      commandPalette.addItem({\n        category: trans.__('Language server protocol'),\n        command: command_id\n      });\n      return manager;\n    },\n    provides: ILSPCompletionThemeManager,\n    autoStart: true\n  };\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","err","_iterableToArrayLimit","o","minLen","n","Object","prototype","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","options","COMPLETER_THEME_PREFIX","CompletionItemKind","PLUGIN_ID","KernelKind","ILSPCompletionThemeManager","Token","render_themes_list","trans","props","themes","theme","get_set","is_current","icons","icon","className","react","__","key","licence","href","link","title","abbreviation","licensor","dark","render_theme","current","CompletionThemeManager","themeManager","current_theme_id","Map","icons_cache","icon_overrides","themeChanged","connect","update_icons_set","is_theme_light","isLight","get_iconset","icons_sets","set","light","current_theme","mode","completion_kind","svg","entries","toLowerCase","has","get","LabIcon","svgstr","bindprops","current_icons","get_icon","type","substring","toUpperCase","kernelIcon","current_theme_class","set_theme","document","body","classList","remove","console","warn","add","register_theme","display_themes","showDialog","values","bind","buttons","Dialog","label","catch","set_icons_overrides","iconOverrides","keys","kernelType","COMPLETION_THEME_MANAGER","requires","IThemeManager","ICommandPalette","ITranslator","activate","app","commandPalette","translator","load","manager","command_id","commands","addCommand","execute","addItem","category","command","provides","autoStart","memo","getTarget","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice"],"sourceRoot":""}