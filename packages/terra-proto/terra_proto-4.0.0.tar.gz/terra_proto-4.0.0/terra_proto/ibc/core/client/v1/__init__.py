# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ibc/core/client/v1/client.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf

from .....cosmos.upgrade import v1beta1 as ____cosmos_upgrade_v1_beta1__


@dataclass(eq=False, repr=False)
class IdentifiedClientState(betterproto.Message):
    """
    IdentifiedClientState defines a client state with an additional client
    identifier field.
    """

    client_id: str = betterproto.string_field(1)
    """client identifier"""

    client_state: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(2)
    """client state"""


@dataclass(eq=False, repr=False)
class ConsensusStateWithHeight(betterproto.Message):
    """
    ConsensusStateWithHeight defines a consensus state with an additional
    height field.
    """

    height: "Height" = betterproto.message_field(1)
    """consensus state height"""

    consensus_state: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(
        2
    )
    """consensus state"""


@dataclass(eq=False, repr=False)
class ClientConsensusStates(betterproto.Message):
    """
    ClientConsensusStates defines all the stored consensus states for a given
    client.
    """

    client_id: str = betterproto.string_field(1)
    """client identifier"""

    consensus_states: List["ConsensusStateWithHeight"] = betterproto.message_field(2)
    """consensus states and their heights associated with the client"""


@dataclass(eq=False, repr=False)
class ClientUpdateProposal(betterproto.Message):
    """
    ClientUpdateProposal is a governance proposal. If it passes, the substitute
    client's latest consensus state is copied over to the subject client. The
    proposal handler may fail if the subject and the substitute do not match in
    client and chain parameters (with exception to latest height, frozen
    height, and chain-id).
    """

    title: str = betterproto.string_field(1)
    """the title of the update proposal"""

    description: str = betterproto.string_field(2)
    """the description of the proposal"""

    subject_client_id: str = betterproto.string_field(3)
    """
    the client identifier for the client to be updated if the proposal passes
    """

    substitute_client_id: str = betterproto.string_field(4)
    """
    the substitute client identifier for the client standing in for the subject
    client
    """


@dataclass(eq=False, repr=False)
class UpgradeProposal(betterproto.Message):
    """
    UpgradeProposal is a gov Content type for initiating an IBC breaking
    upgrade.
    """

    title: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    plan: "____cosmos_upgrade_v1_beta1__.Plan" = betterproto.message_field(3)
    upgraded_client_state: "betterproto_lib_google_protobuf.Any" = (
        betterproto.message_field(4)
    )
    """
    An UpgradedClientState must be provided to perform an IBC breaking upgrade.
    This will make the chain commit to the correct upgraded (self) client state
    before the upgrade occurs, so that connecting chains can verify that the
    new upgraded client is valid by verifying a proof on the previous version
    of the chain. This will allow IBC connections to persist smoothly across
    planned chain upgrades
    """


@dataclass(eq=False, repr=False)
class Height(betterproto.Message):
    """
    Height is a monotonically increasing data type that can be compared against
    another Height for the purposes of updating and freezing clients Normally
    the RevisionHeight is incremented at each height while keeping
    RevisionNumber the same. However some consensus algorithms may choose to
    reset the height in certain conditions e.g. hard forks, state-machine
    breaking changes In these cases, the RevisionNumber is incremented so that
    height continues to be monitonically increasing even as the RevisionHeight
    gets reset
    """

    revision_number: int = betterproto.uint64_field(1)
    """the revision that the client is currently on"""

    revision_height: int = betterproto.uint64_field(2)
    """the height within the given revision"""


@dataclass(eq=False, repr=False)
class Params(betterproto.Message):
    """Params defines the set of IBC light client parameters."""

    allowed_clients: List[str] = betterproto.string_field(1)
    """
    allowed_clients defines the list of allowed client state types which can be
    created and interacted with. If a client type is removed from the allowed
    clients list, usage of this client will be disabled until it is added again
    to the list.
    """
